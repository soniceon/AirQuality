var e=Object.defineProperty,a=(a,t,n)=>(((a,t,n)=>{t in a?e(a,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[t]=n})(a,"symbol"!=typeof t?t+"":t,n),n);import{r as t,a as n,R as i}from"./react-vendor-5e9589d4.js";import{W as o,S as r,T as s,D as l,C as u,A as d,X as c}from"./ui-vendor-7b759502.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver((e=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&a(e)})).observe(document,{childList:!0,subtree:!0})}function a(e){if(e.ep)return;e.ep=!0;const a=function(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?a.credentials="include":"anonymous"===e.crossOrigin?a.credentials="omit":a.credentials="same-origin",a}(e);fetch(e.href,a)}}();var h={exports:{}},p={},m=t,g=Symbol.for("react.element"),f=Symbol.for("react.fragment"),b=Object.prototype.hasOwnProperty,y=m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,k={key:!0,ref:!0,__self:!0,__source:!0};function v(e,a,t){var n,i={},o=null,r=null;for(n in void 0!==t&&(o=""+t),void 0!==a.key&&(o=""+a.key),void 0!==a.ref&&(r=a.ref),a)b.call(a,n)&&!k.hasOwnProperty(n)&&(i[n]=a[n]);if(e&&e.defaultProps)for(n in a=e.defaultProps)void 0===i[n]&&(i[n]=a[n]);return{$$typeof:g,type:e,key:o,ref:r,props:i,_owner:y.current}}p.Fragment=f,p.jsx=v,p.jsxs=v,h.exports=p;var x=h.exports,w={},j=n;w.createRoot=j.createRoot,w.hydrateRoot=j.hydrateRoot;const S={};var z={};Object.defineProperty(z,"__esModule",{value:!0}),z.parse=function(e,a){const t=new M,n=e.length;if(n<2)return t;const i=(null==a?void 0:a.decode)||E;let o=0;do{const a=e.indexOf("=",o);if(-1===a)break;const r=e.indexOf(";",o),s=-1===r?n:r;if(a>s){o=e.lastIndexOf(";",a-1)+1;continue}const l=I(e,o,a),u=q(e,a,l),d=e.slice(l,u);if(void 0===t[d]){let n=I(e,a+1,s),o=q(e,s,n);const r=i(e.slice(n,o));t[d]=r}o=s+1}while(o<n);return t},z.serialize=function(e,a,t){const n=(null==t?void 0:t.encode)||encodeURIComponent;if(!P.test(e))throw new TypeError(`argument name is invalid: ${e}`);const i=n(a);if(!N.test(i))throw new TypeError(`argument val is invalid: ${a}`);let o=e+"="+i;if(!t)return o;if(void 0!==t.maxAge){if(!Number.isInteger(t.maxAge))throw new TypeError(`option maxAge is invalid: ${t.maxAge}`);o+="; Max-Age="+t.maxAge}if(t.domain){if(!L.test(t.domain))throw new TypeError(`option domain is invalid: ${t.domain}`);o+="; Domain="+t.domain}if(t.path){if(!C.test(t.path))throw new TypeError(`option path is invalid: ${t.path}`);o+="; Path="+t.path}if(t.expires){if(!function(e){return"[object Date]"===A.call(e)}(t.expires)||!Number.isFinite(t.expires.valueOf()))throw new TypeError(`option expires is invalid: ${t.expires}`);o+="; Expires="+t.expires.toUTCString()}t.httpOnly&&(o+="; HttpOnly");t.secure&&(o+="; Secure");t.partitioned&&(o+="; Partitioned");if(t.priority){switch("string"==typeof t.priority?t.priority.toLowerCase():void 0){case"low":o+="; Priority=Low";break;case"medium":o+="; Priority=Medium";break;case"high":o+="; Priority=High";break;default:throw new TypeError(`option priority is invalid: ${t.priority}`)}}if(t.sameSite){switch("string"==typeof t.sameSite?t.sameSite.toLowerCase():t.sameSite){case!0:case"strict":o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"none":o+="; SameSite=None";break;default:throw new TypeError(`option sameSite is invalid: ${t.sameSite}`)}}return o};const P=/^[\u0021-\u003A\u003C\u003E-\u007E]+$/,N=/^[\u0021-\u003A\u003C-\u007E]*$/,L=/^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i,C=/^[\u0020-\u003A\u003D-\u007E]*$/,A=Object.prototype.toString,M=(()=>{const e=function(){};return e.prototype=Object.create(null),e})();function I(e,a,t){do{const t=e.charCodeAt(a);if(32!==t&&9!==t)return a}while(++a<t);return t}function q(e,a,t){for(;a>t;){const t=e.charCodeAt(--a);if(32!==t&&9!==t)return a+1}return t}function E(e){if(-1===e.indexOf("%"))return e;try{return decodeURIComponent(e)}catch(a){return e}}var O="popstate";function R(e={}){return function(e,a,t,n={}){let{window:i=document.defaultView,v5Compat:o=!1}=n,r=i.history,s="POP",l=null,u=d();null==u&&(u=0,r.replaceState({...r.state,idx:u},""));function d(){return(r.state||{idx:null}).idx}function c(){s="POP";let e=d(),a=null==e?null:e-u;u=e,l&&l({action:s,location:g.location,delta:a})}function h(e,a){s="PUSH";let n=Q(g.location,e,a);t&&t(n,e),u=d()+1;let c=$(n,u),h=g.createHref(n);try{r.pushState(c,"",h)}catch(p){if(p instanceof DOMException&&"DataCloneError"===p.name)throw p;i.location.assign(h)}o&&l&&l({action:s,location:g.location,delta:1})}function p(e,a){s="REPLACE";let n=Q(g.location,e,a);t&&t(n,e),u=d();let i=$(n,u),c=g.createHref(n);r.replaceState(i,"",c),o&&l&&l({action:s,location:g.location,delta:0})}function m(e){return function(e,a=!1){let t="http://localhost";"undefined"!=typeof window&&(t="null"!==window.location.origin?window.location.origin:window.location.href);T(t,"No window.location.(origin|href) available to create URL");let n="string"==typeof e?e:F(e);n=n.replace(/ $/,"%20"),!a&&n.startsWith("//")&&(n=t+n);return new URL(n,t)}(e)}let g={get action(){return s},get location(){return e(i,r)},listen(e){if(l)throw new Error("A history only accepts one active listener");return i.addEventListener(O,c),l=e,()=>{i.removeEventListener(O,c),l=null}},createHref:e=>a(i,e),createURL:m,encodeLocation(e){let a=m(e);return{pathname:a.pathname,search:a.search,hash:a.hash}},push:h,replace:p,go:e=>r.go(e)};return g}((function(e,a){let{pathname:t,search:n,hash:i}=e.location;return Q("",{pathname:t,search:n,hash:i},a.state&&a.state.usr||null,a.state&&a.state.key||"default")}),(function(e,a){return"string"==typeof a?a:F(a)}),null,e)}function T(e,a){if(!1===e||null==e)throw new Error(a)}function D(e,a){if(!e)try{throw new Error(a)}catch(t){}}function $(e,a){return{usr:e.state,key:e.key,idx:a}}function Q(e,a,t=null,n){return{pathname:"string"==typeof e?e:e.pathname,search:"",hash:"",..."string"==typeof a?B(a):a,state:t,key:a&&a.key||n||Math.random().toString(36).substring(2,10)}}function F({pathname:e="/",search:a="",hash:t=""}){return a&&"?"!==a&&(e+="?"===a.charAt(0)?a:"?"+a),t&&"#"!==t&&(e+="#"===t.charAt(0)?t:"#"+t),e}function B(e){let a={};if(e){let t=e.indexOf("#");t>=0&&(a.hash=e.substring(t),e=e.substring(0,t));let n=e.indexOf("?");n>=0&&(a.search=e.substring(n),e=e.substring(0,n)),e&&(a.pathname=e)}return a}function K(e,a,t="/"){return function(e,a,t,n){let i="string"==typeof a?B(a):a,o=ne(i.pathname||"/",t);if(null==o)return null;let r=U(e);!function(e){e.sort(((e,a)=>e.score!==a.score?a.score-e.score:function(e,a){let t=e.length===a.length&&e.slice(0,-1).every(((e,t)=>e===a[t]));return t?e[e.length-1]-a[a.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),a.routesMeta.map((e=>e.childrenIndex)))))}(r);let s=null;for(let l=0;null==s&&l<r.length;++l){let e=te(o);s=ee(r[l],e,n)}return s}(e,a,t,!1)}function U(e,a=[],t=[],n=""){let i=(e,i,o)=>{let r={relativePath:void 0===o?e.path||"":o,caseSensitive:!0===e.caseSensitive,childrenIndex:i,route:e};r.relativePath.startsWith("/")&&(T(r.relativePath.startsWith(n),`Absolute route path "${r.relativePath}" nested under path "${n}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),r.relativePath=r.relativePath.slice(n.length));let s=se([n,r.relativePath]),l=t.concat(r);e.children&&e.children.length>0&&(T(!0!==e.index,`Index routes must not have child routes. Please remove all child routes from route path "${s}".`),U(e.children,a,l,s)),(null!=e.path||e.index)&&a.push({path:s,score:X(s,e.index),routesMeta:l})};return e.forEach(((e,a)=>{var t;if(""!==e.path&&(null==(t=e.path)?void 0:t.includes("?")))for(let n of H(e.path))i(e,a,n);else i(e,a)})),a}function H(e){let a=e.split("/");if(0===a.length)return[];let[t,...n]=a,i=t.endsWith("?"),o=t.replace(/\?$/,"");if(0===n.length)return i?[o,""]:[o];let r=H(n.join("/")),s=[];return s.push(...r.map((e=>""===e?o:[o,e].join("/")))),i&&s.push(...r),s.map((a=>e.startsWith("/")&&""===a?"/":a))}var V=/^:[\w-]+$/,W=3,G=2,_=1,Y=10,Z=-2,J=e=>"*"===e;function X(e,a){let t=e.split("/"),n=t.length;return t.some(J)&&(n+=Z),a&&(n+=G),t.filter((e=>!J(e))).reduce(((e,a)=>e+(V.test(a)?W:""===a?_:Y)),n)}function ee(e,a,t=!1){let{routesMeta:n}=e,i={},o="/",r=[];for(let s=0;s<n.length;++s){let e=n[s],l=s===n.length-1,u="/"===o?a:a.slice(o.length)||"/",d=ae({path:e.relativePath,caseSensitive:e.caseSensitive,end:l},u),c=e.route;if(!d&&l&&t&&!n[n.length-1].route.index&&(d=ae({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},u)),!d)return null;Object.assign(i,d.params),r.push({params:i,pathname:se([o,d.pathname]),pathnameBase:le(se([o,d.pathnameBase])),route:c}),"/"!==d.pathnameBase&&(o=se([o,d.pathnameBase]))}return r}function ae(e,a){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[t,n]=function(e,a=!1,t=!0){D("*"===e||!e.endsWith("*")||e.endsWith("/*"),`Route path "${e}" will be treated as if it were "${e.replace(/\*$/,"/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${e.replace(/\*$/,"/*")}".`);let n=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,a,t)=>(n.push({paramName:a,isOptional:null!=t}),t?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(n.push({paramName:"*"}),i+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?i+="\\/*$":""!==e&&"/"!==e&&(i+="(?:(?=\\/|$))");let o=new RegExp(i,a?void 0:"i");return[o,n]}(e.path,e.caseSensitive,e.end),i=a.match(t);if(!i)return null;let o=i[0],r=o.replace(/(.)\/+$/,"$1"),s=i.slice(1);return{params:n.reduce(((e,{paramName:a,isOptional:t},n)=>{if("*"===a){let e=s[n]||"";r=o.slice(0,o.length-e.length).replace(/(.)\/+$/,"$1")}const i=s[n];return e[a]=t&&!i?void 0:(i||"").replace(/%2F/g,"/"),e}),{}),pathname:o,pathnameBase:r,pattern:e}}function te(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(a){return D(!1,`The URL path "${e}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${a}).`),e}}function ne(e,a){if("/"===a)return e;if(!e.toLowerCase().startsWith(a.toLowerCase()))return null;let t=a.endsWith("/")?a.length-1:a.length,n=e.charAt(t);return n&&"/"!==n?null:e.slice(t)||"/"}function ie(e,a,t,n){return`Cannot include a '${e}' character in a manually specified \`to.${a}\` field [${JSON.stringify(n)}].  Please separate it out to the \`to.${t}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`}function oe(e){let a=function(e){return e.filter(((e,a)=>0===a||e.route.path&&e.route.path.length>0))}(e);return a.map(((e,t)=>t===a.length-1?e.pathname:e.pathnameBase))}function re(e,a,t,n=!1){let i;"string"==typeof e?i=B(e):(i={...e},T(!i.pathname||!i.pathname.includes("?"),ie("?","pathname","search",i)),T(!i.pathname||!i.pathname.includes("#"),ie("#","pathname","hash",i)),T(!i.search||!i.search.includes("#"),ie("#","search","hash",i)));let o,r=""===e||""===i.pathname,s=r?"/":i.pathname;if(null==s)o=t;else{let e=a.length-1;if(!n&&s.startsWith("..")){let a=s.split("/");for(;".."===a[0];)a.shift(),e-=1;i.pathname=a.join("/")}o=e>=0?a[e]:"/"}let l=function(e,a="/"){let{pathname:t,search:n="",hash:i=""}="string"==typeof e?B(e):e,o=t?t.startsWith("/")?t:function(e,a){let t=a.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?t.length>1&&t.pop():"."!==e&&t.push(e)})),t.length>1?t.join("/"):"/"}(t,a):a;return{pathname:o,search:ue(n),hash:de(i)}}(i,o),u=s&&"/"!==s&&s.endsWith("/"),d=(r||"."===s)&&t.endsWith("/");return l.pathname.endsWith("/")||!u&&!d||(l.pathname+="/"),l}var se=e=>e.join("/").replace(/\/\/+/g,"/"),le=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),ue=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",de=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";var ce=["POST","PUT","PATCH","DELETE"];new Set(ce);var he=["GET",...ce];new Set(he);var pe=t.createContext(null);pe.displayName="DataRouter";var me=t.createContext(null);me.displayName="DataRouterState";var ge=t.createContext({isTransitioning:!1});ge.displayName="ViewTransition",t.createContext(new Map).displayName="Fetchers",t.createContext(null).displayName="Await";var fe=t.createContext(null);fe.displayName="Navigation";var be=t.createContext(null);be.displayName="Location";var ye=t.createContext({outlet:null,matches:[],isDataRoute:!1});ye.displayName="Route";var ke=t.createContext(null);function ve(){return null!=t.useContext(be)}function xe(){return T(ve(),"useLocation() may be used only in the context of a <Router> component."),t.useContext(be).location}ke.displayName="RouteError";var we="You should call navigate() in a React.useEffect(), not when your component is first rendered.";function je(e){t.useContext(fe).static||t.useLayoutEffect(e)}function Se(){let{isDataRoute:e}=t.useContext(ye);return e?function(){let{router:e}=function(e){let a=t.useContext(pe);return T(a,Me(e)),a}("useNavigate"),a=Ie("useNavigate"),n=t.useRef(!1);return je((()=>{n.current=!0})),t.useCallback((async(t,i={})=>{D(n.current,we),n.current&&("number"==typeof t?e.navigate(t):await e.navigate(t,{fromRouteId:a,...i}))}),[e,a])}():function(){T(ve(),"useNavigate() may be used only in the context of a <Router> component.");let e=t.useContext(pe),{basename:a,navigator:n}=t.useContext(fe),{matches:i}=t.useContext(ye),{pathname:o}=xe(),r=JSON.stringify(oe(i)),s=t.useRef(!1);return je((()=>{s.current=!0})),t.useCallback(((t,i={})=>{if(D(s.current,we),!s.current)return;if("number"==typeof t)return void n.go(t);let l=re(t,JSON.parse(r),o,"path"===i.relative);null==e&&"/"!==a&&(l.pathname="/"===l.pathname?a:se([a,l.pathname])),(i.replace?n.replace:n.push)(l,i.state,i)}),[a,n,r,o,e])}()}function ze(e,{relative:a}={}){let{matches:n}=t.useContext(ye),{pathname:i}=xe(),o=JSON.stringify(oe(n));return t.useMemo((()=>re(e,JSON.parse(o),i,"path"===a)),[e,o,i,a])}function Pe(e,a,n,i){var o;T(ve(),"useRoutes() may be used only in the context of a <Router> component.");let{navigator:r}=t.useContext(fe),{matches:s}=t.useContext(ye),l=s[s.length-1],u=l?l.params:{},d=l?l.pathname:"/",c=l?l.pathnameBase:"/",h=l&&l.route;{let e=h&&h.path||"";Ee(d,!h||e.endsWith("*")||e.endsWith("*?"),`You rendered descendant <Routes> (or called \`useRoutes()\`) at "${d}" (under <Route path="${e}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path="${e}"> to <Route path="${"/"===e?"*":`${e}/*`}">.`)}let p,m=xe();if(a){let e="string"==typeof a?B(a):a;T("/"===c||(null==(o=e.pathname)?void 0:o.startsWith(c)),`When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${c}" but pathname "${e.pathname}" was given in the \`location\` prop.`),p=e}else p=m;let g=p.pathname||"/",f=g;if("/"!==c){let e=c.replace(/^\//,"").split("/");f="/"+g.replace(/^\//,"").split("/").slice(e.length).join("/")}let b=K(e,{pathname:f});D(h||null!=b,`No routes matched location "${p.pathname}${p.search}${p.hash}" `),D(null==b||void 0!==b[b.length-1].route.element||void 0!==b[b.length-1].route.Component||void 0!==b[b.length-1].route.lazy,`Matched leaf route at location "${p.pathname}${p.search}${p.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);let y=function(e,a=[],n=null){if(null==e){if(!n)return null;if(n.errors)e=n.matches;else{if(0!==a.length||n.initialized||!(n.matches.length>0))return null;e=n.matches}}let i=e,o=null==n?void 0:n.errors;if(null!=o){let e=i.findIndex((e=>e.route.id&&void 0!==(null==o?void 0:o[e.route.id])));T(e>=0,`Could not find a matching route for errors on route IDs: ${Object.keys(o).join(",")}`),i=i.slice(0,Math.min(i.length,e+1))}let r=!1,s=-1;if(n)for(let t=0;t<i.length;t++){let e=i[t];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(s=t),e.route.id){let{loaderData:a,errors:t}=n,o=e.route.loader&&!a.hasOwnProperty(e.route.id)&&(!t||void 0===t[e.route.id]);if(e.route.lazy||o){r=!0,i=s>=0?i.slice(0,s+1):[i[0]];break}}}return i.reduceRight(((e,l,u)=>{let d,c=!1,h=null,p=null;n&&(d=o&&l.route.id?o[l.route.id]:void 0,h=l.route.errorElement||Le,r&&(s<0&&0===u?(Ee("route-fallback",!1,"No `HydrateFallback` element provided to render during initial hydration"),c=!0,p=null):s===u&&(c=!0,p=l.route.hydrateFallbackElement||null)));let m=a.concat(i.slice(0,u+1)),g=()=>{let a;return a=d?h:c?p:l.route.Component?t.createElement(l.route.Component,null):l.route.element?l.route.element:e,t.createElement(Ae,{match:l,routeContext:{outlet:e,matches:m,isDataRoute:null!=n},children:a})};return n&&(l.route.ErrorBoundary||l.route.errorElement||0===u)?t.createElement(Ce,{location:n.location,revalidation:n.revalidation,component:h,error:d,children:g(),routeContext:{outlet:null,matches:m,isDataRoute:!0}}):g()}),null)}(b&&b.map((e=>Object.assign({},e,{params:Object.assign({},u,e.params),pathname:se([c,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:se([c,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),s,n,i);return a&&y?t.createElement(be.Provider,{value:{location:{pathname:"/",search:"",hash:"",state:null,key:"default",...p},navigationType:"POP"}},y):y}function Ne(){let e=function(){var e;let a=t.useContext(ke),n=function(e){let a=t.useContext(me);return T(a,Me(e)),a}("useRouteError"),i=Ie("useRouteError");if(void 0!==a)return a;return null==(e=n.errors)?void 0:e[i]}(),a=function(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}(e)?`${e.status} ${e.statusText}`:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,i="rgba(200,200,200, 0.5)",o={padding:"0.5rem",backgroundColor:i},r={padding:"2px 4px",backgroundColor:i},s=null;return s=t.createElement(t.Fragment,null,t.createElement("p",null,"💿 Hey developer 👋"),t.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",t.createElement("code",{style:r},"ErrorBoundary")," or"," ",t.createElement("code",{style:r},"errorElement")," prop on your route.")),t.createElement(t.Fragment,null,t.createElement("h2",null,"Unexpected Application Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},a),n?t.createElement("pre",{style:o},n):null,s)}t.createContext(null);var Le=t.createElement(Ne,null),Ce=class extends t.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,a){return a.location!==e.location||"idle"!==a.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:a.error,location:a.location,revalidation:e.revalidation||a.revalidation}}componentDidCatch(e,a){}render(){return void 0!==this.state.error?t.createElement(ye.Provider,{value:this.props.routeContext},t.createElement(ke.Provider,{value:this.state.error,children:this.props.component})):this.props.children}};function Ae({routeContext:e,match:a,children:n}){let i=t.useContext(pe);return i&&i.static&&i.staticContext&&(a.route.errorElement||a.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=a.route.id),t.createElement(ye.Provider,{value:e},n)}function Me(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function Ie(e){let a=function(e){let a=t.useContext(ye);return T(a,Me(e)),a}(e),n=a.matches[a.matches.length-1];return T(n.route.id,`${e} can only be used on routes that contain a unique "id"`),n.route.id}var qe={};function Ee(e,a,t){a||qe[e]||(qe[e]=!0,D(!1,t))}function Oe(e){T(!1,"A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.")}function Re({basename:e="/",children:a=null,location:n,navigationType:i="POP",navigator:o,static:r=!1}){T(!ve(),"You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");let s=e.replace(/^\/*/,"/"),l=t.useMemo((()=>({basename:s,navigator:o,static:r,future:{}})),[s,o,r]);"string"==typeof n&&(n=B(n));let{pathname:u="/",search:d="",hash:c="",state:h=null,key:p="default"}=n,m=t.useMemo((()=>{let e=ne(u,s);return null==e?null:{location:{pathname:e,search:d,hash:c,state:h,key:p},navigationType:i}}),[s,u,d,c,h,p,i]);return D(null!=m,`<Router basename="${s}"> is not able to match the URL "${u}${d}${c}" because it does not start with the basename, so the <Router> won't render anything.`),null==m?null:t.createElement(fe.Provider,{value:l},t.createElement(be.Provider,{children:a,value:m}))}function Te({children:e,location:a}){return Pe(De(e),a)}function De(e,a=[]){let n=[];return t.Children.forEach(e,((e,i)=>{if(!t.isValidElement(e))return;let o=[...a,i];if(e.type===t.Fragment)return void n.push.apply(n,De(e.props.children,o));T(e.type===Oe,`[${"string"==typeof e.type?e.type:e.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`),T(!e.props.index||!e.props.children,"An index route cannot have child routes.");let r={id:e.props.id||o.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,hydrateFallbackElement:e.props.hydrateFallbackElement,HydrateFallback:e.props.HydrateFallback,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:!0===e.props.hasErrorBoundary||null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(r.children=De(e.props.children,o)),n.push(r)})),n}t.memo((function({routes:e,future:a,state:t}){return Pe(e,void 0,t,a)}));var $e="get",Qe="application/x-www-form-urlencoded";function Fe(e){return null!=e&&"string"==typeof e.tagName}var Be=null;var Ke=new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);function Ue(e){return null==e||Ke.has(e)?e:(D(!1,`"${e}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${Qe}"`),null)}function He(e,a){let t,n,i,o,r;if(Fe(s=e)&&"form"===s.tagName.toLowerCase()){let r=e.getAttribute("action");n=r?ne(r,a):null,t=e.getAttribute("method")||$e,i=Ue(e.getAttribute("enctype"))||Qe,o=new FormData(e)}else if(function(e){return Fe(e)&&"button"===e.tagName.toLowerCase()}(e)||function(e){return Fe(e)&&"input"===e.tagName.toLowerCase()}(e)&&("submit"===e.type||"image"===e.type)){let r=e.form;if(null==r)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');let s=e.getAttribute("formaction")||r.getAttribute("action");if(n=s?ne(s,a):null,t=e.getAttribute("formmethod")||r.getAttribute("method")||$e,i=Ue(e.getAttribute("formenctype"))||Ue(r.getAttribute("enctype"))||Qe,o=new FormData(r,e),!function(){if(null===Be)try{new FormData(document.createElement("form"),0),Be=!1}catch(e){Be=!0}return Be}()){let{name:a,type:t,value:n}=e;if("image"===t){let e=a?`${a}.`:"";o.append(`${e}x`,"0"),o.append(`${e}y`,"0")}else a&&o.append(a,n)}}else{if(Fe(e))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');t=$e,n=null,i=Qe,r=e}var s;return o&&"text/plain"===i&&(r=o,o=void 0),{action:n,method:t.toLowerCase(),encType:i,formData:o,body:r}}function Ve(e,a){if(!1===e||null==e)throw new Error(a)}async function We(e,a){if(e.id in a)return a[e.id];try{let t=await function(e,a,t){if(!a||0===a.length)return e();const n=document.getElementsByTagName("link");return Promise.all(a.map((e=>{if((e=function(e){return"/"+e}(e))in S)return;S[e]=!0;const a=e.endsWith(".css"),i=a?'[rel="stylesheet"]':"";if(t)for(let t=n.length-1;t>=0;t--){const i=n[t];if(i.href===e&&(!a||"stylesheet"===i.rel))return}else if(document.querySelector(`link[href="${e}"]${i}`))return;const o=document.createElement("link");return o.rel=a?"stylesheet":"modulepreload",a||(o.as="script",o.crossOrigin=""),o.href=e,document.head.appendChild(o),a?new Promise(((a,t)=>{o.addEventListener("load",a),o.addEventListener("error",(()=>t(new Error(`Unable to preload CSS for ${e}`))))})):void 0}))).then((()=>e())).catch((e=>{const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=e,window.dispatchEvent(a),!a.defaultPrevented)throw e}))}((()=>import(e.module)),[]);return a[e.id]=t,t}catch(t){return window.__reactRouterContext&&window.__reactRouterContext.isSpaMode,window.location.reload(),new Promise((()=>{}))}}function Ge(e){return null!=e&&(null==e.href?"preload"===e.rel&&"string"==typeof e.imageSrcSet&&"string"==typeof e.imageSizes:"string"==typeof e.rel&&"string"==typeof e.href)}async function _e(e,a,t){return function(e,a){let t=new Set,n=new Set(a);return e.reduce(((e,i)=>{var o;if(a&&!(null!=(o=i)&&"string"==typeof o.page)&&"script"===i.as&&i.href&&n.has(i.href))return e;let r=JSON.stringify(function(e){let a={},t=Object.keys(e).sort();for(let n of t)a[n]=e[n];return a}(i));return t.has(r)||(t.add(r),e.push({key:r,link:i})),e}),[])}((await Promise.all(e.map((async e=>{let n=a.routes[e.route.id];if(n){let e=await We(n,t);return e.links?e.links():[]}return[]})))).flat(1).filter(Ge).filter((e=>"stylesheet"===e.rel||"preload"===e.rel)).map((e=>"stylesheet"===e.rel?{...e,rel:"prefetch",as:"style"}:{...e,rel:"prefetch"})))}function Ye(e,a,t,n,i,o){let r=(e,a)=>!t[a]||e.route.id!==t[a].route.id,s=(e,a)=>{var n;return t[a].pathname!==e.pathname||(null==(n=t[a].route.path)?void 0:n.endsWith("*"))&&t[a].params["*"]!==e.params["*"]};return"assets"===o?a.filter(((e,a)=>r(e,a)||s(e,a))):"data"===o?a.filter(((a,o)=>{var l;let u=n.routes[a.route.id];if(!u||!u.hasLoader)return!1;if(r(a,o)||s(a,o))return!0;if(a.route.shouldRevalidate){let n=a.route.shouldRevalidate({currentUrl:new URL(i.pathname+i.search+i.hash,window.origin),currentParams:(null==(l=t[0])?void 0:l.params)||{},nextUrl:new URL(e,window.origin),nextParams:a.params,defaultShouldRevalidate:!0});if("boolean"==typeof n)return n}return!0})):[]}function Ze(e,a,{includeHydrateFallback:t}={}){return n=e.map((e=>{let n=a.routes[e.route.id];if(!n)return[];let i=[n.module];return n.clientActionModule&&(i=i.concat(n.clientActionModule)),n.clientLoaderModule&&(i=i.concat(n.clientLoaderModule)),t&&n.hydrateFallbackModule&&(i=i.concat(n.hydrateFallbackModule)),n.imports&&(i=i.concat(n.imports)),i})).flat(1),[...new Set(n)];var n}Object.getOwnPropertyNames(Object.prototype).sort().join("\0");function Je(){let e=t.useContext(pe);return Ve(e,"You must render this element inside a <DataRouterContext.Provider> element"),e}var Xe=t.createContext(void 0);function ea(){let e=t.useContext(Xe);return Ve(e,"You must render this element inside a <HydratedRouter> element"),e}function aa(e,a){return t=>{e&&e(t),t.defaultPrevented||a(t)}}function ta({page:e,...a}){let{router:n}=Je(),i=t.useMemo((()=>K(n.routes,e,n.basename)),[n.routes,e,n.basename]);return i?t.createElement(na,{page:e,matches:i,...a}):null}function na({page:e,matches:a,...n}){let i=xe(),{manifest:o,routeModules:r}=ea(),{basename:s}=Je(),{loaderData:l,matches:u}=function(){let e=t.useContext(me);return Ve(e,"You must render this element inside a <DataRouterStateContext.Provider> element"),e}(),d=t.useMemo((()=>Ye(e,a,u,o,i,"data")),[e,a,u,o,i]),c=t.useMemo((()=>Ye(e,a,u,o,i,"assets")),[e,a,u,o,i]),h=t.useMemo((()=>{if(e===i.pathname+i.search+i.hash)return[];let t=new Set,n=!1;if(a.forEach((e=>{var a;let i=o.routes[e.route.id];i&&i.hasLoader&&(!d.some((a=>a.route.id===e.route.id))&&e.route.id in l&&(null==(a=r[e.route.id])?void 0:a.shouldRevalidate)||i.hasClientLoader?n=!0:t.add(e.route.id))})),0===t.size)return[];let u=function(e,a){let t="string"==typeof e?new URL(e,"undefined"==typeof window?"server://singlefetch/":window.location.origin):e;return"/"===t.pathname?t.pathname="_root.data":a&&"/"===ne(t.pathname,a)?t.pathname=`${a.replace(/\/$/,"")}/_root.data`:t.pathname=`${t.pathname.replace(/\/$/,"")}.data`,t}(e,s);return n&&t.size>0&&u.searchParams.set("_routes",a.filter((e=>t.has(e.route.id))).map((e=>e.route.id)).join(",")),[u.pathname+u.search]}),[s,l,i,o,d,a,e,r]),p=t.useMemo((()=>Ze(c,o)),[c,o]),m=function(e){let{manifest:a,routeModules:n}=ea(),[i,o]=t.useState([]);return t.useEffect((()=>{let t=!1;return _e(e,a,n).then((e=>{t||o(e)})),()=>{t=!0}}),[e,a,n]),i}(c);return t.createElement(t.Fragment,null,h.map((e=>t.createElement("link",{key:e,rel:"prefetch",as:"fetch",href:e,...n}))),p.map((e=>t.createElement("link",{key:e,rel:"modulepreload",href:e,...n}))),m.map((({key:e,link:a})=>t.createElement("link",{key:e,...a}))))}function ia(...e){return a=>{e.forEach((e=>{"function"==typeof e?e(a):null!=e&&(e.current=a)}))}}Xe.displayName="FrameworkContext";var oa="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement;try{oa&&(window.__reactRouterVersion="7.6.2")}catch(gn){}function ra({basename:e,children:a,window:n}){let i=t.useRef();null==i.current&&(i.current=R({window:n,v5Compat:!0}));let o=i.current,[r,s]=t.useState({action:o.action,location:o.location}),l=t.useCallback((e=>{t.startTransition((()=>s(e)))}),[s]);return t.useLayoutEffect((()=>o.listen(l)),[o,l]),t.createElement(Re,{basename:e,children:a,location:r.location,navigationType:r.action,navigator:o})}var sa=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,la=t.forwardRef((function({onClick:e,discover:a="render",prefetch:n="none",relative:i,reloadDocument:o,replace:r,state:s,target:l,to:u,preventScrollReset:d,viewTransition:c,...h},p){let m,{basename:g}=t.useContext(fe),f="string"==typeof u&&sa.test(u),b=!1;if("string"==typeof u&&f&&(m=u,oa))try{let e=new URL(window.location.href),a=u.startsWith("//")?new URL(e.protocol+u):new URL(u),t=ne(a.pathname,g);a.origin===e.origin&&null!=t?u=t+a.search+a.hash:b=!0}catch(gn){D(!1,`<Link to="${u}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)}let y=function(e,{relative:a}={}){T(ve(),"useHref() may be used only in the context of a <Router> component.");let{basename:n,navigator:i}=t.useContext(fe),{hash:o,pathname:r,search:s}=ze(e,{relative:a}),l=r;return"/"!==n&&(l="/"===r?n:se([n,r])),i.createHref({pathname:l,search:s,hash:o})}(u,{relative:i}),[k,v,x]=function(e,a){let n=t.useContext(Xe),[i,o]=t.useState(!1),[r,s]=t.useState(!1),{onFocus:l,onBlur:u,onMouseEnter:d,onMouseLeave:c,onTouchStart:h}=a,p=t.useRef(null);t.useEffect((()=>{if("render"===e&&s(!0),"viewport"===e){let e=new IntersectionObserver((e=>{e.forEach((e=>{s(e.isIntersecting)}))}),{threshold:.5});return p.current&&e.observe(p.current),()=>{e.disconnect()}}}),[e]),t.useEffect((()=>{if(i){let e=setTimeout((()=>{s(!0)}),100);return()=>{clearTimeout(e)}}}),[i]);let m=()=>{o(!0)},g=()=>{o(!1),s(!1)};return n?"intent"!==e?[r,p,{}]:[r,p,{onFocus:aa(l,m),onBlur:aa(u,g),onMouseEnter:aa(d,m),onMouseLeave:aa(c,g),onTouchStart:aa(h,m)}]:[!1,p,{}]}(n,h),w=function(e,{target:a,replace:n,state:i,preventScrollReset:o,relative:r,viewTransition:s}={}){let l=Se(),u=xe(),d=ze(e,{relative:r});return t.useCallback((t=>{if(function(e,a){return!(0!==e.button||a&&"_self"!==a||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))}(t,a)){t.preventDefault();let a=void 0!==n?n:F(u)===F(d);l(e,{replace:a,state:i,preventScrollReset:o,relative:r,viewTransition:s})}}),[u,l,d,n,i,a,e,o,r,s])}(u,{replace:r,state:s,target:l,preventScrollReset:d,relative:i,viewTransition:c});let j=t.createElement("a",{...h,...x,href:m||y,onClick:b||o?e:function(a){e&&e(a),a.defaultPrevented||w(a)},ref:ia(p,v),target:l,"data-discover":f||"render"!==a?void 0:"true"});return k&&!f?t.createElement(t.Fragment,null,j,t.createElement(ta,{page:y})):j}));function ua(e){let a=t.useContext(pe);return T(a,function(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}(e)),a}la.displayName="Link",t.forwardRef((function({"aria-current":e="page",caseSensitive:a=!1,className:n="",end:i=!1,style:o,to:r,viewTransition:s,children:l,...u},d){let c=ze(r,{relative:u.relative}),h=xe(),p=t.useContext(me),{navigator:m,basename:g}=t.useContext(fe),f=null!=p&&function(e,a={}){let n=t.useContext(ge);T(null!=n,"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");let{basename:i}=ua("useViewTransitionState"),o=ze(e,{relative:a.relative});if(!n.isTransitioning)return!1;let r=ne(n.currentLocation.pathname,i)||n.currentLocation.pathname,s=ne(n.nextLocation.pathname,i)||n.nextLocation.pathname;return null!=ae(o.pathname,s)||null!=ae(o.pathname,r)}(c)&&!0===s,b=m.encodeLocation?m.encodeLocation(c).pathname:c.pathname,y=h.pathname,k=p&&p.navigation&&p.navigation.location?p.navigation.location.pathname:null;a||(y=y.toLowerCase(),k=k?k.toLowerCase():null,b=b.toLowerCase()),k&&g&&(k=ne(k,g)||k);const v="/"!==b&&b.endsWith("/")?b.length-1:b.length;let x,w=y===b||!i&&y.startsWith(b)&&"/"===y.charAt(v),j=null!=k&&(k===b||!i&&k.startsWith(b)&&"/"===k.charAt(b.length)),S={isActive:w,isPending:j,isTransitioning:f},z=w?e:void 0;x="function"==typeof n?n(S):[n,w?"active":null,j?"pending":null,f?"transitioning":null].filter(Boolean).join(" ");let P="function"==typeof o?o(S):o;return t.createElement(la,{...u,"aria-current":z,className:x,ref:d,style:P,to:r,viewTransition:s},"function"==typeof l?l(S):l)})).displayName="NavLink",t.forwardRef((({discover:e="render",fetcherKey:a,navigate:n,reloadDocument:i,replace:o,state:r,method:s=$e,action:l,onSubmit:u,relative:d,preventScrollReset:c,viewTransition:h,...p},m)=>{let g=function(){let{router:e}=ua("useSubmit"),{basename:a}=t.useContext(fe),n=Ie("useRouteId");return t.useCallback((async(t,i={})=>{let{action:o,method:r,encType:s,formData:l,body:u}=He(t,a);if(!1===i.navigate){let a=i.fetcherKey||ca();await e.fetch(a,n,i.action||o,{preventScrollReset:i.preventScrollReset,formData:l,body:u,formMethod:i.method||r,formEncType:i.encType||s,flushSync:i.flushSync})}else await e.navigate(i.action||o,{preventScrollReset:i.preventScrollReset,formData:l,body:u,formMethod:i.method||r,formEncType:i.encType||s,replace:i.replace,state:i.state,fromRouteId:n,flushSync:i.flushSync,viewTransition:i.viewTransition})}),[e,a,n])}(),f=function(e,{relative:a}={}){let{basename:n}=t.useContext(fe),i=t.useContext(ye);T(i,"useFormAction must be used inside a RouteContext");let[o]=i.matches.slice(-1),r={...ze(e||".",{relative:a})},s=xe();if(null==e){r.search=s.search;let e=new URLSearchParams(r.search),a=e.getAll("index");if(a.some((e=>""===e))){e.delete("index"),a.filter((e=>e)).forEach((a=>e.append("index",a)));let t=e.toString();r.search=t?`?${t}`:""}}e&&"."!==e||!o.route.index||(r.search=r.search?r.search.replace(/^\?/,"?index&"):"?index");"/"!==n&&(r.pathname="/"===r.pathname?n:se([n,r.pathname]));return F(r)}(l,{relative:d}),b="get"===s.toLowerCase()?"get":"post",y="string"==typeof l&&sa.test(l);return t.createElement("form",{ref:m,method:b,action:f,onSubmit:i?u:e=>{if(u&&u(e),e.defaultPrevented)return;e.preventDefault();let t=e.nativeEvent.submitter,i=(null==t?void 0:t.getAttribute("formmethod"))||s;g(t||e.currentTarget,{fetcherKey:a,method:i,navigate:n,replace:o,state:r,relative:d,preventScrollReset:c,viewTransition:h})},...p,"data-discover":y||"render"!==e?void 0:"true"})})).displayName="Form";var da=0,ca=()=>`__${String(++da)}__`;const ha={},pa=(e,a,t,n)=>{ba(t)&&ha[t]||(ba(t)&&(ha[t]=new Date),((e,a,t,n)=>{var i,o,r,s;const l=[t,{code:a,...n||{}}];if(null==(o=null==(i=null==e?void 0:e.services)?void 0:i.logger)?void 0:o.forward)return e.services.logger.forward(l,"warn","react-i18next::",!0);ba(l[0])&&(l[0]=`react-i18next:: ${l[0]}`),(null==(s=null==(r=null==e?void 0:e.services)?void 0:r.logger)?void 0:s.warn)?e.services.logger.warn(...l):null==console||console.warn})(e,a,t,n))},ma=(e,a)=>()=>{if(e.isInitialized)a();else{const t=()=>{setTimeout((()=>{e.off("initialized",t)}),0),a()};e.on("initialized",t)}},ga=(e,a,t)=>{e.loadNamespaces(a,ma(e,t))},fa=(e,a,t,n)=>{if(ba(t)&&(t=[t]),e.options.preload&&e.options.preload.indexOf(a)>-1)return ga(e,t,n);t.forEach((a=>{e.options.ns.indexOf(a)<0&&e.options.ns.push(a)})),e.loadLanguages(a,ma(e,n))},ba=e=>"string"==typeof e,ya=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,ka={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},va=e=>ka[e];let xa={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:e=>e.replace(ya,va)};let wa;const ja={type:"3rdParty",init(e){((e={})=>{xa={...xa,...e}})(e.options.react),(e=>{wa=e})(e)}},Sa=t.createContext();class za{constructor(){this.usedNamespaces={}}addUsedNamespaces(e){e.forEach((e=>{this.usedNamespaces[e]||(this.usedNamespaces[e]=!0)}))}getUsedNamespaces(){return Object.keys(this.usedNamespaces)}}const Pa=(e,a,t,n)=>e.getFixedT(a,t,n),Na=(e,a={})=>{var n,i,o,r;const{i18n:s}=a,{i18n:l,defaultNS:u}=t.useContext(Sa)||{},d=s||l||wa;if(d&&!d.reportNamespaces&&(d.reportNamespaces=new za),!d){pa(d,"NO_I18NEXT_INSTANCE","useTranslation: You will need to pass in an i18next instance by using initReactI18next");const e=(e,a)=>{return ba(a)?a:"object"==typeof(t=a)&&null!==t&&ba(a.defaultValue)?a.defaultValue:Array.isArray(e)?e[e.length-1]:e;var t},a=[e,{},!1];return a.t=e,a.i18n={},a.ready=!1,a}(null==(n=d.options.react)?void 0:n.wait)&&pa(d,"DEPRECATED_OPTION","useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");const c={...xa,...d.options.react,...a},{useSuspense:h,keyPrefix:p}=c;let m=e||u||(null==(i=d.options)?void 0:i.defaultNS);m=ba(m)?[m]:m||["translation"],null==(r=(o=d.reportNamespaces).addUsedNamespaces)||r.call(o,m);const g=(d.isInitialized||d.initializedStoreOnce)&&m.every((e=>((e,a,t={})=>a.languages&&a.languages.length?a.hasLoadedNamespace(e,{lng:t.lng,precheck:(a,n)=>{var i;if((null==(i=t.bindI18n)?void 0:i.indexOf("languageChanging"))>-1&&a.services.backendConnector.backend&&a.isLanguageChangingTo&&!n(a.isLanguageChangingTo,e))return!1}}):(pa(a,"NO_LANGUAGES","i18n.languages were undefined or empty",{languages:a.languages}),!0))(e,d,c))),f=((e,a,n,i)=>t.useCallback(Pa(e,a,n,i),[e,a,n,i]))(d,a.lng||null,"fallback"===c.nsMode?m:m[0],p),b=()=>f,y=()=>Pa(d,a.lng||null,"fallback"===c.nsMode?m:m[0],p),[k,v]=t.useState(b);let x=m.join();a.lng&&(x=`${a.lng}${x}`);const w=((e,a)=>{const n=t.useRef();return t.useEffect((()=>{n.current=a?n.current:e}),[e,a]),n.current})(x),j=t.useRef(!0);t.useEffect((()=>{const{bindI18n:e,bindI18nStore:t}=c;j.current=!0,g||h||(a.lng?fa(d,a.lng,m,(()=>{j.current&&v(y)})):ga(d,m,(()=>{j.current&&v(y)}))),g&&w&&w!==x&&j.current&&v(y);const n=()=>{j.current&&v(y)};return e&&(null==d||d.on(e,n)),t&&(null==d||d.store.on(t,n)),()=>{j.current=!1,d&&(null==e||e.split(" ").forEach((e=>d.off(e,n)))),t&&d&&t.split(" ").forEach((e=>d.store.off(e,n)))}}),[d,x]),t.useEffect((()=>{j.current&&g&&v(b)}),[d,p,g]);const S=[k,d,g];if(S.t=k,S.i18n=d,S.ready=g,g)return S;if(!g&&!h)return S;throw new Promise((e=>{a.lng?fa(d,a.lng,m,(()=>e())):ga(d,m,(()=>e()))}))},La=e=>"string"==typeof e,Ca=()=>{let e,a;const t=new Promise(((t,n)=>{e=t,a=n}));return t.resolve=e,t.reject=a,t},Aa=e=>null==e?"":""+e,Ma=/###/g,Ia=e=>e&&e.indexOf("###")>-1?e.replace(Ma,"."):e,qa=e=>!e||La(e),Ea=(e,a,t)=>{const n=La(a)?a.split("."):a;let i=0;for(;i<n.length-1;){if(qa(e))return{};const a=Ia(n[i]);!e[a]&&t&&(e[a]=new t),e=Object.prototype.hasOwnProperty.call(e,a)?e[a]:{},++i}return qa(e)?{}:{obj:e,k:Ia(n[i])}},Oa=(e,a,t)=>{const{obj:n,k:i}=Ea(e,a,Object);if(void 0!==n||1===a.length)return void(n[i]=t);let o=a[a.length-1],r=a.slice(0,a.length-1),s=Ea(e,r,Object);for(;void 0===s.obj&&r.length;)o=`${r[r.length-1]}.${o}`,r=r.slice(0,r.length-1),s=Ea(e,r,Object),(null==s?void 0:s.obj)&&void 0!==s.obj[`${s.k}.${o}`]&&(s.obj=void 0);s.obj[`${s.k}.${o}`]=t},Ra=(e,a)=>{const{obj:t,k:n}=Ea(e,a);if(t&&Object.prototype.hasOwnProperty.call(t,n))return t[n]},Ta=(e,a,t)=>{for(const n in a)"__proto__"!==n&&"constructor"!==n&&(n in e?La(e[n])||e[n]instanceof String||La(a[n])||a[n]instanceof String?t&&(e[n]=a[n]):Ta(e[n],a[n],t):e[n]=a[n]);return e},Da=e=>e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var $a={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};const Qa=e=>La(e)?e.replace(/[&<>"'\/]/g,(e=>$a[e])):e;const Fa=[" ",",","?","!",";"],Ba=new class{constructor(e){this.capacity=e,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(e){const a=this.regExpMap.get(e);if(void 0!==a)return a;const t=new RegExp(e);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(e,t),this.regExpQueue.push(e),t}}(20),Ka=(e,a,t=".")=>{if(!e)return;if(e[a]){if(!Object.prototype.hasOwnProperty.call(e,a))return;return e[a]}const n=a.split(t);let i=e;for(let o=0;o<n.length;){if(!i||"object"!=typeof i)return;let e,a="";for(let r=o;r<n.length;++r)if(r!==o&&(a+=t),a+=n[r],e=i[a],void 0!==e){if(["string","number","boolean"].indexOf(typeof e)>-1&&r<n.length-1)continue;o+=r-o+1;break}i=e}return i},Ua=e=>null==e?void 0:e.replace("_","-"),Ha={type:"logger",log(e){this.output("log",e)},warn(e){this.output("warn",e)},error(e){this.output("error",e)},output(e,a){var t,n;null==(n=null==(t=null==console?void 0:console[e])?void 0:t.apply)||n.call(t,console,a)}};class Va{constructor(e,a={}){this.init(e,a)}init(e,a={}){this.prefix=a.prefix||"i18next:",this.logger=e||Ha,this.options=a,this.debug=a.debug}log(...e){return this.forward(e,"log","",!0)}warn(...e){return this.forward(e,"warn","",!0)}error(...e){return this.forward(e,"error","")}deprecate(...e){return this.forward(e,"warn","WARNING DEPRECATED: ",!0)}forward(e,a,t,n){return n&&!this.debug?null:(La(e[0])&&(e[0]=`${t}${this.prefix} ${e[0]}`),this.logger[a](e))}create(e){return new Va(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return(e=e||this.options).prefix=e.prefix||this.prefix,new Va(this.logger,e)}}var Wa=new Va;class Ga{constructor(){this.observers={}}on(e,a){return e.split(" ").forEach((e=>{this.observers[e]||(this.observers[e]=new Map);const t=this.observers[e].get(a)||0;this.observers[e].set(a,t+1)})),this}off(e,a){this.observers[e]&&(a?this.observers[e].delete(a):delete this.observers[e])}emit(e,...a){if(this.observers[e]){Array.from(this.observers[e].entries()).forEach((([e,t])=>{for(let n=0;n<t;n++)e(...a)}))}if(this.observers["*"]){Array.from(this.observers["*"].entries()).forEach((([t,n])=>{for(let i=0;i<n;i++)t.apply(t,[e,...a])}))}}}class _a extends Ga{constructor(e,a={ns:["translation"],defaultNS:"translation"}){super(),this.data=e||{},this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),void 0===this.options.ignoreJSONStructure&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const a=this.options.ns.indexOf(e);a>-1&&this.options.ns.splice(a,1)}getResource(e,a,t,n={}){var i,o;const r=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,s=void 0!==n.ignoreJSONStructure?n.ignoreJSONStructure:this.options.ignoreJSONStructure;let l;e.indexOf(".")>-1?l=e.split("."):(l=[e,a],t&&(Array.isArray(t)?l.push(...t):La(t)&&r?l.push(...t.split(r)):l.push(t)));const u=Ra(this.data,l);return!u&&!a&&!t&&e.indexOf(".")>-1&&(e=l[0],a=l[1],t=l.slice(2).join(".")),!u&&s&&La(t)?Ka(null==(o=null==(i=this.data)?void 0:i[e])?void 0:o[a],t,r):u}addResource(e,a,t,n,i={silent:!1}){const o=void 0!==i.keySeparator?i.keySeparator:this.options.keySeparator;let r=[e,a];t&&(r=r.concat(o?t.split(o):t)),e.indexOf(".")>-1&&(r=e.split("."),n=a,a=r[1]),this.addNamespaces(a),Oa(this.data,r,n),i.silent||this.emit("added",e,a,t,n)}addResources(e,a,t,n={silent:!1}){for(const i in t)(La(t[i])||Array.isArray(t[i]))&&this.addResource(e,a,i,t[i],{silent:!0});n.silent||this.emit("added",e,a,t)}addResourceBundle(e,a,t,n,i,o={silent:!1,skipCopy:!1}){let r=[e,a];e.indexOf(".")>-1&&(r=e.split("."),n=t,t=a,a=r[1]),this.addNamespaces(a);let s=Ra(this.data,r)||{};o.skipCopy||(t=JSON.parse(JSON.stringify(t))),n?Ta(s,t,i):s={...s,...t},Oa(this.data,r,s),o.silent||this.emit("added",e,a,t)}removeResourceBundle(e,a){this.hasResourceBundle(e,a)&&delete this.data[e][a],this.removeNamespaces(a),this.emit("removed",e,a)}hasResourceBundle(e,a){return void 0!==this.getResource(e,a)}getResourceBundle(e,a){return a||(a=this.options.defaultNS),this.getResource(e,a)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const a=this.getDataByLanguage(e);return!!(a&&Object.keys(a)||[]).find((e=>a[e]&&Object.keys(a[e]).length>0))}toJSON(){return this.data}}var Ya={processors:{},addPostProcessor(e){this.processors[e.name]=e},handle(e,a,t,n,i){return e.forEach((e=>{var o;a=(null==(o=this.processors[e])?void 0:o.process(a,t,n,i))??a})),a}};const Za={},Ja=e=>!La(e)&&"boolean"!=typeof e&&"number"!=typeof e;class Xa extends Ga{constructor(e,a={}){var t,n;super(),t=e,n=this,["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"].forEach((e=>{t[e]&&(n[e]=t[e])})),this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),this.logger=Wa.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e,a={interpolation:{}}){const t={...a};if(null==e)return!1;const n=this.resolve(e,t);return void 0!==(null==n?void 0:n.res)}extractFromKey(e,a){let t=void 0!==a.nsSeparator?a.nsSeparator:this.options.nsSeparator;void 0===t&&(t=":");const n=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator;let i=a.ns||this.options.defaultNS||[];const o=t&&e.indexOf(t)>-1,r=!(this.options.userDefinedKeySeparator||a.keySeparator||this.options.userDefinedNsSeparator||a.nsSeparator||((e,a,t)=>{a=a||"",t=t||"";const n=Fa.filter((e=>a.indexOf(e)<0&&t.indexOf(e)<0));if(0===n.length)return!0;const i=Ba.getRegExp(`(${n.map((e=>"?"===e?"\\?":e)).join("|")})`);let o=!i.test(e);if(!o){const a=e.indexOf(t);a>0&&!i.test(e.substring(0,a))&&(o=!0)}return o})(e,t,n));if(o&&!r){const a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:La(i)?[i]:i};const o=e.split(t);(t!==n||t===n&&this.options.ns.indexOf(o[0])>-1)&&(i=o.shift()),e=o.join(n)}return{key:e,namespaces:La(i)?[i]:i}}translate(e,a,t){let n="object"==typeof a?{...a}:a;if("object"!=typeof n&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),"object"==typeof options&&(n={...n}),n||(n={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);const i=void 0!==n.returnDetails?n.returnDetails:this.options.returnDetails,o=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,{key:r,namespaces:s}=this.extractFromKey(e[e.length-1],n),l=s[s.length-1];let u=void 0!==n.nsSeparator?n.nsSeparator:this.options.nsSeparator;void 0===u&&(u=":");const d=n.lng||this.language,c=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if("cimode"===(null==d?void 0:d.toLowerCase()))return c?i?{res:`${l}${u}${r}`,usedKey:r,exactUsedKey:r,usedLng:d,usedNS:l,usedParams:this.getUsedParamsDetails(n)}:`${l}${u}${r}`:i?{res:r,usedKey:r,exactUsedKey:r,usedLng:d,usedNS:l,usedParams:this.getUsedParamsDetails(n)}:r;const h=this.resolve(e,n);let p=null==h?void 0:h.res;const m=(null==h?void 0:h.usedKey)||r,g=(null==h?void 0:h.exactUsedKey)||r,f=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,b=!this.i18nFormat||this.i18nFormat.handleAsObject,y=void 0!==n.count&&!La(n.count),k=Xa.hasDefaultValue(n),v=y?this.pluralResolver.getSuffix(d,n.count,n):"",x=n.ordinal&&y?this.pluralResolver.getSuffix(d,n.count,{ordinal:!1}):"",w=y&&!n.ordinal&&0===n.count,j=w&&n[`defaultValue${this.options.pluralSeparator}zero`]||n[`defaultValue${v}`]||n[`defaultValue${x}`]||n.defaultValue;let S=p;b&&!p&&k&&(S=j);const z=Ja(S),P=Object.prototype.toString.apply(S);if(!(b&&S&&z&&["[object Number]","[object Function]","[object RegExp]"].indexOf(P)<0)||La(f)&&Array.isArray(S))if(b&&La(f)&&Array.isArray(p))p=p.join(f),p&&(p=this.extendTranslation(p,e,n,t));else{let a=!1,i=!1;!this.isValidLookup(p)&&k&&(a=!0,p=j),this.isValidLookup(p)||(i=!0,p=r);const s=(n.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&i?void 0:p,c=k&&j!==p&&this.options.updateMissing;if(i||a||c){if(this.logger.log(c?"updateKey":"missingKey",d,l,r,c?j:p),o){const e=this.resolve(r,{...n,keySeparator:!1});e&&e.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let e=[];const a=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if("fallback"===this.options.saveMissingTo&&a&&a[0])for(let n=0;n<a.length;n++)e.push(a[n]);else"all"===this.options.saveMissingTo?e=this.languageUtils.toResolveHierarchy(n.lng||this.language):e.push(n.lng||this.language);const t=(e,a,t)=>{var i;const o=k&&t!==p?t:s;this.options.missingKeyHandler?this.options.missingKeyHandler(e,l,a,o,c,n):(null==(i=this.backendConnector)?void 0:i.saveMissing)&&this.backendConnector.saveMissing(e,l,a,o,c,n),this.emit("missingKey",e,l,a,p)};this.options.saveMissing&&(this.options.saveMissingPlurals&&y?e.forEach((e=>{const a=this.pluralResolver.getSuffixes(e,n);w&&n[`defaultValue${this.options.pluralSeparator}zero`]&&a.indexOf(`${this.options.pluralSeparator}zero`)<0&&a.push(`${this.options.pluralSeparator}zero`),a.forEach((a=>{t([e],r+a,n[`defaultValue${a}`]||j)}))})):t(e,r,j))}p=this.extendTranslation(p,e,n,h,t),i&&p===r&&this.options.appendNamespaceToMissingKey&&(p=`${l}${u}${r}`),(i||a)&&this.options.parseMissingKeyHandler&&(p=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${l}${u}${r}`:r,a?p:void 0,n))}else{if(!n.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const e=this.options.returnedObjectHandler?this.options.returnedObjectHandler(m,S,{...n,ns:s}):`key '${r} (${this.language})' returned an object instead of string.`;return i?(h.res=e,h.usedParams=this.getUsedParamsDetails(n),h):e}if(o){const e=Array.isArray(S),a=e?[]:{},t=e?g:m;for(const i in S)if(Object.prototype.hasOwnProperty.call(S,i)){const e=`${t}${o}${i}`;a[i]=k&&!p?this.translate(e,{...n,defaultValue:Ja(j)?j[i]:void 0,joinArrays:!1,ns:s}):this.translate(e,{...n,joinArrays:!1,ns:s}),a[i]===e&&(a[i]=S[i])}p=a}}return i?(h.res=p,h.usedParams=this.getUsedParamsDetails(n),h):p}extendTranslation(e,a,t,n,i){var o,r;if(null==(o=this.i18nFormat)?void 0:o.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...t},t.lng||this.language||n.usedLng,n.usedNS,n.usedKey,{resolved:n});else if(!t.skipInterpolation){t.interpolation&&this.interpolator.init({...t,interpolation:{...this.options.interpolation,...t.interpolation}});const o=La(e)&&(void 0!==(null==(r=null==t?void 0:t.interpolation)?void 0:r.skipOnVariables)?t.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let s;if(o){const a=e.match(this.interpolator.nestingRegexp);s=a&&a.length}let l=t.replace&&!La(t.replace)?t.replace:t;if(this.options.interpolation.defaultVariables&&(l={...this.options.interpolation.defaultVariables,...l}),e=this.interpolator.interpolate(e,l,t.lng||this.language||n.usedLng,t),o){const a=e.match(this.interpolator.nestingRegexp);s<(a&&a.length)&&(t.nest=!1)}!t.lng&&n&&n.res&&(t.lng=this.language||n.usedLng),!1!==t.nest&&(e=this.interpolator.nest(e,((...e)=>(null==i?void 0:i[0])!==e[0]||t.context?this.translate(...e,a):(this.logger.warn(`It seems you are nesting recursively key: ${e[0]} in key: ${a[0]}`),null)),t)),t.interpolation&&this.interpolator.reset()}const s=t.postProcess||this.options.postProcess,l=La(s)?[s]:s;return null!=e&&(null==l?void 0:l.length)&&!1!==t.applyPostProcessor&&(e=Ya.handle(l,e,a,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...n,usedParams:this.getUsedParamsDetails(t)},...t}:t,this)),e}resolve(e,a={}){let t,n,i,o,r;return La(e)&&(e=[e]),e.forEach((e=>{if(this.isValidLookup(t))return;const s=this.extractFromKey(e,a),l=s.key;n=l;let u=s.namespaces;this.options.fallbackNS&&(u=u.concat(this.options.fallbackNS));const d=void 0!==a.count&&!La(a.count),c=d&&!a.ordinal&&0===a.count,h=void 0!==a.context&&(La(a.context)||"number"==typeof a.context)&&""!==a.context,p=a.lngs?a.lngs:this.languageUtils.toResolveHierarchy(a.lng||this.language,a.fallbackLng);u.forEach((e=>{var s,u;this.isValidLookup(t)||(r=e,Za[`${p[0]}-${e}`]||!(null==(s=this.utils)?void 0:s.hasLoadedNamespace)||(null==(u=this.utils)?void 0:u.hasLoadedNamespace(r))||(Za[`${p[0]}-${e}`]=!0,this.logger.warn(`key "${n}" for languages "${p.join(", ")}" won't get resolved as namespace "${r}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((n=>{var r;if(this.isValidLookup(t))return;o=n;const s=[l];if(null==(r=this.i18nFormat)?void 0:r.addLookupKeys)this.i18nFormat.addLookupKeys(s,l,n,e,a);else{let e;d&&(e=this.pluralResolver.getSuffix(n,a.count,a));const t=`${this.options.pluralSeparator}zero`,i=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(d&&(s.push(l+e),a.ordinal&&0===e.indexOf(i)&&s.push(l+e.replace(i,this.options.pluralSeparator)),c&&s.push(l+t)),h){const n=`${l}${this.options.contextSeparator}${a.context}`;s.push(n),d&&(s.push(n+e),a.ordinal&&0===e.indexOf(i)&&s.push(n+e.replace(i,this.options.pluralSeparator)),c&&s.push(n+t))}}let u;for(;u=s.pop();)this.isValidLookup(t)||(i=u,t=this.getResource(n,e,u,a))})))}))})),{res:t,usedKey:n,exactUsedKey:i,usedLng:o,usedNS:r}}isValidLookup(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}getResource(e,a,t,n={}){var i;return(null==(i=this.i18nFormat)?void 0:i.getResource)?this.i18nFormat.getResource(e,a,t,n):this.resourceStore.getResource(e,a,t,n)}getUsedParamsDetails(e={}){const a=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],t=e.replace&&!La(e.replace);let n=t?e.replace:e;if(t&&void 0!==e.count&&(n.count=e.count),this.options.interpolation.defaultVariables&&(n={...this.options.interpolation.defaultVariables,...n}),!t){n={...n};for(const e of a)delete n[e]}return n}static hasDefaultValue(e){const a="defaultValue";for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&a===t.substring(0,12)&&void 0!==e[t])return!0;return!1}}class et{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=Wa.create("languageUtils")}getScriptPartFromCode(e){if(!(e=Ua(e))||e.indexOf("-")<0)return null;const a=e.split("-");return 2===a.length?null:(a.pop(),"x"===a[a.length-1].toLowerCase()?null:this.formatLanguageCode(a.join("-")))}getLanguagePartFromCode(e){if(!(e=Ua(e))||e.indexOf("-")<0)return e;const a=e.split("-");return this.formatLanguageCode(a[0])}formatLanguageCode(e){if(La(e)&&e.indexOf("-")>-1){let a;try{a=Intl.getCanonicalLocales(e)[0]}catch(gn){}return a&&this.options.lowerCaseLng&&(a=a.toLowerCase()),a||(this.options.lowerCaseLng?e.toLowerCase():e)}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let a;return e.forEach((e=>{if(a)return;const t=this.formatLanguageCode(e);this.options.supportedLngs&&!this.isSupportedCode(t)||(a=t)})),!a&&this.options.supportedLngs&&e.forEach((e=>{if(a)return;const t=this.getScriptPartFromCode(e);if(this.isSupportedCode(t))return a=t;const n=this.getLanguagePartFromCode(e);if(this.isSupportedCode(n))return a=n;a=this.options.supportedLngs.find((e=>e===n?e:e.indexOf("-")<0&&n.indexOf("-")<0?void 0:e.indexOf("-")>0&&n.indexOf("-")<0&&e.substring(0,e.indexOf("-"))===n||0===e.indexOf(n)&&n.length>1?e:void 0))})),a||(a=this.getFallbackCodes(this.options.fallbackLng)[0]),a}getFallbackCodes(e,a){if(!e)return[];if("function"==typeof e&&(e=e(a)),La(e)&&(e=[e]),Array.isArray(e))return e;if(!a)return e.default||[];let t=e[a];return t||(t=e[this.getScriptPartFromCode(a)]),t||(t=e[this.formatLanguageCode(a)]),t||(t=e[this.getLanguagePartFromCode(a)]),t||(t=e.default),t||[]}toResolveHierarchy(e,a){const t=this.getFallbackCodes((!1===a?[]:a)||this.options.fallbackLng||[],e),n=[],i=e=>{e&&(this.isSupportedCode(e)?n.push(e):this.logger.warn(`rejecting language code not found in supportedLngs: ${e}`))};return La(e)&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?("languageOnly"!==this.options.load&&i(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&i(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&i(this.getLanguagePartFromCode(e))):La(e)&&i(this.formatLanguageCode(e)),t.forEach((e=>{n.indexOf(e)<0&&i(this.formatLanguageCode(e))})),n}}const at={zero:0,one:1,two:2,few:3,many:4,other:5},tt={select:e=>1===e?"one":"other",resolvedOptions:()=>({pluralCategories:["one","other"]})};class nt{constructor(e,a={}){this.languageUtils=e,this.options=a,this.logger=Wa.create("pluralResolver"),this.pluralRulesCache={}}addRule(e,a){this.rules[e]=a}clearCache(){this.pluralRulesCache={}}getRule(e,a={}){const t=Ua("dev"===e?"en":e),n=a.ordinal?"ordinal":"cardinal",i=JSON.stringify({cleanedCode:t,type:n});if(i in this.pluralRulesCache)return this.pluralRulesCache[i];let o;try{o=new Intl.PluralRules(t,{type:n})}catch(r){if(!Intl)return this.logger.error("No Intl support, please use an Intl polyfill!"),tt;if(!e.match(/-|_/))return tt;const t=this.languageUtils.getLanguagePartFromCode(e);o=this.getRule(t,a)}return this.pluralRulesCache[i]=o,o}needsPlural(e,a={}){let t=this.getRule(e,a);return t||(t=this.getRule("dev",a)),(null==t?void 0:t.resolvedOptions().pluralCategories.length)>1}getPluralFormsOfKey(e,a,t={}){return this.getSuffixes(e,t).map((e=>`${a}${e}`))}getSuffixes(e,a={}){let t=this.getRule(e,a);return t||(t=this.getRule("dev",a)),t?t.resolvedOptions().pluralCategories.sort(((e,a)=>at[e]-at[a])).map((e=>`${this.options.prepend}${a.ordinal?`ordinal${this.options.prepend}`:""}${e}`)):[]}getSuffix(e,a,t={}){const n=this.getRule(e,t);return n?`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${n.select(a)}`:(this.logger.warn(`no plural rule found for: ${e}`),this.getSuffix("dev",a,t))}}const it=(e,a,t,n=".",i=!0)=>{let o=((e,a,t)=>{const n=Ra(e,t);return void 0!==n?n:Ra(a,t)})(e,a,t);return!o&&i&&La(t)&&(o=Ka(e,t,n),void 0===o&&(o=Ka(a,t,n))),o},ot=e=>e.replace(/\$/g,"$$$$");class rt{constructor(e={}){var a;this.logger=Wa.create("interpolator"),this.options=e,this.format=(null==(a=null==e?void 0:e.interpolation)?void 0:a.format)||(e=>e),this.init(e)}init(e={}){e.interpolation||(e.interpolation={escapeValue:!0});const{escape:a,escapeValue:t,useRawValueToEscape:n,prefix:i,prefixEscaped:o,suffix:r,suffixEscaped:s,formatSeparator:l,unescapeSuffix:u,unescapePrefix:d,nestingPrefix:c,nestingPrefixEscaped:h,nestingSuffix:p,nestingSuffixEscaped:m,nestingOptionsSeparator:g,maxReplaces:f,alwaysFormat:b}=e.interpolation;this.escape=void 0!==a?a:Qa,this.escapeValue=void 0===t||t,this.useRawValueToEscape=void 0!==n&&n,this.prefix=i?Da(i):o||"{{",this.suffix=r?Da(r):s||"}}",this.formatSeparator=l||",",this.unescapePrefix=u?"":d||"-",this.unescapeSuffix=this.unescapePrefix?"":u||"",this.nestingPrefix=c?Da(c):h||Da("$t("),this.nestingSuffix=p?Da(p):m||Da(")"),this.nestingOptionsSeparator=g||",",this.maxReplaces=f||1e3,this.alwaysFormat=void 0!==b&&b,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=(e,a)=>(null==e?void 0:e.source)===a?(e.lastIndex=0,e):new RegExp(a,"g");this.regexp=e(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=e(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=e(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(e,a,t,n){var i;let o,r,s;const l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{},u=e=>{if(e.indexOf(this.formatSeparator)<0){const i=it(a,l,e,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(i,void 0,t,{...n,...a,interpolationkey:e}):i}const i=e.split(this.formatSeparator),o=i.shift().trim(),r=i.join(this.formatSeparator).trim();return this.format(it(a,l,o,this.options.keySeparator,this.options.ignoreJSONStructure),r,t,{...n,...a,interpolationkey:o})};this.resetRegExp();const d=(null==n?void 0:n.missingInterpolationHandler)||this.options.missingInterpolationHandler,c=void 0!==(null==(i=null==n?void 0:n.interpolation)?void 0:i.skipOnVariables)?n.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:e=>ot(e)},{regex:this.regexp,safeValue:e=>this.escapeValue?ot(this.escape(e)):ot(e)}].forEach((a=>{for(s=0;o=a.regex.exec(e);){const t=o[1].trim();if(r=u(t),void 0===r)if("function"==typeof d){const a=d(e,o,n);r=La(a)?a:""}else if(n&&Object.prototype.hasOwnProperty.call(n,t))r="";else{if(c){r=o[0];continue}this.logger.warn(`missed to pass in variable ${t} for interpolating ${e}`),r=""}else La(r)||this.useRawValueToEscape||(r=Aa(r));const i=a.safeValue(r);if(e=e.replace(o[0],i),c?(a.regex.lastIndex+=r.length,a.regex.lastIndex-=o[0].length):a.regex.lastIndex=0,s++,s>=this.maxReplaces)break}})),e}nest(e,a,t={}){let n,i,o;const r=(e,a)=>{const t=this.nestingOptionsSeparator;if(e.indexOf(t)<0)return e;const n=e.split(new RegExp(`${t}[ ]*{`));let i=`{${n[1]}`;e=n[0],i=this.interpolate(i,o);const r=i.match(/'/g),s=i.match(/"/g);(((null==r?void 0:r.length)??0)%2==0&&!s||s.length%2!=0)&&(i=i.replace(/'/g,'"'));try{o=JSON.parse(i),a&&(o={...a,...o})}catch(gn){return this.logger.warn(`failed parsing options string in nesting for key ${e}`,gn),`${e}${t}${i}`}return o.defaultValue&&o.defaultValue.indexOf(this.prefix)>-1&&delete o.defaultValue,e};for(;n=this.nestingRegexp.exec(e);){let s=[];o={...t},o=o.replace&&!La(o.replace)?o.replace:o,o.applyPostProcessor=!1,delete o.defaultValue;let l=!1;if(-1!==n[0].indexOf(this.formatSeparator)&&!/{.*}/.test(n[1])){const e=n[1].split(this.formatSeparator).map((e=>e.trim()));n[1]=e.shift(),s=e,l=!0}if(i=a(r.call(this,n[1].trim(),o),o),i&&n[0]===e&&!La(i))return i;La(i)||(i=Aa(i)),i||(this.logger.warn(`missed to resolve ${n[1]} for nesting ${e}`),i=""),l&&(i=s.reduce(((e,a)=>this.format(e,a,t.lng,{...t,interpolationkey:n[1].trim()})),i.trim())),e=e.replace(n[0],i),this.regexp.lastIndex=0}return e}}const st=e=>{const a={};return(t,n,i)=>{let o=i;i&&i.interpolationkey&&i.formatParams&&i.formatParams[i.interpolationkey]&&i[i.interpolationkey]&&(o={...o,[i.interpolationkey]:void 0});const r=n+JSON.stringify(o);let s=a[r];return s||(s=e(Ua(n),i),a[r]=s),s(t)}},lt=e=>(a,t,n)=>e(Ua(t),n)(a);class ut{constructor(e={}){this.logger=Wa.create("formatter"),this.options=e,this.init(e)}init(e,a={interpolation:{}}){this.formatSeparator=a.interpolation.formatSeparator||",";const t=a.cacheInBuiltFormats?st:lt;this.formats={number:t(((e,a)=>{const t=new Intl.NumberFormat(e,{...a});return e=>t.format(e)})),currency:t(((e,a)=>{const t=new Intl.NumberFormat(e,{...a,style:"currency"});return e=>t.format(e)})),datetime:t(((e,a)=>{const t=new Intl.DateTimeFormat(e,{...a});return e=>t.format(e)})),relativetime:t(((e,a)=>{const t=new Intl.RelativeTimeFormat(e,{...a});return e=>t.format(e,a.range||"day")})),list:t(((e,a)=>{const t=new Intl.ListFormat(e,{...a});return e=>t.format(e)}))}}add(e,a){this.formats[e.toLowerCase().trim()]=a}addCached(e,a){this.formats[e.toLowerCase().trim()]=st(a)}format(e,a,t,n={}){const i=a.split(this.formatSeparator);if(i.length>1&&i[0].indexOf("(")>1&&i[0].indexOf(")")<0&&i.find((e=>e.indexOf(")")>-1))){const e=i.findIndex((e=>e.indexOf(")")>-1));i[0]=[i[0],...i.splice(1,e)].join(this.formatSeparator)}return i.reduce(((e,a)=>{var i;const{formatName:o,formatOptions:r}=(e=>{let a=e.toLowerCase().trim();const t={};if(e.indexOf("(")>-1){const n=e.split("(");a=n[0].toLowerCase().trim();const i=n[1].substring(0,n[1].length-1);"currency"===a&&i.indexOf(":")<0?t.currency||(t.currency=i.trim()):"relativetime"===a&&i.indexOf(":")<0?t.range||(t.range=i.trim()):i.split(";").forEach((e=>{if(e){const[a,...n]=e.split(":"),i=n.join(":").trim().replace(/^'+|'+$/g,""),o=a.trim();t[o]||(t[o]=i),"false"===i&&(t[o]=!1),"true"===i&&(t[o]=!0),isNaN(i)||(t[o]=parseInt(i,10))}}))}return{formatName:a,formatOptions:t}})(a);if(this.formats[o]){let a=e;try{const s=(null==(i=null==n?void 0:n.formatParams)?void 0:i[n.interpolationkey])||{},l=s.locale||s.lng||n.locale||n.lng||t;a=this.formats[o](e,l,{...r,...n,...s})}catch(s){this.logger.warn(s)}return a}return this.logger.warn(`there was no format function for ${o}`),e}),e)}}class dt extends Ga{constructor(e,a,t,n={}){var i,o;super(),this.backend=e,this.store=a,this.services=t,this.languageUtils=t.languageUtils,this.options=n,this.logger=Wa.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=n.maxParallelReads||10,this.readingCalls=0,this.maxRetries=n.maxRetries>=0?n.maxRetries:5,this.retryTimeout=n.retryTimeout>=1?n.retryTimeout:350,this.state={},this.queue=[],null==(o=null==(i=this.backend)?void 0:i.init)||o.call(i,t,n.backend,n)}queueLoad(e,a,t,n){const i={},o={},r={},s={};return e.forEach((e=>{let n=!0;a.forEach((a=>{const r=`${e}|${a}`;!t.reload&&this.store.hasResourceBundle(e,a)?this.state[r]=2:this.state[r]<0||(1===this.state[r]?void 0===o[r]&&(o[r]=!0):(this.state[r]=1,n=!1,void 0===o[r]&&(o[r]=!0),void 0===i[r]&&(i[r]=!0),void 0===s[a]&&(s[a]=!0)))})),n||(r[e]=!0)})),(Object.keys(i).length||Object.keys(o).length)&&this.queue.push({pending:o,pendingCount:Object.keys(o).length,loaded:{},errors:[],callback:n}),{toLoad:Object.keys(i),pending:Object.keys(o),toLoadLanguages:Object.keys(r),toLoadNamespaces:Object.keys(s)}}loaded(e,a,t){const n=e.split("|"),i=n[0],o=n[1];a&&this.emit("failedLoading",i,o,a),!a&&t&&this.store.addResourceBundle(i,o,t,void 0,void 0,{skipCopy:!0}),this.state[e]=a?-1:2,a&&t&&(this.state[e]=0);const r={};this.queue.forEach((t=>{((e,a,t)=>{const{obj:n,k:i}=Ea(e,a,Object);n[i]=n[i]||[],n[i].push(t)})(t.loaded,[i],o),((e,a)=>{void 0!==e.pending[a]&&(delete e.pending[a],e.pendingCount--)})(t,e),a&&t.errors.push(a),0!==t.pendingCount||t.done||(Object.keys(t.loaded).forEach((e=>{r[e]||(r[e]={});const a=t.loaded[e];a.length&&a.forEach((a=>{void 0===r[e][a]&&(r[e][a]=!0)}))})),t.done=!0,t.errors.length?t.callback(t.errors):t.callback())})),this.emit("loaded",r),this.queue=this.queue.filter((e=>!e.done))}read(e,a,t,n=0,i=this.retryTimeout,o){if(!e.length)return o(null,{});if(this.readingCalls>=this.maxParallelReads)return void this.waitingReads.push({lng:e,ns:a,fcName:t,tried:n,wait:i,callback:o});this.readingCalls++;const r=(r,s)=>{if(this.readingCalls--,this.waitingReads.length>0){const e=this.waitingReads.shift();this.read(e.lng,e.ns,e.fcName,e.tried,e.wait,e.callback)}r&&s&&n<this.maxRetries?setTimeout((()=>{this.read.call(this,e,a,t,n+1,2*i,o)}),i):o(r,s)},s=this.backend[t].bind(this.backend);if(2!==s.length)return s(e,a,r);try{const t=s(e,a);t&&"function"==typeof t.then?t.then((e=>r(null,e))).catch(r):r(null,t)}catch(l){r(l)}}prepareLoading(e,a,t={},n){if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),n&&n();La(e)&&(e=this.languageUtils.toResolveHierarchy(e)),La(a)&&(a=[a]);const i=this.queueLoad(e,a,t,n);if(!i.toLoad.length)return i.pending.length||n(),null;i.toLoad.forEach((e=>{this.loadOne(e)}))}load(e,a,t){this.prepareLoading(e,a,{},t)}reload(e,a,t){this.prepareLoading(e,a,{reload:!0},t)}loadOne(e,a=""){const t=e.split("|"),n=t[0],i=t[1];this.read(n,i,"read",void 0,void 0,((t,o)=>{t&&this.logger.warn(`${a}loading namespace ${i} for language ${n} failed`,t),!t&&o&&this.logger.log(`${a}loaded namespace ${i} for language ${n}`,o),this.loaded(e,t,o)}))}saveMissing(e,a,t,n,i,o={},r=()=>{}){var s,l,u,d,c;if(!(null==(l=null==(s=this.services)?void 0:s.utils)?void 0:l.hasLoadedNamespace)||(null==(d=null==(u=this.services)?void 0:u.utils)?void 0:d.hasLoadedNamespace(a))){if(null!=t&&""!==t){if(null==(c=this.backend)?void 0:c.create){const s={...o,isUpdate:i},l=this.backend.create.bind(this.backend);if(l.length<6)try{let i;i=5===l.length?l(e,a,t,n,s):l(e,a,t,n),i&&"function"==typeof i.then?i.then((e=>r(null,e))).catch(r):r(null,i)}catch(h){r(h)}else l(e,a,t,n,r,s)}e&&e[0]&&this.store.addResource(e[0],a,t,n)}}else this.logger.warn(`did not save key "${t}" as the namespace "${a}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")}}const ct=()=>({debug:!1,initAsync:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:e=>{let a={};if("object"==typeof e[1]&&(a=e[1]),La(e[1])&&(a.defaultValue=e[1]),La(e[2])&&(a.tDescription=e[2]),"object"==typeof e[2]||"object"==typeof e[3]){const t=e[3]||e[2];Object.keys(t).forEach((e=>{a[e]=t[e]}))}return a},interpolation:{escapeValue:!0,format:e=>e,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0},cacheInBuiltFormats:!0}),ht=e=>{var a,t;return La(e.ns)&&(e.ns=[e.ns]),La(e.fallbackLng)&&(e.fallbackLng=[e.fallbackLng]),La(e.fallbackNS)&&(e.fallbackNS=[e.fallbackNS]),(null==(t=null==(a=e.supportedLngs)?void 0:a.indexOf)?void 0:t.call(a,"cimode"))<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),"boolean"==typeof e.initImmediate&&(e.initAsync=e.initImmediate),e},pt=()=>{};class mt extends Ga{constructor(e={},a){var t;if(super(),this.options=ht(e),this.services={},this.logger=Wa,this.modules={external:[]},t=this,Object.getOwnPropertyNames(Object.getPrototypeOf(t)).forEach((e=>{"function"==typeof t[e]&&(t[e]=t[e].bind(t))})),a&&!this.isInitialized&&!e.isClone){if(!this.options.initAsync)return this.init(e,a),this;setTimeout((()=>{this.init(e,a)}),0)}}init(e={},a){this.isInitializing=!0,"function"==typeof e&&(a=e,e={}),null==e.defaultNS&&e.ns&&(La(e.ns)?e.defaultNS=e.ns:e.ns.indexOf("translation")<0&&(e.defaultNS=e.ns[0]));const t=ct();this.options={...t,...this.options,...ht(e)},this.options.interpolation={...t.interpolation,...this.options.interpolation},void 0!==e.keySeparator&&(this.options.userDefinedKeySeparator=e.keySeparator),void 0!==e.nsSeparator&&(this.options.userDefinedNsSeparator=e.nsSeparator);const n=e=>e?"function"==typeof e?new e:e:null;if(!this.options.isClone){let e;this.modules.logger?Wa.init(n(this.modules.logger),this.options):Wa.init(null,this.options),e=this.modules.formatter?this.modules.formatter:ut;const a=new et(this.options);this.store=new _a(this.options.resources,this.options);const i=this.services;i.logger=Wa,i.resourceStore=this.store,i.languageUtils=a,i.pluralResolver=new nt(a,{prepend:this.options.pluralSeparator,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!e||this.options.interpolation.format&&this.options.interpolation.format!==t.interpolation.format||(i.formatter=n(e),i.formatter.init(i,this.options),this.options.interpolation.format=i.formatter.format.bind(i.formatter)),i.interpolator=new rt(this.options),i.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},i.backendConnector=new dt(n(this.modules.backend),i.resourceStore,i,this.options),i.backendConnector.on("*",((e,...a)=>{this.emit(e,...a)})),this.modules.languageDetector&&(i.languageDetector=n(this.modules.languageDetector),i.languageDetector.init&&i.languageDetector.init(i,this.options.detection,this.options)),this.modules.i18nFormat&&(i.i18nFormat=n(this.modules.i18nFormat),i.i18nFormat.init&&i.i18nFormat.init(this)),this.translator=new Xa(this.services,this.options),this.translator.on("*",((e,...a)=>{this.emit(e,...a)})),this.modules.external.forEach((e=>{e.init&&e.init(this)}))}if(this.format=this.options.interpolation.format,a||(a=pt),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const e=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);e.length>0&&"dev"!==e[0]&&(this.options.lng=e[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((e=>{this[e]=(...a)=>this.store[e](...a)}));["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((e=>{this[e]=(...a)=>(this.store[e](...a),this)}));const i=Ca(),o=()=>{const e=(e,t)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),i.resolve(t),a(e,t)};if(this.languages&&!this.isInitialized)return e(null,this.t.bind(this));this.changeLanguage(this.options.lng,e)};return this.options.resources||!this.options.initAsync?o():setTimeout(o,0),i}loadResources(e,a=pt){var t,n;let i=a;const o=La(e)?e:this.language;if("function"==typeof e&&(i=e),!this.options.resources||this.options.partialBundledLanguages){if("cimode"===(null==o?void 0:o.toLowerCase())&&(!this.options.preload||0===this.options.preload.length))return i();const e=[],a=a=>{if(!a)return;if("cimode"===a)return;this.services.languageUtils.toResolveHierarchy(a).forEach((a=>{"cimode"!==a&&e.indexOf(a)<0&&e.push(a)}))};if(o)a(o);else{this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((e=>a(e)))}null==(n=null==(t=this.options.preload)?void 0:t.forEach)||n.call(t,(e=>a(e))),this.services.backendConnector.load(e,this.options.ns,(e=>{e||this.resolvedLanguage||!this.language||this.setResolvedLanguage(this.language),i(e)}))}else i(null)}reloadResources(e,a,t){const n=Ca();return"function"==typeof e&&(t=e,e=void 0),"function"==typeof a&&(t=a,a=void 0),e||(e=this.languages),a||(a=this.options.ns),t||(t=pt),this.services.backendConnector.reload(e,a,(e=>{n.resolve(),t(e)})),n}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&Ya.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}setResolvedLanguage(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1)){for(let e=0;e<this.languages.length;e++){const a=this.languages[e];if(!(["cimode","dev"].indexOf(a)>-1)&&this.store.hasLanguageSomeTranslations(a)){this.resolvedLanguage=a;break}}!this.resolvedLanguage&&this.languages.indexOf(e)<0&&this.store.hasLanguageSomeTranslations(e)&&(this.resolvedLanguage=e,this.languages.unshift(e))}}changeLanguage(e,a){this.isLanguageChangingTo=e;const t=Ca();this.emit("languageChanging",e);const n=e=>{this.language=e,this.languages=this.services.languageUtils.toResolveHierarchy(e),this.resolvedLanguage=void 0,this.setResolvedLanguage(e)},i=(i,o)=>{o?this.isLanguageChangingTo===e&&(n(o),this.translator.changeLanguage(o),this.isLanguageChangingTo=void 0,this.emit("languageChanged",o),this.logger.log("languageChanged",o)):this.isLanguageChangingTo=void 0,t.resolve(((...e)=>this.t(...e))),a&&a(i,((...e)=>this.t(...e)))},o=a=>{var t,o;e||a||!this.services.languageDetector||(a=[]);const r=La(a)?a:a&&a[0],s=this.store.hasLanguageSomeTranslations(r)?r:this.services.languageUtils.getBestMatchFromCodes(La(a)?[a]:a);s&&(this.language||n(s),this.translator.language||this.translator.changeLanguage(s),null==(o=null==(t=this.services.languageDetector)?void 0:t.cacheUserLanguage)||o.call(t,s)),this.loadResources(s,(e=>{i(e,s)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(o):this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),t}getFixedT(e,a,t){const n=(e,a,...i)=>{let o;o="object"!=typeof a?this.options.overloadTranslationOptionHandler([e,a].concat(i)):{...a},o.lng=o.lng||n.lng,o.lngs=o.lngs||n.lngs,o.ns=o.ns||n.ns,""!==o.keyPrefix&&(o.keyPrefix=o.keyPrefix||t||n.keyPrefix);const r=this.options.keySeparator||".";let s;return s=o.keyPrefix&&Array.isArray(e)?e.map((e=>`${o.keyPrefix}${r}${e}`)):o.keyPrefix?`${o.keyPrefix}${r}${e}`:e,this.t(s,o)};return La(e)?n.lng=e:n.lngs=e,n.ns=a,n.keyPrefix=t,n}t(...e){var a;return null==(a=this.translator)?void 0:a.translate(...e)}exists(...e){var a;return null==(a=this.translator)?void 0:a.exists(...e)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e,a={}){if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const t=a.lng||this.resolvedLanguage||this.languages[0],n=!!this.options&&this.options.fallbackLng,i=this.languages[this.languages.length-1];if("cimode"===t.toLowerCase())return!0;const o=(e,a)=>{const t=this.services.backendConnector.state[`${e}|${a}`];return-1===t||0===t||2===t};if(a.precheck){const e=a.precheck(this,o);if(void 0!==e)return e}return!!this.hasResourceBundle(t,e)||(!(this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages))||!(!o(t,e)||n&&!o(i,e)))}loadNamespaces(e,a){const t=Ca();return this.options.ns?(La(e)&&(e=[e]),e.forEach((e=>{this.options.ns.indexOf(e)<0&&this.options.ns.push(e)})),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}loadLanguages(e,a){const t=Ca();La(e)&&(e=[e]);const n=this.options.preload||[],i=e.filter((e=>n.indexOf(e)<0&&this.services.languageUtils.isSupportedCode(e)));return i.length?(this.options.preload=n.concat(i),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}dir(e){var a,t;if(e||(e=this.resolvedLanguage||((null==(a=this.languages)?void 0:a.length)>0?this.languages[0]:this.language)),!e)return"rtl";const n=(null==(t=this.services)?void 0:t.languageUtils)||new et(ct());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(n.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(e={},a){return new mt(e,a)}cloneInstance(e={},a=pt){const t=e.forkResourceStore;t&&delete e.forkResourceStore;const n={...this.options,...e,isClone:!0},i=new mt(n);void 0===e.debug&&void 0===e.prefix||(i.logger=i.logger.clone(e));if(["store","services","language"].forEach((e=>{i[e]=this[e]})),i.services={...this.services},i.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},t){const e=Object.keys(this.store.data).reduce(((e,a)=>(e[a]={...this.store.data[a]},e[a]=Object.keys(e[a]).reduce(((t,n)=>(t[n]={...e[a][n]},t)),e[a]),e)),{});i.store=new _a(e,n),i.services.resourceStore=i.store}return i.translator=new Xa(i.services,n),i.translator.on("*",((e,...a)=>{i.emit(e,...a)})),i.init(n,a),i.translator.options=n,i.translator.backendConnector.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const gt=mt.createInstance();gt.createInstance=mt.createInstance,gt.createInstance,gt.dir,gt.init,gt.loadResources,gt.reloadResources,gt.use,gt.changeLanguage,gt.getFixedT,gt.t,gt.exists,gt.setDefaultNamespace,gt.hasLoadedNamespace,gt.loadNamespaces,gt.loadLanguages;const{slice:ft,forEach:bt}=[];const yt=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,kt={create(e,a,t,n){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};t&&(i.expires=new Date,i.expires.setTime(i.expires.getTime()+60*t*1e3)),n&&(i.domain=n),document.cookie=function(e,a){const t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{path:"/"};let n=`${e}=${encodeURIComponent(a)}`;if(t.maxAge>0){const e=t.maxAge-0;if(Number.isNaN(e))throw new Error("maxAge should be a Number");n+=`; Max-Age=${Math.floor(e)}`}if(t.domain){if(!yt.test(t.domain))throw new TypeError("option domain is invalid");n+=`; Domain=${t.domain}`}if(t.path){if(!yt.test(t.path))throw new TypeError("option path is invalid");n+=`; Path=${t.path}`}if(t.expires){if("function"!=typeof t.expires.toUTCString)throw new TypeError("option expires is invalid");n+=`; Expires=${t.expires.toUTCString()}`}if(t.httpOnly&&(n+="; HttpOnly"),t.secure&&(n+="; Secure"),t.sameSite)switch("string"==typeof t.sameSite?t.sameSite.toLowerCase():t.sameSite){case!0:n+="; SameSite=Strict";break;case"lax":n+="; SameSite=Lax";break;case"strict":n+="; SameSite=Strict";break;case"none":n+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return t.partitioned&&(n+="; Partitioned"),n}(e,encodeURIComponent(a),i)},read(e){const a=`${e}=`,t=document.cookie.split(";");for(let n=0;n<t.length;n++){let e=t[n];for(;" "===e.charAt(0);)e=e.substring(1,e.length);if(0===e.indexOf(a))return e.substring(a.length,e.length)}return null},remove(e){this.create(e,"",-1)}};var vt={name:"cookie",lookup(e){let{lookupCookie:a}=e;if(a&&"undefined"!=typeof document)return kt.read(a)||void 0},cacheUserLanguage(e,a){let{lookupCookie:t,cookieMinutes:n,cookieDomain:i,cookieOptions:o}=a;t&&"undefined"!=typeof document&&kt.create(t,e,n,i,o)}},xt={name:"querystring",lookup(e){var a;let t,{lookupQuerystring:n}=e;if("undefined"!=typeof window){let{search:e}=window.location;!window.location.search&&(null==(a=window.location.hash)?void 0:a.indexOf("?"))>-1&&(e=window.location.hash.substring(window.location.hash.indexOf("?")));const i=e.substring(1).split("&");for(let a=0;a<i.length;a++){const e=i[a].indexOf("=");if(e>0){i[a].substring(0,e)===n&&(t=i[a].substring(e+1))}}}return t}};let wt=null;const jt=()=>{if(null!==wt)return wt;try{if(wt="undefined"!=typeof window&&null!==window.localStorage,!wt)return!1;const e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(gn){wt=!1}return wt};var St={name:"localStorage",lookup(e){let{lookupLocalStorage:a}=e;if(a&&jt())return window.localStorage.getItem(a)||void 0},cacheUserLanguage(e,a){let{lookupLocalStorage:t}=a;t&&jt()&&window.localStorage.setItem(t,e)}};let zt=null;const Pt=()=>{if(null!==zt)return zt;try{if(zt="undefined"!=typeof window&&null!==window.sessionStorage,!zt)return!1;const e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(gn){zt=!1}return zt};var Nt={name:"sessionStorage",lookup(e){let{lookupSessionStorage:a}=e;if(a&&Pt())return window.sessionStorage.getItem(a)||void 0},cacheUserLanguage(e,a){let{lookupSessionStorage:t}=a;t&&Pt()&&window.sessionStorage.setItem(t,e)}},Lt={name:"navigator",lookup(e){const a=[];if("undefined"!=typeof navigator){const{languages:e,userLanguage:t,language:n}=navigator;if(e)for(let i=0;i<e.length;i++)a.push(e[i]);t&&a.push(t),n&&a.push(n)}return a.length>0?a:void 0}},Ct={name:"htmlTag",lookup(e){let a,{htmlTag:t}=e;const n=t||("undefined"!=typeof document?document.documentElement:null);return n&&"function"==typeof n.getAttribute&&(a=n.getAttribute("lang")),a}},At={name:"path",lookup(e){var a;let{lookupFromPathIndex:t}=e;if("undefined"==typeof window)return;const n=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(!Array.isArray(n))return;return null==(a=n["number"==typeof t?t:0])?void 0:a.replace("/","")}},Mt={name:"subdomain",lookup(e){var a,t;let{lookupFromSubdomainIndex:n}=e;const i="number"==typeof n?n+1:1,o="undefined"!=typeof window&&(null==(t=null==(a=window.location)?void 0:a.hostname)?void 0:t.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i));if(o)return o[i]}};let It=!1;try{document.cookie,It=!0}catch(gn){}const qt=["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"];It||qt.splice(1,1);class Et{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.type="languageDetector",this.detectors={},this.init(e,a)}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{languageUtils:{}},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e,this.options=function(e){return bt.call(ft.call(arguments,1),(a=>{if(a)for(const t in a)void 0===e[t]&&(e[t]=a[t])})),e}(a,this.options||{},{order:qt,lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"],convertDetectedLanguage:e=>e}),"string"==typeof this.options.convertDetectedLanguage&&this.options.convertDetectedLanguage.indexOf("15897")>-1&&(this.options.convertDetectedLanguage=e=>e.replace("-","_")),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=t,this.addDetector(vt),this.addDetector(xt),this.addDetector(St),this.addDetector(Nt),this.addDetector(Lt),this.addDetector(Ct),this.addDetector(At),this.addDetector(Mt)}addDetector(e){return this.detectors[e.name]=e,this}detect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.order,a=[];return e.forEach((e=>{if(this.detectors[e]){let t=this.detectors[e].lookup(this.options);t&&"string"==typeof t&&(t=[t]),t&&(a=a.concat(t))}})),a=a.filter((e=>{return null!=e&&!("string"==typeof(a=e)&&[/<\s*script.*?>/i,/<\s*\/\s*script\s*>/i,/<\s*img.*?on\w+\s*=/i,/<\s*\w+\s*on\w+\s*=.*?>/i,/javascript\s*:/i,/vbscript\s*:/i,/expression\s*\(/i,/eval\s*\(/i,/alert\s*\(/i,/document\.cookie/i,/document\.write\s*\(/i,/window\.location/i,/innerHTML/i].some((e=>e.test(a))));var a})).map((e=>this.options.convertDetectedLanguage(e))),this.services&&this.services.languageUtils&&this.services.languageUtils.getBestMatchFromCodes?a:a.length>0?a[0]:null}cacheUserLanguage(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.caches;a&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||a.forEach((a=>{this.detectors[a]&&this.detectors[a].cacheUserLanguage(e,this.options)})))}}Et.type="languageDetector";const Ot={common:{search:"Search",loading:"Loading...",error:"Error",retry:"Retry"},nav:{home:"Home",airQuality:"Air Quality",about:"About",contact:"Contact"},home:{title:"Air Quality Index",subtitle:"Real-time air quality information for cities worldwide",searchPlaceholder:"Enter city name...",popularCities:"Popular Cities",dataDisclaimer:"Data for reference only | Real use requires a real air quality API.",cities:{beijing:"Beijing",shanghai:"Shanghai",guangzhou:"Guangzhou",shenzhen:"Shenzhen",chengdu:"Chengdu",chongqing:"Chongqing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"New York",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphia",sanantonio:"San Antonio",sandiego:"San Diego",london:"London",manchester:"Manchester",birmingham:"Birmingham",liverpool:"Liverpool",leeds:"Leeds",glasgow:"Glasgow",sheffield:"Sheffield",bristol:"Bristol",paris:"Paris",marseille:"Marseille",lyon:"Lyon",toulouse:"Toulouse",nice:"Nice",nantes:"Nantes",strasbourg:"Strasbourg",montpellier:"Montpellier",cairo:"Cairo",alexandria:"Alexandria",giza:"Giza",shubra:"Shubra El-Kheima",portsaid:"Port Said",suez:"Suez",luxor:"Luxor",asyut:"Asyut",riyadh:"Riyadh",jeddah:"Jeddah",mecca:"Mecca",medina:"Medina",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Mumbai",bangalore:"Bangalore",kolkata:"Kolkata",chennai:"Chennai",hyderabad:"Hyderabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karachi",lahore:"Lahore",faisalabad:"Faisalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Hyderabad",gujranwala:"Gujranwala",peshawar:"Peshawar",athens:"Athens",thessaloniki:"Thessaloniki",patras:"Patras",heraklion:"Heraklion",larissa:"Larissa",volos:"Volos",ioannina:"Ioannina",chania:"Chania",istanbul:"Istanbul",ankara:"Ankara",izmir:"Izmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalya",kathmandu:"Kathmandu",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Sarajevo",banjaluka:"Banja Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brčko",belgrade:"Belgrade",novisad:"Novi Sad",nis:"Niš",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Čačak",zagreb:"Zagreb",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Dublin",cork:"Cork",limerick:"Limerick",galway:"Galway",waterford:"Waterford",drogheda:"Drogheda",dundalk:"Dundalk",swords:"Swords",tokyo:"Tokyo",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hamburg",munich:"Munich",cologne:"Cologne",frankfurt:"Frankfurt",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barcelona",valencia:"Valencia",seville:"Seville",zaragoza:"Zaragoza",malaga:"Malaga",murcia:"Murcia",palma:"Palma"}},airQuality:{aqi:"Air Quality Index",pm25:"PM2.5",pm10:"PM10",o3:"Ozone",no2:"Nitrogen Dioxide",so2:"Sulfur Dioxide",co:"Carbon Monoxide"},aqiLevels:{good:"Good",moderate:"Moderate",unhealthyForSensitive:"Unhealthy for Sensitive Groups",unhealthy:"Unhealthy",veryUnhealthy:"Very Unhealthy",hazardous:"Hazardous"},faq:{title:"Frequently Asked Questions",whatIsAQI:{question:"What is AQI?",answer:"The Air Quality Index (AQI) is a standardized measure used to report daily air quality. It tells you how clean or polluted your air is, and what associated health effects might be a concern for you."},whatIsPM25:{question:"What is PM2.5?",answer:"PM2.5 refers to fine particulate matter with a diameter of 2.5 micrometers or less. These particles are small enough to penetrate deep into the lungs and can cause serious health problems."},dataSource:{question:"What are the data sources and update frequency?",answer:"AirQuality.Tools data comes from authoritative meteorological and environmental monitoring agencies, usually updated hourly to ensure accuracy."},howToQuery:{question:"How to check air quality in a city?",answer:"Enter the city name on the AirQuality.Tools homepage and click 'Search' to get real-time air quality data for that city."},healthImpact:{question:"Does air quality affect health?",answer:"Air pollution increases the risk of respiratory and cardiovascular diseases, especially for children, the elderly, and sensitive groups. Pay attention to air quality and maintain a healthy lifestyle."}},about:{title:"About Us",description:"AirQuality.Tools is committed to providing users with authoritative, timely, and user-friendly global air quality data services.",team:"Our team consists of experts in environmental science, data engineering, and frontend development, dedicated to using technology to protect healthy living."},contact:{title:"Contact Us",intro:"For cooperation, suggestions, or data issues, please contact us via the following methods:",email:"Email",wechat:"WeChat",feedback:"Feedback form (coming soon)"}},Rt={common:{search:"搜索",loading:"加载中...",error:"错误",retry:"重试"},nav:{home:"首页",airQuality:"空气质量",faq:"常见问题",about:"关于我们",contact:"联系我们"},home:{title:"空气质量指数",subtitle:"全球城市的实时空气质量信息",searchPlaceholder:"输入城市名称...",popularCities:"热门城市",dataDisclaimer:"数据仅供参考 | 实际使用需要配置真实的空气质量API",cities:{beijing:"北京",shanghai:"上海",guangzhou:"广州",shenzhen:"深圳",chengdu:"成都",chongqing:"重庆",hangzhou:"杭州",xian:"西安",newyork:"纽约",losangeles:"洛杉矶",chicago:"芝加哥",houston:"休斯敦",phoenix:"菲尼克斯",philadelphia:"费城",sanantonio:"圣安东尼奥",sandiego:"圣地亚哥",london:"伦敦",manchester:"曼彻斯特",birmingham:"伯明翰",liverpool:"利物浦",leeds:"利兹",glasgow:"格拉斯哥",sheffield:"谢菲尔德",bristol:"布里斯托尔",paris:"巴黎",marseille:"马赛",lyon:"里昂",toulouse:"图卢兹",nice:"尼斯",nantes:"南特",strasbourg:"斯特拉斯堡",montpellier:"蒙彼利埃",cairo:"开罗",alexandria:"亚历山大",giza:"吉萨",shubra:"舒布拉",portsaid:"塞得港",suez:"苏伊士",luxor:"卢克索",asyut:"艾斯尤特",riyadh:"利雅得",jeddah:"吉达",mecca:"麦加",medina:"麦地那",dammam:"达曼",khobar:"胡拜尔",tabuk:"塔布克",abha:"阿布哈",delhi:"德里",mumbai:"孟买",bangalore:"班加罗尔",kolkata:"加尔各答",chennai:"金奈",hyderabad:"海得拉巴",pune:"浦那",ahmedabad:"艾哈迈达巴德",phnompenh:"金边",siemreap:"暹粒",battambang:"马德望",sihanoukville:"西哈努克市",kampongcham:"磅湛",kampot:"贡布",takhmau:"塔克玛乌",poipet:"波贝",karachi:"卡拉奇",lahore:"拉合尔",faisalabad:"费萨拉巴德",rawalpindi:"拉瓦尔品第",multan:"木尔坦",hyderabadpk:"海得拉巴（巴基斯坦）",gujranwala:"古杰兰瓦拉",peshawar:"白沙瓦",athens:"雅典",thessaloniki:"塞萨洛尼基",patras:"帕特雷",heraklion:"伊拉克利翁",larissa:"拉里萨",volos:"沃洛斯",ioannina:"约阿尼纳",chania:"哈尼亚",istanbul:"伊斯坦布尔",ankara:"安卡拉",izmir:"伊兹密尔",bursa:"布尔萨",adana:"阿达纳",gaziantep:"加济安泰普",konya:"科尼亚",antalya:"安塔利亚",kathmandu:"加德满都",pokhara:"博卡拉",lalitpur:"拉利特布尔",bharatpur:"巴拉特布尔",biratnagar:"比拉特纳加尔",birgunj:"比尔甘杰",dharan:"达兰",bhaktapur:"巴克塔普尔",sarajevo:"萨拉热窝",banjaluka:"巴尼亚卢卡",tuzla:"图兹拉",zenica:"泽尼察",mostar:"莫斯塔尔",bijeljina:"比耶利纳",prijedor:"普里耶多尔",brcko:"布尔奇科",belgrade:"贝尔格莱德",novisad:"诺维萨德",nis:"尼什",kragujevac:"克拉古耶瓦茨",subotica:"苏博蒂察",zrenjanin:"兹雷尼亚宁",pancevo:"潘切沃",cacak:"查查克",zagreb:"萨格勒布",split:"斯普利特",rijeka:"里耶卡",osijek:"奥西耶克",zadar:"扎达尔",slavonskibrod:"斯拉沃尼亚布罗德",pula:"普拉",karlovac:"卡尔洛瓦茨",dublin:"都柏林",cork:"科克",limerick:"利默里克",galway:"戈尔韦",waterford:"沃特福德",drogheda:"德罗赫达",dundalk:"邓多克",swords:"索兹",tokyo:"东京",osaka:"大阪",yokohama:"横滨",nagoya:"名古屋",sapporo:"札幌",fukuoka:"福冈",kobe:"神户",kyoto:"京都",berlin:"柏林",hamburg:"汉堡",munich:"慕尼黑",cologne:"科隆",frankfurt:"法兰克福",stuttgart:"斯图加特",dusseldorf:"杜塞尔多夫",dortmund:"多特蒙德",madrid:"马德里",barcelona:"巴塞罗那",valencia:"瓦伦西亚",seville:"塞维利亚",zaragoza:"萨拉戈萨",malaga:"马拉加",murcia:"穆尔西亚",palma:"帕尔马"}},airQuality:{aqi:"空气质量指数",pm25:"PM2.5",pm10:"PM10",o3:"臭氧",no2:"二氧化氮",so2:"二氧化硫",co:"一氧化碳"},aqiLevels:{good:"优",moderate:"良",unhealthyForSensitive:"对敏感人群不健康",unhealthy:"不健康",veryUnhealthy:"非常不健康",hazardous:"危险"},faq:{title:"常见问题",whatIsAQI:{question:"什么是AQI？",answer:"空气质量指数（AQI）是用于报告每日空气质量的标准化指标。它告诉你你的空气有多干净或有多污染，以及你可能担心的相关健康影响。"},whatIsPM25:{question:"什么是PM2.5？",answer:"PM2.5是指直径为2.5微米或更小的细颗粒物。这些颗粒足够小，可以深入肺部，并可能导致严重的健康问题。"},dataSource:{question:"数据来源和更新频率？",answer:"AirQuality.Tools 的 air quality 数据来源于权威气象和环境监测机构，通常每小时更新一次，确保数据准确及时。"},howToQuery:{question:"如何查询某城市的空气质量？",answer:"在 AirQuality.Tools 首页输入城市名称，点击'查询'即可获取该城市的实时 air quality（空气质量）数据。"},healthImpact:{question:"空气质量对健康有影响吗？",answer:"空气污染会增加呼吸道、心血管等疾病风险，尤其对儿童、老人和敏感人群影响更大。关注 air quality，守护健康生活。"}},about:{title:"关于我们",description:"AirQuality.Tools 致力于为用户提供权威、及时、易用的全球空气质量数据服务。",team:"我们的团队由环境科学、数据工程和前端开发等多领域成员组成，专注于用科技守护健康生活。"},contact:{title:"联系我们",intro:"如有合作、建议或数据问题，欢迎通过以下方式联系我们：",email:"邮箱",wechat:"微信",feedback:"意见反馈表单（即将上线）"}},Tt={common:{search:"搜尋",loading:"加載中...",error:"錯誤",retry:"重試"},nav:{home:"首頁",airQuality:"空氣質量",faq:"常見問題",about:"關於我們",contact:"聯絡我們"},home:{title:"空氣質量指數",subtitle:"全球城市的即時空氣質量資訊",searchPlaceholder:"輸入城市名稱...",popularCities:"熱門城市",dataDisclaimer:"數據僅供參考｜實際使用需配置真實的空氣質量API",cities:{beijing:"北京",shanghai:"上海",guangzhou:"廣州",shenzhen:"深圳",chengdu:"成都",chongqing:"重慶",hangzhou:"杭州",xian:"西安",tokyo:"東京",newyork:"紐約",london:"倫敦",paris:"巴黎"}},airQuality:{aqi:"空氣質量指數",pm25:"PM2.5",pm10:"PM10",o3:"臭氧",no2:"二氧化氮",so2:"二氧化硫",co:"一氧化碳"},aqiLevels:{good:"優",moderate:"良",unhealthyForSensitive:"對敏感人群不健康",unhealthy:"不健康",veryUnhealthy:"非常不健康",hazardous:"危險"},faq:{title:"常見問題",whatIsAQI:{question:"什麼是AQI？",answer:"空氣質量指數（AQI）是用於報告每日空氣質量的標準化指標。它告訴你你的空氣有多乾淨或有多污染，以及你可能擔心的相關健康影響。"},whatIsPM25:{question:"什麼是PM2.5？",answer:"PM2.5是指直徑為2.5微米或更小的細顆粒物。這些顆粒足夠小，可以深入肺部，並可能導致嚴重的健康問題。"},dataSource:{question:"數據來源和更新頻率？",answer:"AirQuality.Tools 的 air quality 數據來源於權威氣象和環境監測機構，通常每小時更新一次，確保數據準確及時。"},howToQuery:{question:"如何查詢某城市的空氣質量？",answer:"在 AirQuality.Tools 首頁輸入城市名稱，點擊'查詢'即可獲取該城市的即時 air quality（空氣質量）數據。"},healthImpact:{question:"空氣質量對健康有影響嗎？",answer:"空氣污染會增加呼吸道、心血管等疾病風險，尤其對兒童、老人和敏感人群影響更大。關注 air quality，守護健康生活。"}},about:{title:"關於我們",description:"AirQuality.Tools 致力於為用戶提供權威、及時、易用的全球空氣質量數據服務。",team:"我們的團隊由環境科學、數據工程和前端開發等多領域成員組成，專注於用科技守護健康生活。"},contact:{title:"聯絡我們",intro:"如有合作、建議或數據問題，歡迎通過以下方式聯絡我們：",email:"電子郵件",wechat:"微信",feedback:"意見反饋表單（即將上線"}},Dt={common:{search:"検索",loading:"読み込み中...",error:"エラー",retry:"再試行"},nav:{home:"ホーム",airQuality:"大気質",faq:"よくある質問",about:"私たちについて",contact:"お問い合わせ"},home:{title:"大気質指数",subtitle:"世界中の都市のリアルタイム大気質情報",searchPlaceholder:"都市名を入力...",popularCities:"人気の都市",dataDisclaimer:"データは参考用です｜実際の利用には本物の大気質APIが必要です。",cities:{beijing:"北京",shanghai:"上海",guangzhou:"広州",shenzhen:"深圳",tokyo:"東京",osaka:"大阪",yokohama:"横浜",nagoya:"名古屋",sapporo:"札幌",fukuoka:"福岡",kobe:"神戸",kyoto:"京都",newyork:"ニューヨーク",london:"ロンドン",paris:"パリ"}},airQuality:{aqi:"大気質指数",pm25:"PM2.5",pm10:"PM10",o3:"オゾン",no2:"二酸化窒素",so2:"二酸化硫黄",co:"一酸化炭素"},aqiLevels:{good:"良い",moderate:"普通",unhealthyForSensitive:"敏感な人に不健康",unhealthy:"不健康",veryUnhealthy:"非常に不健康",hazardous:"有害"},faq:{title:"よくある質問",whatIsAQI:{question:"AQIとは何ですか？",answer:"大気質指数（AQI）は、毎日の大気質を報告するための標準化された指標です。空気がどれだけきれいか、または汚染されているか、そしてどのような健康への影響があるかを示します。"},whatIsPM25:{question:"PM2.5とは何ですか？",answer:"PM2.5は直径2.5マイクロメートル以下の微粒子を指します。これらの粒子は肺の奥深くまで入り込み、深刻な健康問題を引き起こす可能性があります。"},dataSource:{question:"データの出典と更新頻度は？",answer:"AirQuality.Toolsのデータは権威ある気象・環境監視機関から取得し、通常は1時間ごとに更新され、正確性が確保されています。"},howToQuery:{question:"都市の大気質をどうやって調べますか？",answer:"AirQuality.Toolsのホームページで都市名を入力し、「検索」をクリックすると、その都市のリアルタイム大気質データが取得できます。"},healthImpact:{question:"大気質は健康に影響しますか？",answer:"大気汚染は呼吸器や心血管疾患のリスクを高め、特に子供や高齢者、敏感な人々に大きな影響を与えます。大気質に注意し、健康的な生活を送りましょう。"}},about:{title:"私たちについて",description:"AirQuality.Toolsは、権威ある、タイムリーで使いやすいグローバルな大気質データサービスをユーザーに提供することに尽力しています。",team:"私たちのチームは、環境科学、データエンジニアリング、フロントエンド開発などの分野のメンバーで構成されており、テクノロジーで健康的な生活を守ることに専念しています。"},contact:{title:"お問い合わせ",intro:"協力、提案、またはデータに関するご質問がある場合は、以下の方法でご連絡ください：",email:"メール",wechat:"WeChat",feedback:"フィードバックフォーム（近日公開）"}},$t={common:{search:"검색",loading:"로딩 중...",error:"오류",retry:"다시 시도"},nav:{home:"홈",airQuality:"대기질",faq:"자주 묻는 질문",about:"회사 소개",contact:"문의하기"},home:{title:"대기질 지수",subtitle:"전 세계 도시의 실시간 대기질 정보",searchPlaceholder:"도시 이름 입력...",popularCities:"인기 도시",dataDisclaimer:"데이터는 참고용입니다 | 실제 사용을 위해서는 실제 대기질 API가 필요합니다.",cities:{beijing:"베이징",shanghai:"상하이",guangzhou:"광저우",shenzhen:"선전",tokyo:"도쿄",newyork:"뉴욕",london:"런던",paris:"파리"}},airQuality:{aqi:"대기질 지수",pm25:"PM2.5",pm10:"PM10",o3:"오존",no2:"이산화질소",so2:"이산화황",co:"일산화탄소"},aqiLevels:{good:"좋음",moderate:"보통",unhealthyForSensitive:"민감군에 나쁨",unhealthy:"나쁨",veryUnhealthy:"매우 나쁨",hazardous:"위험"},faq:{title:"자주 묻는 질문",whatIsAQI:{question:"AQI란 무엇입니까?",answer:"대기질 지수(AQI)는 매일의 대기질을 보고하는 표준화된 지표입니다. 공기가 얼마나 깨끗하거나 오염되었는지, 그리고 관련 건강 영향이 무엇인지 알려줍니다."},whatIsPM25:{question:"PM2.5란 무엇입니까?",answer:"PM2.5는 지름이 2.5마이크로미터 이하인 미세 입자를 의미합니다. 이 입자는 폐 깊숙이 침투할 수 있으며 심각한 건강 문제를 일으킬 수 있습니다."},dataSource:{question:"데이터 출처와 갱신 빈도는?",answer:"AirQuality.Tools의 데이터는 권위 있는 기상 및 환경 모니터링 기관에서 제공되며, 일반적으로 매시간 갱신되어 정확성을 보장합니다."},howToQuery:{question:"도시의 대기질을 어떻게 확인하나요?",answer:"AirQuality.Tools 홈페이지에서 도시 이름을 입력하고 '검색'을 클릭하면 해당 도시의 실시간 대기질 데이터를 확인할 수 있습니다."},healthImpact:{question:"대기질이 건강에 영향을 미치나요?",answer:"대기 오염은 호흡기 및 심혈관 질환의 위험을 높이며, 특히 어린이, 노인 및 민감한 사람들에게 더 큰 영향을 미칩니다. 대기질에 주의하고 건강한 생활을 유지하세요."}},about:{title:"회사 소개",description:"AirQuality.Tools는 사용자에게 권위 있고, 신속하며, 사용하기 쉬운 글로벌 대기질 데이터 서비스를 제공하기 위해 노력하고 있습니다.",team:"저희 팀은 환경 과학, 데이터 엔지니어링, 프론트엔드 개발 등 다양한 분야의 구성원으로 이루어져 있으며, 기술로 건강한 삶을 지키는 데 전념하고 있습니다."},contact:{title:"문의하기",intro:"협업, 제안 또는 데이터 문제에 대해 아래 방법으로 문의해 주세요:",email:"이메일",wechat:"WeChat",feedback:"피드백 폼(곧 제공 예정)"}},Qt={common:{search:"Buscar",loading:"Cargando...",error:"Error",retry:"Reintentar"},nav:{home:"Inicio",airQuality:"Calidad del aire",faq:"Preguntas frecuentes",about:"Sobre nosotros",contact:"Contacto"},home:{title:"Índice de calidad del aire",subtitle:"Información en tiempo real sobre la calidad del aire en ciudades de todo el mundo",searchPlaceholder:"Ingrese el nombre de la ciudad...",popularCities:"Ciudades populares",dataDisclaimer:"Datos solo para referencia | El uso real requiere una API de calidad del aire real.",cities:{beijing:"Pekín",shanghai:"Shanghái",guangzhou:"Cantón",shenzhen:"Shenzhen",tokyo:"Tokio",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kioto",berlin:"Berlín",hamburg:"Hamburgo",munich:"Múnich",cologne:"Colonia",frankfurt:"Fráncfort",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",newyork:"Nueva York",london:"Londres",paris:"París",madrid:"Madrid",barcelona:"Barcelona",valencia:"Valencia",seville:"Sevilla",zaragoza:"Zaragoza",malaga:"Málaga",murcia:"Murcia",palma:"Palma"}},airQuality:{aqi:"Índice de calidad del aire",pm25:"PM2.5",pm10:"PM10",o3:"Ozono",no2:"Dióxido de nitrógeno",so2:"Dióxido de azufre",co:"Monóxido de carbono"},aqiLevels:{good:"Bueno",moderate:"Moderado",unhealthyForSensitive:"Insalubre para grupos sensibles",unhealthy:"Insalubre",veryUnhealthy:"Muy insalubre",hazardous:"Peligroso"},faq:{title:"Preguntas frecuentes",whatIsAQI:{question:"¿Qué es el AQI?",answer:"El Índice de Calidad del Aire (AQI) es una medida estandarizada utilizada para informar la calidad del aire diaria. Le indica cuán limpio o contaminado está el aire y qué efectos sobre la salud pueden ser motivo de preocupación para usted."},whatIsPM25:{question:"¿Qué es PM2.5?",answer:"PM2.5 se refiere a partículas finas con un diámetro de 2.5 micrómetros o menos. Estas partículas son lo suficientemente pequeñas como para penetrar profundamente en los pulmones y pueden causar graves problemas de salud."},dataSource:{question:"¿Cuáles son las fuentes de datos y la frecuencia de actualización?",answer:"Los datos de AirQuality.Tools provienen de agencias meteorológicas y de monitoreo ambiental autorizadas, y generalmente se actualizan cada hora para garantizar la precisión."},howToQuery:{question:"¿Cómo consultar la calidad del aire de una ciudad?",answer:"Ingrese el nombre de la ciudad en la página principal de AirQuality.Tools y haga clic en 'Buscar' para obtener los datos de calidad del aire en tiempo real de esa ciudad."},healthImpact:{question:"¿La calidad del aire afecta la salud?",answer:"La contaminación del aire aumenta el riesgo de enfermedades respiratorias y cardiovasculares, especialmente en niños, ancianos y personas sensibles. Preste atención a la calidad del aire y mantenga un estilo de vida saludable."}},about:{title:"Sobre nosotros",description:"AirQuality.Tools se compromete a proporcionar a los usuarios servicios de datos de calidad del aire globales, autorizados, oportunos y fáciles de usar.",team:"Nuestro equipo está formado por miembros de los campos de la ciencia ambiental, la ingeniería de datos y el desarrollo frontend, dedicados a proteger la vida saludable mediante la tecnología."},contact:{title:"Contacto",intro:"Para colaboraciones, sugerencias o problemas de datos, contáctenos a través de los siguientes métodos:",email:"Correo electrónico",wechat:"WeChat",feedback:"Formulario de comentarios (próximamente)"}},Ft={common:{search:"Recherche",loading:"Chargement...",error:"Erreur",retry:"Réessayer"},nav:{home:"Accueil",airQuality:"Qualité de l'air",faq:"FAQ",about:"À propos",contact:"Contact"},home:{title:"Indice de qualité de l'air",subtitle:"Informations en temps réel sur la qualité de l'air pour les villes du monde entier",searchPlaceholder:"Entrez le nom de la ville...",popularCities:"Villes populaires",dataDisclaimer:"Données à titre indicatif uniquement | L'utilisation réelle nécessite une véritable API de qualité de l'air.",cities:{beijing:"Pékin",shanghai:"Shanghai",guangzhou:"Canton",shenzhen:"Shenzhen",chengdu:"Chengdu",chongqing:"Chongqing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"New York",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphie",sanantonio:"San Antonio",sandiego:"San Diego",london:"Londres",manchester:"Manchester",birmingham:"Birmingham",liverpool:"Liverpool",leeds:"Leeds",glasgow:"Glasgow",sheffield:"Sheffield",bristol:"Bristol",paris:"Paris",marseille:"Marseille",lyon:"Lyon",toulouse:"Toulouse",nice:"Nice",nantes:"Nantes",strasbourg:"Strasbourg",montpellier:"Montpellier",cairo:"Le Caire",alexandria:"Alexandrie",giza:"Gizeh",shubra:"Choubra el-Kheima",portsaid:"Port-Saïd",suez:"Suez",luxor:"Louxor",asyut:"Assiout",riyadh:"Riyad",jeddah:"Djeddah",mecca:"La Mecque",medina:"Médine",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Bombay",bangalore:"Bangalore",kolkata:"Calcutta",chennai:"Chennai",hyderabad:"Hyderabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karachi",lahore:"Lahore",faisalabad:"Faisalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Hyderabad (Pakistan)",gujranwala:"Gujranwala",peshawar:"Peshawar",athens:"Athènes",thessaloniki:"Thessalonique",patras:"Patras",heraklion:"Héraklion",larissa:"Larissa",volos:"Volos",ioannina:"Ioannina",chania:"La Canée",istanbul:"Istanbul",ankara:"Ankara",izmir:"Izmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalya",kathmandu:"Katmandou",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Sarajevo",banjaluka:"Banja Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brčko",belgrade:"Belgrade",novisad:"Novi Sad",nis:"Niš",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Čačak",zagreb:"Zagreb",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Dublin",cork:"Cork",limerick:"Limerick",galway:"Galway",waterford:"Waterford",drogheda:"Drogheda",dundalk:"Dundalk",swords:"Swords",tokyo:"Tokyo",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hambourg",munich:"Munich",cologne:"Cologne",frankfurt:"Francfort",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barcelone",valencia:"Valence",seville:"Séville",zaragoza:"Saragosse",malaga:"Málaga",murcia:"Murcie",palma:"Palma"}},airQuality:{aqi:"Indice de qualité de l'air",pm25:"PM2.5",pm10:"PM10",o3:"Ozone",no2:"Dioxyde d'azote",so2:"Dioxyde de soufre",co:"Monoxyde de carbone"},aqiLevels:{good:"Bon",moderate:"Modéré",unhealthyForSensitive:"Malsain pour les groupes sensibles",unhealthy:"Malsain",veryUnhealthy:"Très malsain",hazardous:"Dangereux"},faq:{title:"Questions fréquemment posées",whatIsAQI:{question:"Qu'est-ce que l'AQI ?",answer:"L'indice de qualité de l'air (AQI) est une mesure normalisée utilisée pour signaler la qualité de l'air quotidienne. Il vous indique à quel point votre air est propre ou pollué, et quels effets sur la santé associés pourraient vous préoccuper."},whatIsPM25:{question:"Qu'est-ce que PM2.5 ?",answer:"Les PM2,5 désignent des particules fines ayant un diamètre de 2,5 micromètres ou moins. Ces particules sont assez petites pour pénétrer profondément dans les poumons et peuvent causer de graves problèmes de santé."},dataSource:{question:"Quelles sont les sources de données et la fréquence de mise à jour ?",answer:"Les données d'AirQuality.Tools proviennent d'agences météorologiques et de surveillance environnementale reconnues, généralement mises à jour toutes les heures pour garantir leur exactitude."},howToQuery:{question:"Comment consulter la qualité de l'air d'une ville ?",answer:"Entrez le nom de la ville sur la page d'accueil d'AirQuality.Tools et cliquez sur 'Recherche' pour obtenir les données de qualité de l'air en temps réel de cette ville."},healthImpact:{question:"La qualité de l'air affecte-t-elle la santé ?",answer:"La pollution de l'air augmente le risque de maladies respiratoires et cardiovasculaires, en particulier chez les enfants, les personnes âgées et les groupes sensibles. Faites attention à la qualité de l'air et adoptez un mode de vie sain."}},about:{title:"À propos de nous",description:"AirQuality.Tools s'engage à fournir aux utilisateurs des services de données sur la qualité de l'air mondiaux, faisant autorité, opportuns et faciles à utiliser.",team:"Notre équipe est composée de membres spécialisés en sciences de l'environnement, ingénierie des données et développement frontend, dédiés à la protection de la vie saine par la technologie."},contact:{title:"Contact",intro:"Pour toute collaboration, suggestion ou question sur les données, veuillez nous contacter par les moyens suivants :",email:"E-mail",wechat:"WeChat",feedback:"Formulaire de retour (bientôt disponible)"}},Bt={common:{search:"Suche",loading:"Laden...",error:"Fehler",retry:"Wiederholen"},nav:{home:"Startseite",airQuality:"Luftqualität",faq:"FAQ",about:"Über uns",contact:"Kontakt"},home:{title:"Luftqualitätsindex",subtitle:"Echtzeit-Luftqualitätsinformationen für Städte weltweit",searchPlaceholder:"Stadtname eingeben...",popularCities:"Beliebte Städte",dataDisclaimer:"Daten nur als Referenz | Für die tatsächliche Nutzung ist eine echte Luftqualitäts-API erforderlich.",cities:{beijing:"Peking",shanghai:"Shanghai",guangzhou:"Guangzhou",shenzhen:"Shenzhen",tokyo:"Tokio",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hamburg",munich:"München",cologne:"Köln",frankfurt:"Frankfurt",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barcelona",valencia:"Valencia",seville:"Sevilla",zaragoza:"Saragossa",malaga:"Málaga",murcia:"Murcia",palma:"Palma",newyork:"New York",london:"London",paris:"Paris"}},airQuality:{aqi:"Luftqualitätsindex",pm25:"PM2.5",pm10:"PM10",o3:"Ozon",no2:"Stickstoffdioxid",so2:"Schwefeldioxid",co:"Kohlenmonoxid"},aqiLevels:{good:"Gut",moderate:"Mäßig",unhealthyForSensitive:"Ungesund für empfindliche Gruppen",unhealthy:"Ungesund",veryUnhealthy:"Sehr ungesund",hazardous:"Gefährlich"},faq:{title:"Häufig gestellte Fragen",whatIsAQI:{question:"Was ist der AQI?",answer:"Der Luftqualitätsindex (AQI) ist ein standardisiertes Maß zur Meldung der täglichen Luftqualität. Er sagt Ihnen, wie sauber oder verschmutzt Ihre Luft ist und welche gesundheitlichen Auswirkungen für Sie von Bedeutung sein könnten."},whatIsPM25:{question:"Was ist PM2.5?",answer:"PM2.5 bezieht sich auf feine Partikel mit einem Durchmesser von 2,5 Mikrometern oder weniger. Diese Partikel sind klein genug, um tief in die Lunge einzudringen und können ernsthafte Gesundheitsprobleme verursachen."},dataSource:{question:"Was sind die Datenquellen und die Aktualisierungshäufigkeit?",answer:"Die Daten von AirQuality.Tools stammen von anerkannten meteorologischen und Umweltüberwachungsstellen und werden in der Regel stündlich aktualisiert, um die Genauigkeit zu gewährleisten."},howToQuery:{question:"Wie kann man die Luftqualität einer Stadt abfragen?",answer:"Geben Sie den Stadtnamen auf der Startseite von AirQuality.Tools ein und klicken Sie auf 'Suche', um die aktuellen Luftqualitätsdaten dieser Stadt zu erhalten."},healthImpact:{question:"Beeinflusst die Luftqualität die Gesundheit?",answer:"Luftverschmutzung erhöht das Risiko für Atemwegs- und Herz-Kreislauf-Erkrankungen, insbesondere bei Kindern, älteren Menschen und empfindlichen Gruppen. Achten Sie auf die Luftqualität und führen Sie einen gesunden Lebensstil."}},about:{title:"Über uns",description:"AirQuality.Tools engagiert sich dafür, den Nutzern weltweit autoritative, zeitnahe und benutzerfreundliche Luftqualitätsdaten bereitzustellen.",team:"Unser Team besteht aus Experten für Umweltwissenschaften, Datenengineering und Frontend-Entwicklung, die sich dem Schutz eines gesunden Lebens durch Technologie widmen."},contact:{title:"Kontakt",intro:"Für Kooperationen, Anregungen oder Datenanfragen kontaktieren Sie uns bitte auf folgende Weise:",email:"E-Mail",wechat:"WeChat",feedback:"Feedback-Formular (bald verfügbar)"}},Kt={common:{search:"بحث",loading:"جار التحميل...",error:"خطأ",retry:"إعادة المحاولة"},nav:{home:"الصفحة الرئيسية",airQuality:"جودة الهواء",faq:"الأسئلة الشائعة",about:"معلومات عنا",contact:"اتصل بنا"},home:{title:"مؤشر جودة الهواء",subtitle:"معلومات جودة الهواء في الوقت الفعلي للمدن حول العالم",searchPlaceholder:"أدخل اسم المدينة...",popularCities:"المدن الشعبية",dataDisclaimer:"البيانات للمرجعية فقط | الاستخدام الفعلي يتطلب واجهة برمجة تطبيقات جودة هواء حقيقية.",cities:{beijing:"بكين",shanghai:"شنغهاي",guangzhou:"قوانغتشو",shenzhen:"شنتشن",tokyo:"طوكيو",osaka:"أوساكا",yokohama:"يوكوهاما",nagoya:"ناغويا",sapporo:"سابورو",fukuoka:"فوكوكا",kobe:"كوبي",kyoto:"كيوتو",berlin:"برلين",hamburg:"هامبورغ",munich:"ميونخ",cologne:"كولونيا",frankfurt:"فرانكفورت",stuttgart:"شتوتغارت",dusseldorf:"دوسلدورف",dortmund:"دورتموند",madrid:"مدريد",barcelona:"برشلونة",valencia:"فالنسيا",seville:"إشبيلية",zaragoza:"سرقسطة",malaga:"مالقة",murcia:"مرسية",palma:"بالما",newyork:"نيويورك",london:"لندن",paris:"باريس"}},airQuality:{aqi:"مؤشر جودة الهواء",pm25:"PM2.5",pm10:"PM10",o3:"الأوزون",no2:"ثاني أكسيد النيتروجين",so2:"ثاني أكسيد الكبريت",co:"أول أكسيد الكربون"},aqiLevels:{good:"جيد",moderate:"معتدل",unhealthyForSensitive:"غير صحي للمجموعات الحساسة",unhealthy:"غير صحي",veryUnhealthy:"غير صحي للغاية",hazardous:"خطير"},faq:{title:"الأسئلة الشائعة",whatIsAQI:{question:"ما هو مؤشر جودة الهواء؟",answer:"مؤشر جودة الهواء (AQI) هو مقياس موحد يستخدم للإبلاغ عن جودة الهواء اليومية. يخبرك بمدى نظافة أو تلوث الهواء لديك، وما هي التأثيرات الصحية المرتبطة التي قد تهمك."},whatIsPM25:{question:"ما هو PM2.5؟",answer:"يشير PM2.5 إلى الجسيمات الدقيقة التي يبلغ قطرها 2.5 ميكرومتر أو أقل. هذه الجسيمات صغيرة بما يكفي لتخترق أعماق الرئتين ويمكن أن تسبب مشاكل صحية خطيرة."},dataSource:{question:"ما هي مصادر البيانات وتواتر التحديث؟",answer:"تأتي بيانات AirQuality.Tools من وكالات الأرصاد الجوية والمراقبة البيئية المعتمدة، ويتم تحديثها عادة كل ساعة لضمان الدقة."},howToQuery:{question:"كيف يمكن الاستعلام عن جودة هواء مدينة معينة؟",answer:"أدخل اسم المدينة في الصفحة الرئيسية لـ AirQuality.Tools وانقر على 'بحث' للحصول على بيانات جودة الهواء في الوقت الفعلي لتلك المدينة."},healthImpact:{question:"هل تؤثر جودة الهواء على الصحة؟",answer:"تزيد تلوث الهواء من مخاطر الإصابة بأمراض الجهاز التنفسي والقلب والأوعية الدموية، خاصة للأطفال وكبار السن والفئات الحساسة. انتبه إلى جودة الهواء واعتنِ بصحتك."}},about:{title:"معلومات عنا",description:"تلتزم AirQuality.Tools بتقديم خدمات بيانات جودة الهواء العالمية الموثوقة وفي الوقت المناسب وسهلة الاستخدام للمستخدمين.",team:"يتكون فريقنا من أعضاء في مجالات علوم البيئة وهندسة البيانات وتطوير الواجهة الأمامية، يكرسون جهودهم لحماية الحياة الصحية بالتكنولوجيا."},contact:{title:"اتصل بنا",intro:"للتعاون أو الاقتراحات أو مشكلات البيانات، يرجى الاتصال بنا عبر الطرق التالية:",email:"البريد الإلكتروني",wechat:"WeChat",feedback:"نموذج الملاحظات (قريبًا)"}},Ut={common:{search:"खोजें",loading:"लोड हो रहा है...",error:"त्रुटि",retry:"पुनः प्रयास करें"},nav:{home:"होम",airQuality:"वायु गुणवत्ता",faq:"सामान्य प्रश्न",about:"हमारे बारे में",contact:"संपर्क करें"},home:{title:"वायु गुणवत्ता सूचकांक",subtitle:"दुनिया भर के शहरों के लिए रीयल-टाइम वायु गुणवत्ता जानकारी",searchPlaceholder:"शहर का नाम दर्ज करें...",popularCities:"लोकप्रिय शहर",dataDisclaimer:"केवल संदर्भ के लिए डेटा | वास्तविक उपयोग के लिए एक वास्तविक वायु गुणवत्ता API आवश्यक है।",cities:{beijing:"बीजिंग",shanghai:"शंघाई",guangzhou:"ग्वांगझोउ",shenzhen:"शेन्ज़ेन",tokyo:"टोक्यो",osaka:"ओसाका",yokohama:"योकोहामा",nagoya:"नागोया",sapporo:"साप्पोरो",fukuoka:"फुकुओका",kobe:"कोबे",kyoto:"क्योटो",berlin:"बर्लिन",hamburg:"हैम्बर्ग",munich:"म्यूनिख",cologne:"कोलोन",frankfurt:"फ्रैंकफर्ट",stuttgart:"स्टटगार्ट",dusseldorf:"डसेलडोर्फ",dortmund:"डॉर्टमुंड",madrid:"मेड्रिड",barcelona:"बार्सिलोना",valencia:"वेलेंसिया",seville:"सेविल",zaragoza:"जारागोज़ा",malaga:"मलागा",murcia:"मर्सिया",palma:"पाल्मा",newyork:"न्यूयॉर्क",london:"लंदन",paris:"पेरिस",delhi:"दिल्ली",mumbai:"मुंबई",bangalore:"बेंगलुरु",kolkata:"कोलकाता",chennai:"चेन्नई",hyderabad:"हैदराबाद",pune:"पुणे",ahmedabad:"अहमदाबाद"}},airQuality:{aqi:"वायु गुणवत्ता सूचकांक",pm25:"PM2.5",pm10:"PM10",o3:"ओज़ोन",no2:"नाइट्रोजन डाइऑक्साइड",so2:"सल्फर डाइऑक्साइड",co:"कार्बन मोनोऑक्साइड"},aqiLevels:{good:"अच्छा",moderate:"मध्यम",unhealthyForSensitive:"संवेदनशील समूहों के लिए अस्वस्थ",unhealthy:"अस्वस्थ",veryUnhealthy:"बहुत अस्वस्थ",hazardous:"खतरनाक"},faq:{title:"सामान्य प्रश्न",whatIsAQI:{question:"AQI क्या है?",answer:"वायु गुणवत्ता सूचकांक (AQI) एक मानकीकृत माप है जिसका उपयोग दैनिक वायु गुणवत्ता की रिपोर्ट करने के लिए किया जाता है। यह आपको बताता है कि आपकी हवा कितनी साफ या प्रदूषित है और इससे जुड़े स्वास्थ्य प्रभाव क्या हो सकते हैं।"},whatIsPM25:{question:"PM2.5 क्या है?",answer:"PM2.5 वे सूक्ष्म कण हैं जिनका व्यास 2.5 माइक्रोमीटर या उससे कम होता है। ये कण इतने छोटे होते हैं कि वे फेफड़ों में गहराई तक जा सकते हैं और गंभीर स्वास्थ्य समस्याएं पैदा कर सकते हैं।"}},about:{title:"हमारे बारे में",description:"AirQuality.Tools उपयोगकर्ताओं को प्राधिकृत, समय पर और उपयोगकर्ता-अनुकूल वैश्विक वायु गुणवत्ता डेटा सेवाएं प्रदान करने के लिए प्रतिबद्ध है।",team:"हमारी टीम में पर्यावरण विज्ञान, डेटा इंजीनियरिंग और फ्रंटएंड विकास के विशेषज्ञ शामिल हैं, जो स्वस्थ जीवन की रक्षा के लिए प्रौद्योगिकी का उपयोग करने के लिए समर्पित हैं।"},contact:{title:"संपर्क करें",intro:"सहयोग, सुझाव या डेटा समस्याओं के लिए, कृपया निम्नलिखित तरीकों से हमसे संपर्क करें:",email:"ईमेल",wechat:"WeChat",feedback:"प्रतिक्रिया फॉर्म (जल्द आ रहा है)"}},Ht={common:{search:"ស្វែងរក",loading:"កំពុងផ្ទុក...",error:"កំហុស",retry:"សាកល្បងម្តងទៀត"},nav:{home:"ទំព័រដើម",airQuality:"គុណភាពខ្យល់",faq:"សំណួរញឹកញាប់",about:"អំពីពួកយើង",contact:"ទំនាក់ទំនង"},home:{title:"សូចនាករគុណភាពខ្យល់",subtitle:"ព័ត៌មានគុណភាពខ្យល់ពេលវេលាពិតសម្រាប់ទីក្រុងនៅជុំវិញពិភពលោក",searchPlaceholder:"បញ្ចូលឈ្មោះទីក្រុង...",popularCities:"ទីក្រុងពេញនិយម",dataDisclaimer:"ទិន្នន័យសម្រាប់យោងតែប៉ុណ្ណោះ | ការប្រើប្រាស់ពិតប្រាកដត្រូវការប្រើប្រាស់ API គុណភាពខ្យល់ពិតប្រាកដ។",cities:{beijing:"ប៉េកាំង",shanghai:"សៀងហៃ",guangzhou:"ក្វាងចូវ",shenzhen:"សែនជេន",chengdu:"ឆេងទូ",chongqing:"ឆុងឈីង",hangzhou:"ហាំងចូវ",xian:"ស៊ីអាន",newyork:"ញូវយ៉ក",losangeles:"ឡូសអានជេលេស",chicago:"ស៊ីកាហ្គោ",houston:"ហ៊ូស្តុន",phoenix:"ហ្វីនីកស៍",philadelphia:"ហ្វីឡាដែលហ្វៀ",sanantonio:"សានអានតូនីយ៉ូ",sandiego:"សានឌៀហ្គោ",london:"ឡុងដ៍",manchester:"ម៉ានចេស្ទើរ",birmingham:"បឺមីងហាម",liverpool:"លីវើរពូល",leeds:"លីដ",glasgow:"ហ្គ្លាស្កោ",sheffield:"សេហ្វីល",bristol:"ប្រ៊ីស្តល",paris:"ប៉ារីស",marseille:"ម៉ាស្សេ",lyon:"លីយ៉ុង",toulouse:"ទូលូស",nice:"នីស",nantes:"ណង់",strasbourg:"ស្ត្រាសប៊ួក",montpellier:"ម៉ុងបេលីយ៉េ",cairo:"កៃរ៉ូ",alexandria:"អាឡិចសាន់ដ្រីយ៉ា",giza:"ហ្គីហ្សា",shubra:"ស៊ូប្រា",portsaid:"ផតសៃដ៍",suez:"ស៊ុយអេស",luxor:"លុចស័រ",asyut:"អាស៊ីយូត",riyadh:"រីយ៉ាដ",jeddah:"ជេដដា",mecca:"មេក្កា",medina:"មេឌីណា",dammam:"ដាមម៉ាម",khobar:"ខូបារ",tabuk:"តាប៊ុក",abha:"អាបហា",delhi:"ដេលហ៊ី",mumbai:"មុំបៃ",bangalore:"បង់កាលូរ",kolkata:"កុលកាតា",chennai:"ឈេណៃ",hyderabad:"ហៃដេរ៉ាបាដ",pune:"ពុណេ",ahmedabad:"អាហេមដាបាដ",phnompenh:"ភ្នំពេញ",siemreap:"សៀមរាប",battambang:"បាត់ដំបង",sihanoukville:"ព្រះសីហនុ",kampongcham:"កំពង់ចាម",kampot:"កំពត",takhmau:"តាខ្មៅ",poipet:"ប៉ោយប៉ែត",karachi:"ការ៉ាឈី",lahore:"ឡាហ័រ",faisalabad:"ហ្វៃសាឡាបាដ",rawalpindi:"រ៉ាវ៉ាល់ពីនឌី",multan:"មុលតាន",hyderabadpk:"ហៃដេរ៉ាបាដ (ប៉ាគីស្ថាន)",gujranwala:"ហ្គុយហ្សានវ៉ាឡា",peshawar:"ភេសាវ៉ារ",athens:"អាថេន",thessaloniki:"ថេសាឡូនីគី",patras:"ប៉ាត្រាស",heraklion:"ហេរ៉ាក្លីអុង",larissa:"ឡារីសា",volos:"វ៉ូឡូស",ioannina:"អ៊ីអូអានីណា",chania:"ឆានៀ",istanbul:"អ៊ីស្តង់ប៊ុល",ankara:"អង់ការី",izmir:"អ៊ីស្មៀរ",bursa:"ប៊ូសា",adana:"អាដាណា",gaziantep:"ហ្គាស៊ីអង់តេប",konya:"កូនយ៉ា",antalya:"អង់តាល្យា",kathmandu:"កាតម៉ាន់ឌូ",pokhara:"ផុកហារ៉ា",lalitpur:"ឡាលីតពួរ",bharatpur:"បារ៉ាតពួរ",biratnagar:"ប៊ីរ៉ាតណាហ្គារ",birgunj:"ប៊ីរគុនជ",dharan:"ដារ៉ាន",bhaktapur:"បាក់តាពួរ",sarajevo:"សារ៉ាយ៉េវ៉ូ",banjaluka:"បានយាលូកា",tuzla:"ទូស្លា",zenica:"សេនីកា",mostar:"ម៉ូស្តារ",bijeljina:"ប៊ីយែលជីណា",prijedor:"ព្រីយេដរ",brcko:"ប្រ្កូ",belgrade:"បែលហ្គ្រាដ",novisad:"ណូវីសាដ",nis:"នីស",kragujevac:"ក្រ៉ាហ្គូយ៉េវ៉ាក់",subotica:"ស៊ូបូទីកា",zrenjanin:"ស្រេនយ៉ានីន",pancevo:"ផាន្ឈេវ៉ូ",cacak:"ចាចាក់",zagreb:"ហ្សាហ្គ្រេប",split:"ស្ព្លីត",rijeka:"រីយេកា",osijek:"អូស៊ីយ៉េក",zadar:"សាដារ",slavonskibrod:"ស្លាវ៉ុនស្គីប្រោដ",pula:"ពូឡា",karlovac:"ការឡូវ៉ាក់",dublin:"ដាប់លីន",cork:"កក",limerick:"លីមេរិក",galway:"ហ្គាល់វេ",waterford:"វ៉ាតើហ្វត",drogheda:"ដ្រូហេដា",dundalk:"ដាន់ដាល់ក",swords:"ស្វតស៍",tokyo:"តូក្យូ",osaka:"អូសាកា",yokohama:"យ៉ូកូហាម៉ា",nagoya:"ណាហ្គោយ៉ា",sapporo:"សាប៉ូរ៉ូ",fukuoka:"ហ៊្វូកូអូកា",kobe:"កូបេ",kyoto:"ក្យូតូ",berlin:"ប៊ែរឡាំង",hamburg:"ហាំបួក",munich:"ម្យូនិច",cologne:"កូឡូន្យ",frankfurt:"ហ្វ្រង់កហ្វឺត",stuttgart:"ស្ទុតហ្គាត",dusseldorf:"ឌុយសែលដូហ្វ",dortmund:"ដតមុនដ៍",madrid:"ម៉ាឌ្រីដ",barcelona:"បាសេឡូណា",valencia:"វ៉ាឡេនស៊ីយ៉ា",seville:"សេវិល",zaragoza:"សារ៉ាហ្គោសា",malaga:"ម៉ាឡាហ្គា",murcia:"មួស៊ីយ៉ា",palma:"ផាល់ម៉ា"}},airQuality:{aqi:"សូចនាករគុណភាពខ្យល់",pm25:"PM2.5",pm10:"PM10",o3:"អូសូន",no2:"អាសូតឌីអុកស៊ីត",so2:"ស៊ុលហ្វឺឌីអុកស៊ីត",co:"កាបូនម៉ូណូអុកស៊ីត"},aqiLevels:{good:"ល្អ",moderate:"មធ្យម",unhealthyForSensitive:"មិនល្អសម្រាប់ក្រុមមានភាពងាយរង",unhealthy:"មិនល្អ",veryUnhealthy:"មិនល្អខ្លាំង",hazardous:"គ្រោះថ្នាក់"},faq:{title:"សំណួរញឹកញាប់",whatIsAQI:{question:"AQI គឺជាអ្វី?",answer:"សូចនាករគុណភាពខ្យល់ (AQI) គឺជាវិធីសាស្ត្រមានស្តង់ដារដែលប្រើសម្រាប់រាយការណ៍គុណភាពខ្យល់ប្រចាំថ្ងៃ។ វាប្រាប់អ្នកថាខ្យល់ស្អាតឬពុលប៉ុណ្ណា និងផលប៉ះពាល់សុខភាពដែលអាចកើតមាន។"},whatIsPM25:{question:"PM2.5 គឺជាអ្វី?",answer:"PM2.5 ជាធូលីតូចៗដែលមានអង្កត់ផ្ចិត 2.5 មីក្រូម៉ែត្រ ឬតិចជាង។ ធូលីទាំងនេះតូចពេកអាចចូលទៅក្នុងសួតបាន និងអាចបង្កការរលាកសុខភាពធ្ងន់ធ្ងរ។"}},about:{title:"អំពីពួកយើង",description:"AirQuality.Tools តស៊ូមតិដើម្បីផ្តល់សេវាទិន្នន័យគុណភាពខ្យល់សកលដែលមានសិទ្ធិ, ទាន់ពេលវេលា និងងាយស្រួលប្រើប្រាស់។",team:"ក្រុមរបស់យើងរួមមានអ្នកជំនាញវិទ្យាសាស្ត្របរិស្ថាន, វិស្វកម្មទិន្នន័យ និងអភិវឌ្ឍន៍មុខងារ ដែលឧទ្ទិសខ្លួនដើម្បីការពាររស់នៅមានសុខភាព។"},contact:{title:"ទំនាក់ទំនង",intro:"សម្រាប់ការសហការណ៍, សំណើ ឬបញ្ហាទិន្នន័យ សូមទាក់ទងតាមវិធីខាងក្រោម៖",email:"អ៊ីមែល",wechat:"WeChat",feedback:"សំណុំបែបបទមតិយោបល់ (មកដល់ឆាប់ៗនេះ)"}},Vt={common:{search:"تلاش کریں",loading:"لوڈ ہو رہا ہے...",error:"خرابی",retry:"دوبارہ کوشش کریں"},nav:{home:"ہوم",airQuality:"فضا کا معیار",faq:"عمومی سوالات",about:"ہمارے بارے میں",contact:"رابطہ کریں"},home:{title:"فضا کا معیار انڈیکس",subtitle:"دنیا بھر کے شہروں کے لیے حقیقی وقت میں فضا کا معیار معلومات",searchPlaceholder:"شہر کا نام درج کریں...",popularCities:"مشہور شہر",dataDisclaimer:"صرف حوالہ کے لیے ڈیٹا | حقیقی استعمال کے لیے ایک حقیقی فضا کا معیار API درکار ہے۔",cities:{beijing:"بیجنگ",shanghai:"شنگھائی",guangzhou:"گوانگژو",shenzhen:"شینزین",chengdu:"چینگدو",chongqing:"چونگچنگ",hangzhou:"ہانگژو",xian:"شیان",newyork:"نیویارک",losangeles:"لاس اینجلس",chicago:"شکاگو",houston:"ہیوسٹن",phoenix:"فینکس",philadelphia:"فلاڈیلفیا",sanantonio:"سان انتونیو",sandiego:"سان ڈیاگو",london:"لندن",manchester:"مانچسٹر",birmingham:"برمنگھم",liverpool:"لیورپول",leeds:"لیڈز",glasgow:"گلاسگو",sheffield:"شیفیلڈ",bristol:"برسٹل",paris:"پیرس",marseille:"مارسیلی",lyon:"لیون",toulouse:"ٹولوز",nice:"نیس",nantes:"نانتے",strasbourg:"اسٹراسبرگ",montpellier:"مونٹپیلیئر",cairo:"قاہرہ",alexandria:"اسکندریہ",giza:"جیزہ",shubra:"شبرا",portsaid:"پورٹ سعید",suez:"سوئز",luxor:"لکسور",asyut:"اسیوط",riyadh:"ریاض",jeddah:"جدہ",mecca:"مکہ",medina:"مدینہ",dammam:"دمام",khobar:"خبر",tabuk:"تبوک",abha:"ابہا",delhi:"دہلی",mumbai:"ممبئی",bangalore:"بنگلور",kolkata:"کلکتہ",chennai:"چنئی",hyderabad:"حیدرآباد",pune:"پونے",ahmedabad:"احمد آباد",phnompenh:"پنوم پنہ",siemreap:"سیئم ریپ",battambang:"بٹمبنگ",sihanoukville:"سیہانوک ویل",kampongcham:"کمپونگ چام",kampot:"کمپوٹ",takhmau:"تاکھمو",poipet:"پوئپیٹ",karachi:"کراچی",lahore:"لاہور",faisalabad:"فیصل آباد",rawalpindi:"راولپنڈی",multan:"ملتان",hyderabadpk:"حیدرآباد (پاکستان)",gujranwala:"گوجرانوالہ",peshawar:"پشاور",athens:"ایتھنز",thessaloniki:"تھیسالونیکی",patras:"پاتراس",heraklion:"ہیراکلیون",larissa:"لاریسا",volos:"وولوس",ioannina:"ایوانینا",chania:"چانیا",istanbul:"استنبول",ankara:"انقرہ",izmir:"ازمیر",bursa:"برصہ",adana:"ادانہ",gaziantep:"غازی عنتاب",konya:"قونیا",antalya:"انطالیہ",kathmandu:"کٹھمنڈو",pokhara:"پوکھرا",lalitpur:"لالیت پور",bharatpur:"بھرت پور",biratnagar:"بیرات نگر",birgunj:"بیرگنج",dharan:"دھارن",bhaktapur:"بھکتاپور",sarajevo:"سراييوو",banjaluka:"بانیا لوکا",tuzla:"توزلا",zenica:"زینیکا",mostar:"موستار",bijeljina:"بیجیلیجینا",prijedor:"پریجیڈور",brcko:"برچکو",belgrade:"بلغراد",novisad:"نووی ساد",nis:"نیش",kragujevac:"کرگوجیواک",subotica:"سبوٹیکا",zrenjanin:"زرنجانین",pancevo:"پانچیفو",cacak:"چاکاک",zagreb:"زگریب",split:"سپلٹ",rijeka:"رییکا",osijek:"اوسییک",zadar:"زادار",slavonskibrod:"سلاونسکی برود",pula:"پولا",karlovac:"کارلوواک",dublin:"ڈبلن",cork:"کارک",limerick:"لیمرک",galway:"گالوے",waterford:"واٹر فورڈ",drogheda:"ڈروگھیڈا",dundalk:"ڈنڈالک",swords:"سوورڈز",tokyo:"ٹوکیو",osaka:"اوساکا",yokohama:"یوکوہاما",nagoya:"ناگویا",sapporo:"ساپورو",fukuoka:"فوکووکا",kobe:"کوبے",kyoto:"کیوٹو",berlin:"برلن",hamburg:"ہیمبرگ",munich:"میونخ",cologne:"کولون",frankfurt:"فرینکفرٹ",stuttgart:"سٹٹگارٹ",dusseldorf:"ڈسلڈورف",dortmund:"ڈورٹمنڈ",madrid:"میڈرڈ",barcelona:"بارسلونا",valencia:"ویلینسیا",seville:"سیویل",zaragoza:"زاراگوزا",malaga:"مالاگا",murcia:"مرسیا",palma:"پالما"}},airQuality:{aqi:"فضا کا معیار انڈیکس",pm25:"PM2.5",pm10:"PM10",o3:"اوزون",no2:"نائٹروجن ڈائی آکسائیڈ",so2:"سلفر ڈائی آکسائیڈ",co:"کاربن مونو آکسائیڈ"},aqiLevels:{good:"اچھا",moderate:"درمیانہ",unhealthyForSensitive:"حساس گروپوں کے لیے غیر صحت مند",unhealthy:"غیر صحت مند",veryUnhealthy:"بہت غیر صحت مند",hazardous:"خطرناک"},faq:{title:"عمومی سوالات",whatIsAQI:{question:"AQI کیا ہے؟",answer:"فضا کا معیار انڈیکس (AQI) ایک معیاری پیمانہ ہے جو روزانہ کی فضا کا معیار رپورٹ کرنے کے لیے استعمال ہوتا ہے۔ یہ آپ کو بتاتا ہے کہ آپ کی فضا کتنی صاف یا آلودہ ہے اور اس سے متعلق صحت کے اثرات کیا ہو سکتے ہیں۔"},whatIsPM25:{question:"PM2.5 کیا ہے؟",answer:"PM2.5 وہ باریک ذرات ہیں جن کا قطر 2.5 مائیکرومیٹر یا اس سے کم ہوتا ہے۔ یہ ذرات اتنے چھوٹے ہوتے ہیں کہ وہ پھیپھڑوں میں گہرائی تک جا سکتے ہیں اور سنگین صحت کے مسائل پیدا کر سکتے ہیں۔"}},about:{title:"ہمارے بارے میں",description:"AirQuality.Tools صارفین کو مستند، بروقت اور صارف دوست عالمی فضا کا معیار ڈیٹا سروسز فراہم کرنے کے لیے پرعزم ہے۔",team:"ہماری ٹیم میں ماہرین ماحولیات، ڈیٹا انجینئرنگ اور فرنٹ اینڈ ڈویلپمنٹ کے ماہرین شامل ہیں، جو صحت مند زندگی کے تحفظ کے لیے ٹیکنالوجی کے استعمال کے لیے وقف ہیں۔"},contact:{title:"رابطہ کریں",intro:"تعاون، تجاویز یا ڈیٹا کے مسائل کے لیے، براہ کرم مندرجہ ذیل طریقوں سے ہم سے رابطہ کریں:",email:"ای میل",wechat:"WeChat",feedback:"رائے فارم (جلد آ رہا ہے)"}},Wt={common:{search:"Αναζήτηση",loading:"Φόρτωση...",error:"Σφάλμα",retry:"Επανάληψη"},nav:{home:"Αρχική",airQuality:"Ποιότητα αέρα",faq:"Συχνές ερωτήσεις",about:"Σχετικά με εμάς",contact:"Επικοινωνία"},home:{title:"Δείκτης ποιότητας αέρα",subtitle:"Πληροφορίες ποιότητας αέρα σε πραγματικό χρόνο για πόλεις παγκοσμίως",searchPlaceholder:"Εισάγετε όνομα πόλης...",popularCities:"Δημοφιλείς πόλεις",dataDisclaimer:"Τα δεδομένα είναι μόνο για αναφορά | Η πραγματική χρήση απαιτεί πραγματικό API ποιότητας αέρα.",cities:{beijing:"Πεκίνο",shanghai:"Σαγκάη",guangzhou:"Γκουανγκζού",shenzhen:"Σενζέν",chengdu:"Τσενγκντού",chongqing:"Τσονγκτσίνγκ",hangzhou:"Χανγκζού",xian:"Σιάν",newyork:"Νέα Υόρκη",losangeles:"Λος Άντζελες",chicago:"Σικάγο",houston:"Χιούστον",phoenix:"Φοίνιξ",philadelphia:"Φιλαδέλφεια",sanantonio:"Σαν Αντόνιο",sandiego:"Σαν Ντιέγκο",london:"Λονδίνο",manchester:"Μάντσεστερ",birmingham:"Μπέρμιγχαμ",liverpool:"Λίβερπουλ",leeds:"Λιντς",glasgow:"Γλασκώβη",sheffield:"Σέφιλντ",bristol:"Μπρίστολ",paris:"Παρίσι",marseille:"Μασσαλία",lyon:"Λυών",toulouse:"Τουλούζη",nice:"Νίκαια",nantes:"Νάντη",strasbourg:"Στρασβούργο",montpellier:"Μονπελιέ",cairo:"Κάιρο",alexandria:"Αλεξάνδρεια",giza:"Γκίζα",shubra:"Σούμπρα",portsaid:"Πορτ Σάιντ",suez:"Σουέζ",luxor:"Λούξορ",asyut:"Ασιούτ",riyadh:"Ριάντ",jeddah:"Τζέντα",mecca:"Μέκκα",medina:"Μεδίνα",dammam:"Νταμάμ",khobar:"Κομπάρ",tabuk:"Ταμπούκ",abha:"Άμπχα",delhi:"Δελχί",mumbai:"Μουμπάι",bangalore:"Μπανγκαλόρ",kolkata:"Καλκούτα",chennai:"Τσεννάι",hyderabad:"Χαϊντεραμπάντ",pune:"Πούνε",ahmedabad:"Αχμενταμπάντ",phnompenh:"Πνομ Πενχ",siemreap:"Σιέμ Ριπ",battambang:"Μπαταμπάνγκ",sihanoukville:"Σιχανουκβίλ",kampongcham:"Καμπόνγκ Τσαμ",kampot:"Καμπότ",takhmau:"Τακμάου",poipet:"Ποιπέτ",karachi:"Καράτσι",lahore:"Λαχόρη",faisalabad:"Φαϊσαλαμπάντ",rawalpindi:"Ραβαλπίντι",multan:"Μουλτάν",hyderabadpk:"Χαϊντεραμπάντ (Πακιστάν)",gujranwala:"Γκουτζρανουάλα",peshawar:"Πεσαβάρ",athens:"Αθήνα",thessaloniki:"Θεσσαλονίκη",patras:"Πάτρα",heraklion:"Ηράκλειο",larissa:"Λάρισα",volos:"Βόλος",ioannina:"Ιωάννινα",chania:"Χανιά",istanbul:"Κωνσταντινούπολη",ankara:"Άγκυρα",izmir:"Σμύρνη",bursa:"Προύσα",adana:"Άδανα",gaziantep:"Γκαζιαντέπ",konya:"Κόνια",antalya:"Αττάλεια",kathmandu:"Κατμαντού",pokhara:"Ποκάρα",lalitpur:"Λαλιτπούρ",bharatpur:"Μπαρατπούρ",biratnagar:"Μπιρατναγκάρ",birgunj:"Μπιργκούντζ",dharan:"Ντάραν",bhaktapur:"Μπακταπούρ",sarajevo:"Σαράγεβο",banjaluka:"Μπάνια Λούκα",tuzla:"Τούζλα",zenica:"Ζένιτσα",mostar:"Μόσταρ",bijeljina:"Μπιέλινα",prijedor:"Πριέντορ",brcko:"Μπρτσκο",belgrade:"Βελιγράδι",novisad:"Νόβι Σαντ",nis:"Νις",kragujevac:"Κραγκούγεβατς",subotica:"Σουμπότιτσα",zrenjanin:"Ζρένιανιν",pancevo:"Πάντσεβο",cacak:"Τσάτσακ",zagreb:"Ζάγκρεμπ",split:"Σπλιτ",rijeka:"Ριέκα",osijek:"Όσιγιεκ",zadar:"Ζαντάρ",slavonskibrod:"Σλαβόνσκι Μπροντ",pula:"Πούλα",karlovac:"Κάρλοβατς",dublin:"Δουβλίνο",cork:"Κορκ",limerick:"Λίμερικ",galway:"Γκάλγουεϊ",waterford:"Γουότερφορντ",drogheda:"Ντρογκέντα",dundalk:"Νταντάλκ",swords:"Σγουόρντς",tokyo:"Τόκιο",osaka:"Οσάκα",yokohama:"Γιοκοχάμα",nagoya:"Ναγκόγια",sapporo:"Σαπόρο",fukuoka:"Φουκουόκα",kobe:"Κόμπε",kyoto:"Κιότο",berlin:"Βερολίνο",hamburg:"Αμβούργο",munich:"Μόναχο",cologne:"Κολωνία",frankfurt:"Φρανκφούρτη",stuttgart:"Στουτγκάρδη",dusseldorf:"Ντίσελντορφ",dortmund:"Ντόρτμουντ",madrid:"Μαδρίτη",barcelona:"Βαρκελώνη",valencia:"Βαλένθια",seville:"Σεβίλλη",zaragoza:"Σαραγόσα",malaga:"Μάλαγα",murcia:"Μούρθια",palma:"Πάλμα"}},airQuality:{aqi:"Δείκτης ποιότητας αέρα",pm25:"PM2.5",pm10:"PM10",o3:"Όζον",no2:"Διοξείδιο του αζώτου",so2:"Διοξείδιο του θείου",co:"Μονοξείδιο του άνθρακα"},aqiLevels:{good:"Καλό",moderate:"Μέτριο",unhealthyForSensitive:"Ανθυγιεινό για ευαίσθητες ομάδες",unhealthy:"Ανθυγιεινό",veryUnhealthy:"Πολύ ανθυγιεινό",hazardous:"Επικίνδυνο"},faq:{title:"Συχνές ερωτήσεις",whatIsAQI:{question:"Τι είναι το AQI;",answer:"Ο Δείκτης Ποιότητας Αέρα (AQI) είναι ένα τυποποιημένο μέτρο που χρησιμοποιείται για την αναφορά της καθημερινής ποιότητας του αέρα. Σας ενημερώνει πόσο καθαρός ή μολυσμένος είναι ο αέρας σας και ποια είναι τα σχετικά προβλήματα υγείας που μπορεί να σας απασχολούν."},whatIsPM25:{question:"Τι είναι το PM2.5;",answer:"Το PM2.5 αναφέρεται σε λεπτά σωματίδια με διάμετρο 2,5 μικρόμετρα ή λιγότερο. Αυτά τα σωματίδια είναι αρκετά μικρά ώστε να διεισδύουν βαθιά στους πνεύμονες και μπορούν να προκαλέσουν σοβαρά προβλήματα υγείας."}},about:{title:"Σχετικά με εμάς",description:"Το AirQuality.Tools δεσμεύεται να παρέχει στους χρήστες αξιόπιστες, έγκαιρες και φιλικές προς το χρήστη παγκόσμιες υπηρεσίες δεδομένων ποιότητας αέρα.",team:"Η ομάδα μας αποτελείται από ειδικούς στην περιβαλλοντική επιστήμη, τη μηχανική δεδομένων και την ανάπτυξη frontend, αφιερωμένους στη χρήση της τεχνολογίας για την προστασία της υγιεινής ζωής."},contact:{title:"Επικοινωνία",intro:"Για συνεργασία, προτάσεις ή προβλήματα δεδομένων, παρακαλούμε επικοινωνήστε μαζί μας με τους παρακάτω τρόπους:",email:"Email",wechat:"WeChat",feedback:"Φόρμα ανατροφοδότησης (σύντομα διαθέσιμη)"}},Gt={common:{search:"Ara",loading:"Yükleniyor...",error:"Hata",retry:"Yeniden Dene"},nav:{home:"Ana Sayfa",airQuality:"Hava Kalitesi",faq:"SSS",about:"Hakkımızda",contact:"İletişim"},home:{title:"Hava Kalitesi Endeksi",subtitle:"Dünya genelindeki şehirler için gerçek zamanlı hava kalitesi bilgisi",searchPlaceholder:"Şehir adını girin...",popularCities:"Popüler Şehirler",dataDisclaimer:"Veriler yalnızca referans içindir | Gerçek kullanım için gerçek bir hava kalitesi API'si gereklidir.",cities:{beijing:"Pekin",shanghai:"Şanghay",guangzhou:"Guangzhou",shenzhen:"Shenzhen",chengdu:"Çengdu",chongqing:"Çongçing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"New York",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphia",sanantonio:"San Antonio",sandiego:"San Diego",london:"Londra",manchester:"Manchester",birmingham:"Birmingham",liverpool:"Liverpool",leeds:"Leeds",glasgow:"Glasgow",sheffield:"Sheffield",bristol:"Bristol",paris:"Paris",marseille:"Marsilya",lyon:"Lyon",toulouse:"Toulouse",nice:"Nice",nantes:"Nantes",strasbourg:"Strazburg",montpellier:"Montpellier",cairo:"Kahire",alexandria:"İskenderiye",giza:"Gize",shubra:"Şubra",portsaid:"Port Said",suez:"Süveyş",luxor:"Luksor",asyut:"Asyut",riyadh:"Riyad",jeddah:"Cidde",mecca:"Mekke",medina:"Medine",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Mumbai",bangalore:"Bangalore",kolkata:"Kalküta",chennai:"Chennai",hyderabad:"Haydarabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karaçi",lahore:"Lahor",faisalabad:"Faysalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Haydarabad (Pakistan)",gujranwala:"Gucranvala",peshawar:"Peşaver",athens:"Atina",thessaloniki:"Selanik",patras:"Patras",heraklion:"Heraklion",larissa:"Larissa",volos:"Volos",ioannina:"Ioannina",chania:"Hanya",istanbul:"İstanbul",ankara:"Ankara",izmir:"İzmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalya",kathmandu:"Katmandu",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Saraybosna",banjaluka:"Banya Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brçko",belgrade:"Belgrad",novisad:"Novi Sad",nis:"Niş",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Çaçak",zagreb:"Zagreb",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Dublin",cork:"Cork",limerick:"Limerick",galway:"Galway",waterford:"Waterford",drogheda:"Drogheda",dundalk:"Dundalk",swords:"Swords",tokyo:"Tokyo",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hamburg",munich:"Münih",cologne:"Köln",frankfurt:"Frankfurt",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barselona",valencia:"Valensiya",seville:"Sevilla",zaragoza:"Zaragoza",malaga:"Malaga",murcia:"Murcia",palma:"Palma"}},airQuality:{aqi:"Hava Kalitesi Endeksi",pm25:"PM2.5",pm10:"PM10",o3:"Ozon",no2:"Azot Dioksit",so2:"Kükürt Dioksit",co:"Karbonmonoksit"},aqiLevels:{good:"İyi",moderate:"Orta",unhealthyForSensitive:"Hassas Gruplar İçin Sağlıksız",unhealthy:"Sağlıksız",veryUnhealthy:"Çok Sağlıksız",hazardous:"Tehlikeli"},faq:{title:"SSS",whatIsAQI:{question:"AQI nedir?",answer:"Hava Kalitesi Endeksi (AQI), günlük hava kalitesini raporlamak için kullanılan standartlaştırılmış bir ölçüdür. Havanızın ne kadar temiz veya kirli olduğunu ve ilgili sağlık etkilerinin neler olabileceğini size bildirir."},whatIsPM25:{question:"PM2.5 nedir?",answer:"PM2.5, çapı 2,5 mikrometre veya daha küçük olan ince partikülleri ifade eder. Bu partiküller, akciğerlere derinlemesine nüfuz edebilecek kadar küçüktür ve ciddi sağlık sorunlarına neden olabilir."}},about:{title:"Hakkımızda",description:"AirQuality.Tools, kullanıcılara otoriter, zamanında ve kullanıcı dostu küresel hava kalitesi veri hizmetleri sunmaya kendini adamıştır.",team:"Ekibimiz, çevre bilimi, veri mühendisliği ve frontend geliştirme alanlarında uzmanlardan oluşmaktadır ve sağlıklı yaşamı korumak için teknoloji kullanmaya adanmıştır."},contact:{title:"İletişim",intro:"İşbirliği, öneriler veya veri sorunları için lütfen aşağıdaki yöntemlerle bizimle iletişime geçin:",email:"E-posta",wechat:"WeChat",feedback:"Geri bildirim formu (yakında)"}},_t={common:{search:"खोज्नुहोस्",loading:"लोड हुँदैछ...",error:"त्रुटि",retry:"फेरि प्रयास गर्नुहोस्"},nav:{home:"गृहपृष्ठ",airQuality:"हावा गुणस्तर",faq:"प्रायः सोधिने प्रश्नहरू",about:"हाम्रो बारेमा",contact:"सम्पर्क गर्नुहोस्"},home:{title:"हावा गुणस्तर सूचकांक",subtitle:"विश्वभरका शहरहरूको लागि वास्तविक समयको हावा गुणस्तर जानकारी",searchPlaceholder:"शहरको नाम प्रविष्ट गर्नुहोस्...",popularCities:"लोकप्रिय शहरहरू",dataDisclaimer:"सन्दर्भको लागि मात्र डेटा | वास्तविक प्रयोगको लागि वास्तविक हावा गुणस्तर API आवश्यक छ।",cities:{beijing:"बेइजिङ",shanghai:"शाङ्घाई",guangzhou:"ग्वाङ्झाउ",shenzhen:"शेन्जेन",chengdu:"चेङ्दु",chongqing:"चोङ्किङ",hangzhou:"हाङ्झाउ",xian:"सियान",newyork:"न्यूयोर्क",losangeles:"लस एन्जलस",chicago:"शिकागो",houston:"ह्युस्टन",phoenix:"फिनिक्स",philadelphia:"फिलाडेल्फिया",sanantonio:"सान एन्टोनियो",sandiego:"सान डिएगो",london:"लन्डन",manchester:"म्यानचेस्टर",birmingham:"बर्मिंघम",liverpool:"लिभरपुल",leeds:"लिड्स",glasgow:"ग्लासगो",sheffield:"शेफिल्ड",bristol:"ब्रिस्टल",paris:"पेरिस",marseille:"मार्सेइ",lyon:"लियोन",toulouse:"टुलुज",nice:"नाइस",nantes:"नान्तेस",strasbourg:"स्ट्रासबर्ग",montpellier:"मोन्टपेलियर",cairo:"कायरो",alexandria:"अलेक्जान्ड्रिया",giza:"गिजा",shubra:"शुब्रा",portsaid:"पोर्ट सईद",suez:"स्वेज",luxor:"लक्सर",asyut:"अस्युत",riyadh:"रियाद",jeddah:"जेद्दा",mecca:"मेक्का",medina:"मदीना",dammam:"दमाम",khobar:"खोबार",tabuk:"ताबुक",abha:"अब्हा",delhi:"दिल्ली",mumbai:"मुम्बई",bangalore:"बैंगलोर",kolkata:"कोलकाता",chennai:"चेन्नई",hyderabad:"हैदराबाद",pune:"पुणे",ahmedabad:"अहमदाबाद",phnompenh:"फ्नोम पेन्ह",siemreap:"सिएम रेप",battambang:"बट्टाम्बाङ",sihanoukville:"सिहानुकभिल",kampongcham:"कम्पोङ चाम",kampot:"कम्पोट",takhmau:"ता ख्माउ",poipet:"पोइपेट",karachi:"कराची",lahore:"लाहोर",faisalabad:"फैसलाबाद",rawalpindi:"रावलपिन्डी",multan:"मुल्तान",hyderabadpk:"हैदराबाद (पाकिस्तान)",gujranwala:"गुजरनवाला",peshawar:"पेशावर",athens:"एथेन्स",thessaloniki:"थेस्सालोनिकी",patras:"पात्रास",heraklion:"हेराक्लियन",larissa:"लारिसा",volos:"भोलोस",ioannina:"इओआनिना",chania:"चानिया",istanbul:"इस्तानबुल",ankara:"अंकारा",izmir:"इज्मिर",bursa:"बुर्सा",adana:"अदाना",gaziantep:"गाजियान्टेप",konya:"कोन्या",antalya:"अन्ताल्या",kathmandu:"काठमाडौं",pokhara:"पोखरा",lalitpur:"ललितपुर",bharatpur:"भरतपुर",biratnagar:"बिराटनगर",birgunj:"बिरगंज",dharan:"धरान",bhaktapur:"भक्तपुर",sarajevo:"साराजेभो",banjaluka:"बान्या लुका",tuzla:"तूजला",zenica:"जेनीका",mostar:"मॉस्टार",bijeljina:"बिजेल्जिना",prijedor:"प्रिजेडोर",brcko:"ब्र्च्को",belgrade:"बेलग्रेड",novisad:"नोवी साड",nis:"निस",kragujevac:"क्रगुजेवाक",subotica:"सुबोटिका",zrenjanin:"ज्रेनजानिन",pancevo:"पान्चेभो",cacak:"चाचक",zagreb:"जाग्रेब",split:"स्प्लिट",rijeka:"रिजेका",osijek:"ओसिजेक",zadar:"जादर",slavonskibrod:"स्लावोन्स्की ब्रोद",pula:"पुला",karlovac:"कार्लोवाक",dublin:"डब्लिन",cork:"कर्क",limerick:"लिमरिक",galway:"गालवे",waterford:"वाटरफोर्ड",drogheda:"ड्रोगेडा",dundalk:"डन्डाल्क",swords:"स्वोर्ड्स",tokyo:"टोकियो",osaka:"ओसाका",yokohama:"योकोहामा",nagoya:"नागोया",sapporo:"साप्पोरो",fukuoka:"फुकुओका",kobe:"कोबे",kyoto:"क्योटो",berlin:"बर्लिन",hamburg:"ह्याम्बर्ग",munich:"म्युनिख",cologne:"कोलोन",frankfurt:"फ्र्याङ्कफर्ट",stuttgart:"स्टुटगार्ट",dusseldorf:"डुसेलडोर्फ",dortmund:"डर्टमन्ड",madrid:"म्याड्रिड",barcelona:"बार्सिलोना",valencia:"भ्यालेन्सिया",seville:"सेभिल",zaragoza:"जारागोजा",malaga:"मालागा",murcia:"मर्सिया",palma:"पाल्मा"}},airQuality:{aqi:"हावा गुणस्तर सूचकांक",pm25:"PM2.5",pm10:"PM10",o3:"ओजोन",no2:"नाइट्रोजन डाइअक्साइड",so2:"सल्फर डाइअक्साइड",co:"कार्बन मोनोअक्साइड"},aqiLevels:{good:"राम्रो",moderate:"मध्यम",unhealthyForSensitive:"संवेदनशील समूहका लागि अस्वस्थ",unhealthy:"अस्वस्थ",veryUnhealthy:"धेरै अस्वस्थ",hazardous:"खतरनाक"},faq:{title:"प्रायः सोधिने प्रश्नहरू",whatIsAQI:{question:"AQI के हो?",answer:"हावा गुणस्तर सूचकांक (AQI) दैनिक हावा गुणस्तर रिपोर्ट गर्न प्रयोग गरिने एक मानकीकृत मापन हो। यसले तपाईंलाई तपाईंको हावा कति सफा वा प्रदूषित छ र यससँग सम्बन्धित स्वास्थ्य प्रभावहरू के हुन सक्छन् भन्ने जानकारी दिन्छ।"},whatIsPM25:{question:"PM2.5 के हो?",answer:"PM2.5 ती साना कणहरू हुन् जसको व्यास २.५ माइक्रोमिटर वा कम हुन्छ। यी कणहरू यति साना हुन्छन् कि फोक्सोमा गहिरो प्रवेश गर्न सक्छन् र गम्भीर स्वास्थ्य समस्याहरू निम्त्याउन सक्छन्।"}},about:{title:"हाम्रो बारेमा",description:"AirQuality.Tools प्रयोगकर्ताहरूलाई अधिकारिक, समयमा र प्रयोगकर्ता मैत्री विश्वव्यापी हावा गुणस्तर डेटा सेवा प्रदान गर्न प्रतिबद्ध छ।",team:"हाम्रो टोलीमा वातावरण विज्ञान, डेटा इन्जिनियरिङ र फ्रन्टएन्ड विकासका विशेषज्ञहरू छन्, जो प्रविधिको प्रयोग गरेर स्वस्थ जीवनको रक्षा गर्न समर्पित छन्।"},contact:{title:"सम्पर्क गर्नुहोस्",intro:"सहयोग, सुझाव वा डेटा समस्याहरूको लागि, कृपया तलका तरिकाहरूबाट हामीलाई सम्पर्क गर्नुहोस्:",email:"इमेल",wechat:"WeChat",feedback:"प्रतिक्रिया फारम (छिट्टै आउँदैछ)"}},Yt={common:{search:"Pretraga",loading:"Učitavanje...",error:"Greška",retry:"Pokušaj ponovo"},nav:{home:"Početna",airQuality:"Kvalitet zraka",faq:"Česta pitanja",about:"O nama",contact:"Kontakt"},home:{title:"Indeks kvaliteta zraka",subtitle:"Informacije o kvalitetu zraka u stvarnom vremenu za gradove širom svijeta",searchPlaceholder:"Unesite ime grada...",popularCities:"Popularni gradovi",dataDisclaimer:"Podaci su samo za referencu | Za stvarnu upotrebu potrebna je prava API za kvalitet zraka.",cities:{beijing:"Peking",shanghai:"Šangaj",guangzhou:"Guangzhou",shenzhen:"Shenzhen",chengdu:"Čengdu",chongqing:"Čongćing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"New York",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphia",sanantonio:"San Antonio",sandiego:"San Diego",london:"London",manchester:"Manchester",birmingham:"Birmingham",liverpool:"Liverpool",leeds:"Leeds",glasgow:"Glasgow",sheffield:"Sheffield",bristol:"Bristol",paris:"Pariz",marseille:"Marsej",lyon:"Lion",toulouse:"Toulouse",nice:"Nica",nantes:"Nantes",strasbourg:"Strazbur",montpellier:"Montpellier",cairo:"Kairo",alexandria:"Aleksandrija",giza:"Giza",shubra:"Šubra",portsaid:"Port Said",suez:"Suec",luxor:"Luksor",asyut:"Asjut",riyadh:"Rijad",jeddah:"Džeda",mecca:"Meka",medina:"Medina",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Mumbai",bangalore:"Bangalore",kolkata:"Kolkata",chennai:"Chennai",hyderabad:"Hyderabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karachi",lahore:"Lahore",faisalabad:"Faisalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Hyderabad (Pakistan)",gujranwala:"Gujranwala",peshawar:"Peshawar",athens:"Atina",thessaloniki:"Solun",patras:"Patras",heraklion:"Heraklion",larissa:"Larisa",volos:"Volos",ioannina:"Ioannina",chania:"Hanija",istanbul:"Istanbul",ankara:"Ankara",izmir:"Izmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalija",kathmandu:"Katmandu",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Sarajevo",banjaluka:"Banja Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brčko",belgrade:"Beograd",novisad:"Novi Sad",nis:"Niš",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Čačak",zagreb:"Zagreb",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Dublin",cork:"Cork",limerick:"Limerick",galway:"Galway",waterford:"Waterford",drogheda:"Drogheda",dundalk:"Dundalk",swords:"Swords",tokyo:"Tokio",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoja",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hamburg",munich:"Minhen",cologne:"Keln",frankfurt:"Frankfurt",stuttgart:"Štutgart",dusseldorf:"Dizeldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barselona",valencia:"Valensija",seville:"Sevilja",zaragoza:"Saragosa",malaga:"Malaga",murcia:"Mursija",palma:"Palma"}},airQuality:{aqi:"Indeks kvaliteta zraka",pm25:"PM2.5",pm10:"PM10",o3:"Ozon",no2:"Dijazot dioksid",so2:"Sumpor dioksid",co:"Ugljen-monoksid"},aqiLevels:{good:"Dobar",moderate:"Umjeren",unhealthyForSensitive:"Nezdrav za osjetljive grupe",unhealthy:"Nezdrav",veryUnhealthy:"Vrlo nezdrav",hazardous:"Opasan"},faq:{title:"Česta pitanja",whatIsAQI:{question:"Šta je AQI?",answer:"Indeks kvaliteta zraka (AQI) je standardizirana mjera koja se koristi za izvještavanje o dnevnom kvalitetu zraka. Govori vam koliko je vaš zrak čist ili zagađen i koji su mogući zdravstveni efekti povezani s tim."},whatIsPM25:{question:"Šta je PM2.5?",answer:"PM2.5 se odnosi na fine čestice promjera 2,5 mikrometara ili manje. Ove čestice su dovoljno male da prodru duboko u pluća i mogu uzrokovati ozbiljne zdravstvene probleme."}},about:{title:"O nama",description:"AirQuality.Tools je posvećen pružanju korisnicima autoritativnih, pravovremenih i jednostavnih globalnih usluga podataka o kvalitetu zraka.",team:"Naš tim se sastoji od stručnjaka za nauku o okolišu, inženjering podataka i frontend razvoj, posvećenih zaštiti zdravog života korištenjem tehnologije."},contact:{title:"Kontakt",intro:"Za saradnju, prijedloge ili probleme s podacima, kontaktirajte nas putem sljedećih metoda:",email:"Email",wechat:"WeChat",feedback:"Obrazac za povratne informacije (uskoro)"}},Zt={common:{search:"Претрага",loading:"Учитавање...",error:"Грешка",retry:"Покушај поново"},nav:{home:"Почетна",airQuality:"Квалитет ваздуха",faq:"Честа питања",about:"О нама",contact:"Контакт"},home:{title:"Индекс квалитета ваздуха",subtitle:"Информације о квалитету ваздуха у реалном времену за градове широм света",searchPlaceholder:"Унесите име града...",popularCities:"Популарni градови",dataDisclaimer:"Подаци су само за референцу | За стварну употребу потребан је прави API за квалитет ваздуха.",cities:{beijing:"Пекинг",shanghai:"Шангај",guangzhou:"Гуангџоу",shenzhen:"Шенжен",chengdu:"Ченгду",chongqing:"Чунгкинг",hangzhou:"Хангџоу",xian:"Сиан",newyork:"Њујорк",losangeles:"Лос Анђелес",chicago:"Чикаго",houston:"Хјустон",phoenix:"Финикс",philadelphia:"Филаделфија",sanantonio:"Сан Антонио",sandiego:"Сан Дијего",london:"Лондон",manchester:"Манчестер",birmingham:"Бирмингем",liverpool:"Ливерпул",leeds:"Лидс",glasgow:"Глазгов",sheffield:"Шефилд",bristol:"Бристол",paris:"Париз",marseille:"Марсеј",lyon:"Лион",toulouse:"Тулуз",nice:"Ница",nantes:"Нант",strasbourg:"Стразбур",montpellier:"Монпеље",cairo:"Каиро",alexandria:"Александрија",giza:"Гиза",shubra:"Шубра",portsaid:"Порт Саид",suez:"Суец",luxor:"Луксор",asyut:"Асиут",riyadh:"Ријад",jeddah:"Џеда",mecca:"Мека",medina:"Медина",dammam:"Дамам",khobar:"Кхобар",tabuk:"Табук",abha:"Абха",delhi:"Делхи",mumbai:"Мумбај",bangalore:"Бангалор",kolkata:"Колката",chennai:"Ченај",hyderabad:"Хајдерабад",pune:"Пуне",ahmedabad:"Ахмедабад",phnompenh:"Пном Пен",siemreap:"Сием Реап",battambang:"Баттамбанг",sihanoukville:"Сихануквил",kampongcham:"Кампанг Чам",kampot:"Кампот",takhmau:"Та Кмау",poipet:"Поипет",karachi:"Карачи",lahore:"Лахор",faisalabad:"Фајсалабад",rawalpindi:"Равалпинди",multan:"Мултан",hyderabadpk:"Хајдерабад (Пакистан)",gujranwala:"Гуџранвала",peshawar:"Пешавар",athens:"Атина",thessaloniki:"Солун",patras:"Патрас",heraklion:"Ираклион",larissa:"Лариса",volos:"Волос",ioannina:"Јанина",chania:"Хања",istanbul:"Истанбул",ankara:"Анкара",izmir:"Измир",bursa:"Бурса",adana:"Адана",gaziantep:"Газиантеп",konya:"Коња",antalya:"Анталија",kathmandu:"Катманду",pokhara:"Покхара",lalitpur:"Лалитпур",bharatpur:"Бхаратпур",biratnagar:"Биратнагар",birgunj:"Биргундј",dharan:"Даран",bhaktapur:"Бхактапур",sarajevo:"Сарајево",banjaluka:"Бања Лука",tuzla:"Тузла",zenica:"Зеница",mostar:"Мостар",bijeljina:"Бијељина",prijedor:"Приједор",brcko:"Брчко",belgrade:"Београд",novisad:"Нови Сад",nis:"Ниш",kragujevac:"Крагујевац",subotica:"Суботица",zrenjanin:"Зрењанин",pancevo:"Панчево",cacak:"Чачак",zagreb:"Загреб",split:"Сплит",rijeka:"Ријека",osijek:"Осијек",zadar:"Задар",slavonskibrod:"Славонски Брод",pula:"Пула",karlovac:"Карловац",dublin:"Даблин",cork:"Корк",limerick:"Лимерик",galway:"Галвеј",waterford:"Вотерфорд",drogheda:"Дрогеда",dundalk:"Дандаљк",swords:"Свордс",tokyo:"Токио",osaka:"Осака",yokohama:"Јокохама",nagoya:"Нагоја",sapporo:"Сапоро",fukuoka:"Фукуока",kobe:"Кобе",kyoto:"Кјото",berlin:"Берлин",hamburg:"Хамбург",munich:"Минхен",cologne:"Келн",frankfurt:"Франкфурт",stuttgart:"Штутгарт",dusseldorf:"Дизелдорф",dortmund:"Дортмунд",madrid:"Мадрид",barcelona:"Барселона",valencia:"Валенсија",seville:"Севиља",zaragoza:"Сарагоса",malaga:"Малага",murcia:"Мурсија",palma:"Палма"}},airQuality:{aqi:"Индекс квалитета ваздуха",pm25:"PM2.5",pm10:"PM10",o3:"Озон",no2:"Азот-диоксид",so2:"Сумпор-диоксид",co:"Угљен-моноксид"},aqiLevels:{good:"Добар",moderate:"Умерен",unhealthyForSensitive:"Нездраво за осетљиве групе",unhealthy:"Нездраво",veryUnhealthy:"Врло нездраво",hazardous:"Опасно"},faq:{title:"Честа питања",whatIsAQI:{question:"Шта је AQI?",answer:"Индекс квалитета ваздуха (AQI) је стандардизована мера која се користи за извештавање о дневном квалитету ваздуха. Показује вам колико је ваш ваздух чист или загађен и који су могући здравствени ефекти повезани са тим."},whatIsPM25:{question:"Шта је PM2.5?",answer:"PM2.5 се односи на фине честице пречника 2,5 микрометара или мање. Ове честице су довољно мале да продру дубоко у плућа и могу изазвати озбиљне здравствене проблеме."}},about:{title:"О нама",description:"AirQuality.Tools је посвећен пружању корисницима ауторитативних, благовремених и једноставних глобалних услуга података о квалитету ваздуха.",team:"Наш тим се састоји од стручњака за науку о животној средини, инжењеринг података и frontend развој, посвећених заштити здравог живота коришћењем технологије."},contact:{title:"Контакт",intro:"За сарадњу, предлоге или проблеме са подацима, контактирајте нас путем следећих метода:",email:"Е-пошта",wechat:"WeChat",feedback:"Форма за повратне информације (ускоро)"}},Jt={common:{search:"Pretraži",loading:"Učitavanje...",error:"Greška",retry:"Pokušaj ponovno"},nav:{home:"Početna",airQuality:"Kvaliteta zraka",faq:"Česta pitanja",about:"O nama",contact:"Kontakt"},home:{title:"Indeks kvalitete zraka",subtitle:"Informacije o kvaliteti zraka u stvarnom vremenu za gradove širom svijeta",searchPlaceholder:"Unesite ime grada...",popularCities:"Popularni gradovi",dataDisclaimer:"Podaci su samo za referencu | Za stvarnu upotrebu potreban je pravi API za kvalitetu zraka.",cities:{beijing:"Peking",shanghai:"Šangaj",guangzhou:"Guangzhou",shenzhen:"Shenzhen",chengdu:"Chengdu",chongqing:"Chongqing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"New York",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphia",sanantonio:"San Antonio",sandiego:"San Diego",london:"London",manchester:"Manchester",birmingham:"Birmingham",liverpool:"Liverpool",leeds:"Leeds",glasgow:"Glasgow",sheffield:"Sheffield",bristol:"Bristol",paris:"Pariz",marseille:"Marseille",lyon:"Lyon",toulouse:"Toulouse",nice:"Nica",nantes:"Nantes",strasbourg:"Strasbourg",montpellier:"Montpellier",cairo:"Kairo",alexandria:"Aleksandrija",giza:"Giza",shubra:"Shubra",portsaid:"Port Said",suez:"Sues",luxor:"Luksor",asyut:"Asyut",riyadh:"Rijad",jeddah:"Džeda",mecca:"Meka",medina:"Medina",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Mumbai",bangalore:"Bangalore",kolkata:"Kolkata",chennai:"Chennai",hyderabad:"Hyderabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karachi",lahore:"Lahore",faisalabad:"Faisalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Hyderabad (Pakistan)",gujranwala:"Gujranwala",peshawar:"Peshawar",athens:"Atena",thessaloniki:"Solun",patras:"Patras",heraklion:"Heraklion",larissa:"Larisa",volos:"Volos",ioannina:"Ioannina",chania:"Hania",istanbul:"Istanbul",ankara:"Ankara",izmir:"Izmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalya",kathmandu:"Katmandu",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Sarajevo",banjaluka:"Banja Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brčko",belgrade:"Beograd",novisad:"Novi Sad",nis:"Niš",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Čačak",zagreb:"Zagreb",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Dublin",cork:"Cork",limerick:"Limerick",galway:"Galway",waterford:"Waterford",drogheda:"Drogheda",dundalk:"Dundalk",swords:"Swords",tokyo:"Tokio",osaka:"Osaka",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kobe",kyoto:"Kyoto",berlin:"Berlin",hamburg:"Hamburg",munich:"München",cologne:"Köln",frankfurt:"Frankfurt",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Madrid",barcelona:"Barcelona",valencia:"Valencia",seville:"Sevilja",zaragoza:"Zaragoza",malaga:"Malaga",murcia:"Murcia",palma:"Palma"}},airQuality:{aqi:"Indeks kvalitete zraka",pm25:"PM2.5",pm10:"PM10",o3:"Ozon",no2:"Dušikov dioksid",so2:"Sumporov dioksid",co:"Ugljični monoksid"},aqiLevels:{good:"Dobar",moderate:"Umjeren",unhealthyForSensitive:"Nezdravo za osjetljive skupine",unhealthy:"Nezdravo",veryUnhealthy:"Vrlo nezdravo",hazardous:"Opasno"},faq:{title:"Česta pitanja",whatIsAQI:{question:"Što je AQI?",answer:"Indeks kvalitete zraka (AQI) je standardizirana mjera koja se koristi za izvještavanje o dnevnoj kvaliteti zraka. Govori vam koliko je vaš zrak čist ili zagađen i koji su mogući zdravstveni učinci povezani s tim."},whatIsPM25:{question:"Što je PM2.5?",answer:"PM2.5 odnosi se na fine čestice promjera 2,5 mikrometara ili manje. Te su čestice dovoljno male da prodiru duboko u pluća i mogu uzrokovati ozbiljne zdravstvene probleme."}},about:{title:"O nama",description:"AirQuality.Tools posvećen je pružanju korisnicima autoritativnih, pravovremenih i jednostavnih globalnih usluga podataka o kvaliteti zraka.",team:"Naš tim sastoji se od stručnjaka za znanost o okolišu, inženjering podataka i frontend razvoj, posvećenih zaštiti zdravog života korištenjem tehnologije."},contact:{title:"Kontakt",intro:"Za suradnju, prijedloge ili probleme s podacima, kontaktirajte nas putem sljedećih metoda:",email:"Email",wechat:"WeChat",feedback:"Obrazac za povratne informacije (uskoro)"}},Xt={common:{search:"Cuardaigh",loading:"Ag luchtú...",error:"Earráid",retry:"Athdhéan iarracht"},nav:{home:"Baile",airQuality:"Cáilíocht Aeir",faq:"CC",about:"Fúinn",contact:"Déan teagmháil"},home:{title:"Innéacs Cáilíochta Aeir",subtitle:"Eolas fíor-ama ar cháilíocht aeir do chathracha ar fud an domhain",searchPlaceholder:"Iontráil ainm na cathrach...",popularCities:"Cathracha Coitianta",dataDisclaimer:"Sonraí le haghaidh tagartha amháin | Teastaíonn API fíor-cháilíochta aeir le haghaidh úsáide fíor.",cities:{beijing:"Béising",shanghai:"Shanghai",guangzhou:"Guangzhou",shenzhen:"Shenzhen",chengdu:"Chengdu",chongqing:"Chongqing",hangzhou:"Hangzhou",xian:"Xi'an",newyork:"Nua-Eabhrac",losangeles:"Los Angeles",chicago:"Chicago",houston:"Houston",phoenix:"Phoenix",philadelphia:"Philadelphia",sanantonio:"San Antonio",sandiego:"San Diego",london:"Londain",manchester:"Manchain",birmingham:"Birmingham",liverpool:"Learpholl",leeds:"Leeds",glasgow:"Glaschú",sheffield:"Sheffield",bristol:"Bristiol",paris:"Páras",marseille:"Marseille",lyon:"Lyon",toulouse:"Toulouse",nice:"Nice",nantes:"Nantes",strasbourg:"Strasbourg",montpellier:"Montpellier",cairo:"Caireo",alexandria:"Alastar",giza:"Giza",shubra:"Shubra",portsaid:"Port Said",suez:"Suez",luxor:"Luxor",asyut:"Asyut",riyadh:"Riyadh",jeddah:"Jeddah",mecca:"Mecca",medina:"Medina",dammam:"Dammam",khobar:"Khobar",tabuk:"Tabuk",abha:"Abha",delhi:"Delhi",mumbai:"Mumbai",bangalore:"Bangalore",kolkata:"Kolkata",chennai:"Chennai",hyderabad:"Hyderabad",pune:"Pune",ahmedabad:"Ahmedabad",phnompenh:"Phnom Penh",siemreap:"Siem Reap",battambang:"Battambang",sihanoukville:"Sihanoukville",kampongcham:"Kampong Cham",kampot:"Kampot",takhmau:"Ta Khmau",poipet:"Poipet",karachi:"Karachi",lahore:"Lahore",faisalabad:"Faisalabad",rawalpindi:"Rawalpindi",multan:"Multan",hyderabadpk:"Hyderabad (Pakistan)",gujranwala:"Gujranwala",peshawar:"Peshawar",athens:"An Aithin",thessaloniki:"Teasalainicé",patras:"Patras",heraklion:"Heraklion",larissa:"Larissa",volos:"Volos",ioannina:"Ioannina",chania:"Chania",istanbul:"Iostanbúl",ankara:"Ankara",izmir:"Izmir",bursa:"Bursa",adana:"Adana",gaziantep:"Gaziantep",konya:"Konya",antalya:"Antalya",kathmandu:"Kathmandu",pokhara:"Pokhara",lalitpur:"Lalitpur",bharatpur:"Bharatpur",biratnagar:"Biratnagar",birgunj:"Birgunj",dharan:"Dharan",bhaktapur:"Bhaktapur",sarajevo:"Sarajevo",banjaluka:"Banja Luka",tuzla:"Tuzla",zenica:"Zenica",mostar:"Mostar",bijeljina:"Bijeljina",prijedor:"Prijedor",brcko:"Brčko",belgrade:"Beograd",novisad:"Novi Sad",nis:"Niš",kragujevac:"Kragujevac",subotica:"Subotica",zrenjanin:"Zrenjanin",pancevo:"Pančevo",cacak:"Čačak",zagreb:"Ságrab",split:"Split",rijeka:"Rijeka",osijek:"Osijek",zadar:"Zadar",slavonskibrod:"Slavonski Brod",pula:"Pula",karlovac:"Karlovac",dublin:"Baile Átha Cliath",cork:"Corcaigh",limerick:"Luimneach",galway:"Gaillimh",waterford:"Port Láirge",drogheda:"Droichead Átha",dundalk:"Dún Dealgan",swords:"Sord",tokyo:"Tóiceo",osaka:"Ósaca",yokohama:"Yokohama",nagoya:"Nagoya",sapporo:"Sapporo",fukuoka:"Fukuoka",kobe:"Kóbe",kyoto:"Kyóto",berlin:"Beirlín",hamburg:"Hamburg",munich:"München",cologne:"Köln",frankfurt:"Frankfurt",stuttgart:"Stuttgart",dusseldorf:"Düsseldorf",dortmund:"Dortmund",madrid:"Maidrid",barcelona:"Barcelona",valencia:"Valencia",seville:"Seville",zaragoza:"Saragósa",malaga:"Málaga",murcia:"Murcia",palma:"Palma"}},airQuality:{aqi:"Innéacs Cáilíochta Aeir",pm25:"PM2.5",pm10:"PM10",o3:"Ózón",no2:"Dé-ocsaíd nítrigine",so2:"Dé-ocsaíd sulfair",co:"Monacsaíd charbóin"},aqiLevels:{good:"Maith",moderate:"Measartha",unhealthyForSensitive:"Neamhshláintiúil do ghrúpaí íogaire",unhealthy:"Neamhshláintiúil",veryUnhealthy:"An-neamhshláintiúil",hazardous:"Contúirteach"},faq:{title:"CC",whatIsAQI:{question:"Cad é AQI?",answer:"Is tomhas caighdeánaithe é an tInnéacs Cáilíochta Aeir (AQI) a úsáidtear chun cáilíocht laethúil an aeir a thuairisciú. Insíonn sé duit cé chomh glan nó truaillithe is atá d'aer agus cad iad na héifeachtaí sláinte a d'fhéadfadh a bheith bainteach leis."},whatIsPM25:{question:"Cad é PM2.5?",answer:"Tagraíonn PM2.5 do cháithníní fíneáil a bhfuil trastomhas 2.5 micriméadar nó níos lú acu. Tá na cáithníní seo sách beag chun dul go domhain sna scamhóga agus d'fhéadfadh siad fadhbanna sláinte tromchúiseacha a chur faoi deara."}},about:{title:"Fúinn",description:"Tá AirQuality.Tools tiomanta do sheirbhísí sonraí cáilíochta aeir domhanda údarásacha, tráthúla agus atá éasca le húsáid a sholáthar d'úsáideoirí.",team:"Tá ár bhfoireann comhdhéanta d'eolaithe comhshaoil, innealtóirí sonraí agus forbróirí tosaigh, tiomanta do shaol sláintiúil a chosaint trí theicneolaíocht."},contact:{title:"Déan teagmháil",intro:"Le haghaidh comhoibrithe, moltaí nó saincheisteanna sonraí, déan teagmháil linn trí na modhanna seo a leanas:",email:"Ríomhphost",wechat:"WeChat",feedback:"Foirmeacha aiseolais (ag teacht go luath)"}},en={en:{name:"English",nativeName:"English"},"zh-CN":{name:"简体中文",nativeName:"简体中文"},"zh-TW":{name:"繁體中文",nativeName:"繁體中文"},ja:{name:"日本語",nativeName:"日本語"},ko:{name:"한국어",nativeName:"한국어"},es:{name:"Español",nativeName:"Español"},fr:{name:"Français",nativeName:"Français"},de:{name:"Deutsch",nativeName:"Deutsch"},ar:{name:"العربية",nativeName:"العربية"},hi:{name:"Hindi",nativeName:"हिन्दी"},km:{name:"Khmer",nativeName:"ភាសាខ្មែរ"},ur:{name:"Urdu",nativeName:"اردو"},el:{name:"Ελληνικά",nativeName:"Ελληνικά"},tr:{name:"Türkçe",nativeName:"Türkçe"},ne:{name:"नेपाली",nativeName:"नेपाली"},bs:{name:"Bosanski",nativeName:"Bosanski"},sr:{name:"Српски",nativeName:"Српски"},hr:{name:"Hrvatski",nativeName:"Hrvatski"},ga:{name:"Gaeilge",nativeName:"Gaeilge"}};gt.use(Et).use(ja).init({resources:{en:{translation:Ot},"zh-CN":{translation:Rt},"zh-TW":{translation:Tt},ja:{translation:Dt},ko:{translation:$t},es:{translation:Qt},fr:{translation:Ft},de:{translation:Bt},ar:{translation:Kt},hi:{translation:Ut},km:{translation:Ht},ur:{translation:Vt},el:{translation:Wt},tr:{translation:Gt},ne:{translation:_t},bs:{translation:Yt},sr:{translation:Zt},hr:{translation:Jt},ga:{translation:Xt}},fallbackLng:"en",interpolation:{escapeValue:!1},detection:{order:["navigator","htmlTag","path","subdomain"],caches:["localStorage"]}});const an=["ar","ur","he","fa"],tn=()=>{const{i18n:e}=Na();return i.useEffect((()=>{const a=e.language;document.documentElement.lang=a,document.documentElement.dir=an.includes(a)?"rtl":"ltr"}),[e.language]),x.jsx("div",{className:"language-switcher",children:x.jsx("select",{value:e.language,onChange:a=>{return t=a.target.value,e.changeLanguage(t),document.documentElement.lang=t,document.documentElement.dir=an.includes(t)?"rtl":"ltr",void localStorage.setItem("preferredLanguage",t);var t},className:"language-select",children:Object.entries(en).map((([e,{name:a,nativeName:t}])=>x.jsxs("option",{value:e,children:[t," (",a,")"]},e)))})})};function nn(){const{t:e}=Na(),a=[{path:"/",label:e("nav.home")},{path:"/science",label:e("nav.airQuality")},{path:"/faq",label:e("nav.faq","常见问题")},{path:"/about",label:e("nav.about")},{path:"/contact",label:e("nav.contact")}];return x.jsxs("nav",{className:"flex items-center justify-between py-4 bg-white shadow mb-8 px-8 rounded-xl max-w-6xl mx-auto","aria-label":"主导航",children:[x.jsxs(la,{to:"/",className:"flex items-center gap-2 font-bold text-xl text-blue-700 hover:text-blue-900 whitespace-nowrap",children:[x.jsx(o,{className:"h-7 w-7 text-blue-600"}),"AirQuality.Tools"]}),x.jsxs("div",{className:"flex-1 flex items-center justify-between ml-8",children:[x.jsx("div",{className:"flex gap-6 whitespace-nowrap",children:a.map((e=>x.jsx(la,{to:e.path,className:"font-medium text-gray-700 hover:text-blue-600",children:e.label},e.path)))}),x.jsx("div",{className:"ml-8",children:x.jsx(tn,{})})]})]})}function on(){return x.jsxs("main",{className:"max-w-3xl mx-auto p-6 bg-white rounded-xl shadow",children:[x.jsx("h1",{className:"text-2xl font-bold mb-4",children:"空气质量查询"}),x.jsx("p",{className:"text-gray-700 mb-4",children:"输入城市名称即可查询该城市的实时空气质量指数（AQI）及主要污染物浓度。"}),x.jsxs("ul",{className:"list-disc pl-6 text-gray-700",children:[x.jsx("li",{children:"支持全球主要城市"}),x.jsx("li",{children:"数据来源权威，更新及时"}),x.jsx("li",{children:"可查看PM2.5、PM10、O₃、NO₂、SO₂、CO等详细数据"})]})]})}function rn(){const{t:e}=Na();return x.jsxs("main",{className:"max-w-3xl mx-auto p-6 bg-white rounded-xl shadow",children:[x.jsx("h1",{className:"text-2xl font-bold mb-4",children:e("about.title")}),x.jsx("p",{className:"text-gray-700 mb-4",children:e("about.description")}),x.jsx("p",{className:"text-gray-700",children:e("about.team")})]})}function sn(){const{t:e}=Na();return x.jsxs("main",{className:"max-w-3xl mx-auto p-6 bg-white rounded-xl shadow",children:[x.jsx("h1",{className:"text-2xl font-bold mb-4",children:e("contact.title")}),x.jsx("p",{className:"text-gray-700 mb-4",children:e("contact.intro")}),x.jsxs("ul",{className:"list-disc pl-6 text-gray-700",children:[x.jsxs("li",{children:[e("contact.email"),": contact@airquality.tools"]}),x.jsxs("li",{children:[e("contact.wechat"),": AirQualityTools"]}),x.jsx("li",{children:e("contact.feedback")})]})]})}const ln={"北京":{aqi:125,pm25:85,pm10:95,o3:45,no2:35,so2:12,co:.8,temp:22,humidity:65},"上海":{aqi:95,pm25:65,pm10:75,o3:50,no2:30,so2:8,co:.6,temp:25,humidity:70},"广州":{aqi:85,pm25:55,pm10:65,o3:60,no2:25,so2:6,co:.5,temp:28,humidity:75},"深圳":{aqi:80,pm25:50,pm10:60,o3:55,no2:20,so2:5,co:.4,temp:27,humidity:72},"东京":{aqi:65,pm25:35,pm10:45,o3:40,no2:25,so2:4,co:.3,temp:20,humidity:60},"纽约":{aqi:75,pm25:45,pm10:55,o3:35,no2:30,so2:7,co:.5,temp:18,humidity:55},"伦敦":{aqi:70,pm25:40,pm10:50,o3:30,no2:35,so2:8,co:.4,temp:15,humidity:80},"巴黎":{aqi:90,pm25:60,pm10:70,o3:45,no2:40,so2:10,co:.6,temp:17,humidity:65}},un={"zh-CN":"中国","zh-TW":"中国",en:"United States",ja:"Japan",fr:"France",de:"Germany",es:"Spain",ar:"Egypt",hi:"India",km:"Cambodia",ur:"Pakistan",el:"Greece",tr:"Turkey",ne:"Nepal",bs:"Bosnia and Herzegovina",sr:"Serbia",hr:"Croatia",ga:"Ireland"},dn={"中国":["beijing","shanghai","guangzhou","shenzhen","chengdu","chongqing","hangzhou","xian"],China:["beijing","shanghai","guangzhou","shenzhen","chengdu","chongqing","hangzhou","xian"],"United States":["newyork","losangeles","chicago","houston","phoenix","philadelphia","sanantonio","sandiego"],"美国":["newyork","losangeles","chicago","houston","phoenix","philadelphia","sanantonio","sandiego"],"United Kingdom":["london","manchester","birmingham","liverpool","leeds","glasgow","sheffield","bristol"],"英国":["london","manchester","birmingham","liverpool","leeds","glasgow","sheffield","bristol"],France:["paris","marseille","lyon","toulouse","nice","nantes","strasbourg","montpellier"],"法国":["paris","marseille","lyon","toulouse","nice","nantes","strasbourg","montpellier"],Egypt:["cairo","alexandria","giza","shubra","portsaid","suez","luxor","asyut"],"埃及":["cairo","alexandria","giza","shubra","portsaid","suez","luxor","asyut"],"Saudi Arabia":["riyadh","jeddah","mecca","medina","dammam","khobar","tabuk","abha"],"沙特阿拉伯":["riyadh","jeddah","mecca","medina","dammam","khobar","tabuk","abha"],India:["delhi","mumbai","bangalore","kolkata","chennai","hyderabad","pune","ahmedabad"],"印度":["delhi","mumbai","bangalore","kolkata","chennai","hyderabad","pune","ahmedabad"],Cambodia:["phnompenh","siemreap","battambang","sihanoukville","kampongcham","kampot","takhmau","poipet"],"柬埔寨":["phnompenh","siemreap","battambang","sihanoukville","kampongcham","kampot","takhmau","poipet"],Pakistan:["karachi","lahore","faisalabad","rawalpindi","multan","hyderabadpk","gujranwala","peshawar"],"巴基斯坦":["karachi","lahore","faisalabad","rawalpindi","multan","hyderabadpk","gujranwala","peshawar"],Greece:["athens","thessaloniki","patras","heraklion","larissa","volos","ioannina","chania"],"希腊":["athens","thessaloniki","patras","heraklion","larissa","volos","ioannina","chania"],Turkey:["istanbul","ankara","izmir","bursa","adana","gaziantep","konya","antalya"],"土耳其":["istanbul","ankara","izmir","bursa","adana","gaziantep","konya","antalya"],Nepal:["kathmandu","pokhara","lalitpur","bharatpur","biratnagar","birgunj","dharan","bhaktapur"],"尼泊尔":["kathmandu","pokhara","lalitpur","bharatpur","biratnagar","birgunj","dharan","bhaktapur"],"Bosnia and Herzegovina":["sarajevo","banjaluka","tuzla","zenica","mostar","bijeljina","prijedor","brcko"],"波黑":["sarajevo","banjaluka","tuzla","zenica","mostar","bijeljina","prijedor","brcko"],Serbia:["belgrade","novisad","nis","kragujevac","subotica","zrenjanin","pancevo","cacak"],"塞尔维亚":["belgrade","novisad","nis","kragujevac","subotica","zrenjanin","pancevo","cacak"],Croatia:["zagreb","split","rijeka","osijek","zadar","slavonskibrod","pula","karlovac"],"克罗地亚":["zagreb","split","rijeka","osijek","zadar","slavonskibrod","pula","karlovac"],Ireland:["dublin","cork","limerick","galway","waterford","drogheda","dundalk","swords"],"爱尔兰":["dublin","cork","limerick","galway","waterford","drogheda","dundalk","swords"],Japan:["tokyo","osaka","yokohama","nagoya","sapporo","fukuoka","kobe","kyoto"],"日本":["tokyo","osaka","yokohama","nagoya","sapporo","fukuoka","kobe","kyoto"],Germany:["berlin","hamburg","munich","cologne","frankfurt","stuttgart","dusseldorf","dortmund"],"德国":["berlin","hamburg","munich","cologne","frankfurt","stuttgart","dusseldorf","dortmund"],Spain:["madrid","barcelona","valencia","seville","zaragoza","malaga","murcia","palma"],"西班牙":["madrid","barcelona","valencia","seville","zaragoza","malaga","murcia","palma"]};function cn(){const{t:e,i18n:a}=Na(),[n,i]=t.useState(""),[h,p]=t.useState(null),[m,g]=t.useState(!1),[f,b]=t.useState(""),[y,k]=t.useState(""),[v,w]=t.useState(["newyork","losangeles","chicago","houston","phoenix","philadelphia","sanantonio","sandiego"]);t.useEffect((()=>{(async()=>{try{const e=await async function(){return{city:"北京",country:"中国"}}();e&&e.city&&(i(e.city),j(e.city)),e&&e.country&&(k(e.country),w(dn[e.country]||["newyork","losangeles","chicago","houston","phoenix","philadelphia","sanantonio","sandiego"]))}catch(gn){}})()}),[]),t.useEffect((()=>{let e=y;e||(e=un[a.language]||"United States"),w(dn[e]||dn["United States"])}),[a.language,y]);const j=async a=>{const t="string"==typeof a?a:n;if(!t.trim())return void b(e("common.error")+": "+e("home.searchPlaceholder"));g(!0),b(""),await new Promise((e=>setTimeout(e,800)));const i=Object.keys(ln).find((e=>e.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(e.toLowerCase())));if(i)p({...ln[i],cityName:i});else{const e=Math.floor(200*Math.random())+20;p({cityName:t,aqi:e,pm25:Math.floor(100*Math.random())+10,pm10:Math.floor(120*Math.random())+15,o3:Math.floor(80*Math.random())+20,no2:Math.floor(60*Math.random())+10,so2:Math.floor(20*Math.random())+2,co:(2*Math.random()+.1).toFixed(1),temp:Math.floor(30*Math.random())+5,humidity:Math.floor(40*Math.random())+40})}g(!1)},S=e=>{e&&e.preventDefault(),j()},z=h?(P=h.aqi)<=50?{level:"优",color:"text-green-600",bg:"bg-green-100",icon:u}:P<=100?{level:"良",color:"text-yellow-600",bg:"bg-yellow-100",icon:u}:P<=150?{level:"轻度污染",color:"text-orange-600",bg:"bg-orange-100",icon:d}:P<=200?{level:"中度污染",color:"text-red-600",bg:"bg-red-100",icon:d}:P<=300?{level:"重度污染",color:"text-purple-600",bg:"bg-purple-100",icon:c}:{level:"严重污染",color:"text-red-800",bg:"bg-red-200",icon:c}:null;var P;const N=null==z?void 0:z.icon;return x.jsx("div",{className:"max-w-4xl mx-auto p-6 bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen",children:x.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8",children:[x.jsxs("div",{className:"text-center mb-8",children:[x.jsxs("div",{className:"flex items-center justify-center mb-4",children:[x.jsx(o,{className:"h-8 w-8 text-blue-600 mr-3"}),x.jsx("h1",{className:"text-3xl font-bold text-gray-800",children:e("home.title","Air Quality 空气质量查询")})]}),x.jsx("p",{className:"text-gray-600",children:e("home.subtitle","AirQuality.Tools 提供全球主要城市 air quality（空气质量）实时监测、AQI、PM2.5、PM10 等多项空气污染物数据，助您关注健康生活。")})]}),x.jsx("div",{className:"mb-8",children:x.jsxs("div",{className:"flex gap-4 max-w-md mx-auto",children:[x.jsxs("div",{className:"flex-1 relative",children:[x.jsx(r,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5"}),x.jsx("input",{type:"text",value:n,onChange:e=>i(e.target.value),onKeyPress:e=>"Enter"===e.key&&S(e),placeholder:e("home.searchPlaceholder","输入城市名称（如：北京、东京、纽约）"),className:"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none"})]}),x.jsx("button",{onClick:S,disabled:m,className:"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium",children:m?e("common.loading","查询中..."):e("common.search","查询")})]})}),f&&x.jsx("div",{className:"max-w-md mx-auto mb-6 p-4 bg-red-100 border border-red-300 rounded-lg text-red-700 text-center",children:f}),x.jsxs("div",{className:"mb-8",children:[x.jsx("h3",{className:"text-lg font-semibold text-gray-700 mb-4 text-center",children:e("home.popularCities")}),x.jsx("div",{className:"flex flex-wrap justify-center gap-2",children:v.map((a=>x.jsx("button",{onClick:()=>{i(e(`home.cities.${a}`))},className:"px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-full text-sm text-gray-700 transition-colors",children:e(`home.cities.${a}`)},a)))})]}),h&&x.jsxs("div",{className:"space-y-6",children:[x.jsxs("div",{className:`p-6 rounded-xl ${null==z?void 0:z.bg} border-l-4 border-l-blue-500`,children:[x.jsxs("div",{className:"flex items-center justify-between mb-4",children:[x.jsxs("h2",{className:"text-2xl font-bold text-gray-800",children:[h.cityName," 空气质量"]}),x.jsxs("div",{className:"flex items-center",children:[N&&x.jsx(N,{className:`h-6 w-6 ${null==z?void 0:z.color} mr-2`}),x.jsx("span",{className:`text-lg font-semibold ${null==z?void 0:z.color}`,children:null==z?void 0:z.level})]})]}),x.jsxs("div",{className:"text-center",children:[x.jsx("div",{className:"text-5xl font-bold text-gray-800 mb-2",children:h.aqi}),x.jsx("div",{className:"text-gray-600",children:"空气质量指数 (AQI)"})]})]}),x.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:[x.jsxs("div",{className:"bg-gradient-to-br from-red-50 to-red-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"PM2.5"}),x.jsx("div",{className:"w-3 h-3 bg-red-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.pm25}),x.jsx("div",{className:"text-xs text-gray-600",children:"μg/m³"})]}),x.jsxs("div",{className:"bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"PM10"}),x.jsx("div",{className:"w-3 h-3 bg-orange-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.pm10}),x.jsx("div",{className:"text-xs text-gray-600",children:"μg/m³"})]}),x.jsxs("div",{className:"bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"O₃"}),x.jsx("div",{className:"w-3 h-3 bg-blue-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.o3}),x.jsx("div",{className:"text-xs text-gray-600",children:"μg/m³"})]}),x.jsxs("div",{className:"bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"NO₂"}),x.jsx("div",{className:"w-3 h-3 bg-green-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.no2}),x.jsx("div",{className:"text-xs text-gray-600",children:"μg/m³"})]}),x.jsxs("div",{className:"bg-gradient-to-br from-yellow-50 to-yellow-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"SO₂"}),x.jsx("div",{className:"w-3 h-3 bg-yellow-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.so2}),x.jsx("div",{className:"text-xs text-gray-600",children:"μg/m³"})]}),x.jsxs("div",{className:"bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center justify-between mb-2",children:[x.jsx("span",{className:"text-sm font-medium text-gray-700",children:"CO"}),x.jsx("div",{className:"w-3 h-3 bg-purple-400 rounded-full"})]}),x.jsx("div",{className:"text-2xl font-bold text-gray-800",children:h.co}),x.jsx("div",{className:"text-xs text-gray-600",children:"mg/m³"})]})]}),x.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[x.jsxs("div",{className:"bg-gradient-to-br from-cyan-50 to-cyan-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center mb-2",children:[x.jsx(s,{className:"h-5 w-5 text-cyan-600 mr-2"}),x.jsx("span",{className:"font-medium text-gray-700",children:"温度"})]}),x.jsxs("div",{className:"text-2xl font-bold text-gray-800",children:[h.temp,"°C"]})]}),x.jsxs("div",{className:"bg-gradient-to-br from-teal-50 to-teal-100 p-4 rounded-lg border",children:[x.jsxs("div",{className:"flex items-center mb-2",children:[x.jsx(l,{className:"h-5 w-5 text-teal-600 mr-2"}),x.jsx("span",{className:"font-medium text-gray-700",children:"湿度"})]}),x.jsxs("div",{className:"text-2xl font-bold text-gray-800",children:[h.humidity,"%"]})]})]}),x.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg",children:[x.jsx("h3",{className:"font-semibold text-gray-700 mb-3",children:"空气质量指数说明"}),x.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-2 text-xs",children:[x.jsxs("div",{className:"bg-green-100 text-green-800 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"0-50"}),x.jsx("div",{children:"优"})]}),x.jsxs("div",{className:"bg-yellow-100 text-yellow-800 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"51-100"}),x.jsx("div",{children:"良"})]}),x.jsxs("div",{className:"bg-orange-100 text-orange-800 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"101-150"}),x.jsx("div",{children:"轻度污染"})]}),x.jsxs("div",{className:"bg-red-100 text-red-800 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"151-200"}),x.jsx("div",{children:"中度污染"})]}),x.jsxs("div",{className:"bg-purple-100 text-purple-800 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"201-300"}),x.jsx("div",{children:"重度污染"})]}),x.jsxs("div",{className:"bg-red-200 text-red-900 p-2 rounded text-center",children:[x.jsx("div",{className:"font-semibold",children:"300+"}),x.jsx("div",{children:"严重污染"})]})]})]})]}),x.jsx("div",{className:"mt-8 text-center text-sm text-gray-500",children:x.jsx("p",{children:e("home.dataDisclaimer")})}),x.jsxs("div",{className:"max-w-3xl mx-auto mt-12 p-6 bg-white rounded-xl shadow",children:[x.jsx("h2",{className:"text-2xl font-bold mb-4",children:e("faq.title","Air Quality 常见问题")}),x.jsxs("div",{children:[x.jsx("h3",{className:"font-semibold mt-4",children:e("faq.whatIsAQI.question")}),x.jsx("p",{className:"text-gray-700",children:e("faq.whatIsAQI.answer")}),x.jsx("h3",{className:"font-semibold mt-4",children:e("faq.whatIsPM25.question")}),x.jsx("p",{className:"text-gray-700",children:e("faq.whatIsPM25.answer")}),x.jsx("h3",{className:"font-semibold mt-4",children:e("faq.dataSource.question")}),x.jsx("p",{className:"text-gray-700",children:e("faq.dataSource.answer")}),x.jsx("h3",{className:"font-semibold mt-4",children:e("faq.howToQuery.question")}),x.jsx("p",{className:"text-gray-700",children:e("faq.howToQuery.answer")}),x.jsx("h3",{className:"font-semibold mt-4",children:e("faq.healthImpact.question")}),x.jsx("p",{className:"text-gray-700",children:e("faq.healthImpact.answer")}),x.jsx("div",{className:"text-gray-500 text-xs mt-6",children:e("home.dataDisclaimer")})]})]})]})})}const hn=class e{constructor(){a(this,"metrics",{fcp:0,lcp:0,fid:0,cls:0}),this.initObservers()}static getInstance(){return e.instance||(e.instance=new e),e.instance}initObservers(){new PerformanceObserver((e=>{const a=e.getEntries();a.length>0&&(this.metrics.fcp=a[0].startTime,this.logMetric("FCP",this.metrics.fcp))})).observe({entryTypes:["paint"]}),new PerformanceObserver((e=>{const a=e.getEntries();if(a.length>0){const e=a[a.length-1];this.metrics.lcp=e.startTime,this.logMetric("LCP",this.metrics.lcp)}})).observe({entryTypes:["largest-contentful-paint"]}),new PerformanceObserver((e=>{const a=e.getEntries();a.length>0&&(this.metrics.fid=a[0].duration,this.logMetric("FID",this.metrics.fid))})).observe({entryTypes:["first-input"]}),new PerformanceObserver((e=>{let a=0;for(const t of e.getEntries()){const e=t;e.hadRecentInput||(a+=e.value)}this.metrics.cls=a,this.logMetric("CLS",this.metrics.cls)})).observe({entryTypes:["layout-shift"]})}logMetric(e,a){}getMetrics(){return{...this.metrics}}logError(e){}};a(hn,"instance");const pn=hn.getInstance(),mn=()=>(Na(),t.useEffect((()=>{try{pn.getMetrics()}catch(e){pn.logError(e)}}),[]),x.jsx(ra,{children:x.jsxs("div",{className:"min-h-screen bg-gray-50",children:[x.jsx(nn,{}),x.jsx("main",{className:"container mx-auto px-4 py-8",children:x.jsxs(Te,{children:[x.jsx(Oe,{path:"/",element:x.jsx(cn,{})}),x.jsx(Oe,{path:"/query",element:x.jsx(on,{})}),x.jsx(Oe,{path:"/about",element:x.jsx(rn,{})}),x.jsx(Oe,{path:"/contact",element:x.jsx(sn,{})})]})})]})}));w.createRoot(document.getElementById("root")).render(x.jsx(i.StrictMode,{children:x.jsx(mn,{})}));
//# sourceMappingURL=index-7d2c0dee.js.map
